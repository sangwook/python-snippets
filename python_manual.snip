







snippet _winreg_CloseKey hkey
abbr Closes a previously opened registry key.  The hkey argument specifies apreviously opened key.
alias CloseKey
    _winreg.CloseKey(${1:hkey})
    # Closes a previously opened registry key.  The hkey argument specifies apreviously opened key.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_ConnectRegistry computer_name_key
abbr Establishes a connection to a predefined registry handle on another computer,and returns a handle object.
alias ConnectRegistry
    _winreg.ConnectRegistry(${1:computer_name}, ${2:key})
    # Establishes a connection to a predefined registry handle on another computer,and returns a handle object.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_CreateKey key_sub_key
abbr Creates or opens the specified key, returning ahandle object.
alias CreateKey
    _winreg.CreateKey(${1:key}, ${2:sub_key})
    # Creates or opens the specified key, returning ahandle object.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_CreateKeyEx key_sub_key_res_sam
abbr Creates or opens the specified key, returning ahandle object.
alias CreateKeyEx
    _winreg.CreateKeyEx(${1:key}, ${2:sub_key}, ${3:res}, ${4:sam})
    # Creates or opens the specified key, returning ahandle object.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_DeleteKey key_sub_key
abbr Deletes the specified key.
alias DeleteKey
    _winreg.DeleteKey(${1:key}, ${2:sub_key})
    # Deletes the specified key.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_DeleteKeyEx key_sub_key_sam_res
abbr Deletes the specified key.
alias DeleteKeyEx
    _winreg.DeleteKeyEx(${1:key}, ${2:sub_key}, ${3:sam}, ${4:res})
    # Deletes the specified key.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_DeleteValue key_value
abbr Removes a named value from a registry key.
alias DeleteValue
    _winreg.DeleteValue(${1:key}, ${2:value})
    # Removes a named value from a registry key.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_EnumKey key_index
abbr Enumerates subkeys of an open registry key, returning a string.
alias EnumKey
    _winreg.EnumKey(${1:key}, ${2:index})
    # Enumerates subkeys of an open registry key, returning a string.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_EnumValue key_index
abbr Enumerates values of an open registry key, returning a tuple.
alias EnumValue
    _winreg.EnumValue(${1:key}, ${2:index})
    # Enumerates values of an open registry key, returning a tuple.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_ExpandEnvironmentStrings unicode
abbr Expands environment variable placeholders %NAME% in unicode strings likeREG_EXPAND_SZ:
alias ExpandEnvironmentStrings
    _winreg.ExpandEnvironmentStrings(${1:unicode})
    # Expands environment variable placeholders %NAME% in unicode strings likeREG_EXPAND_SZ:
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_FlushKey key
abbr Writes all the attributes of a key to the registry.
alias FlushKey
    _winreg.FlushKey(${1:key})
    # Writes all the attributes of a key to the registry.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_LoadKey key_sub_key_file_name
abbr Creates a subkey under the specified key and stores registration informationfrom a specified file into that subkey.
alias LoadKey
    _winreg.LoadKey(${1:key}, ${2:sub_key}, ${3:file_name})
    # Creates a subkey under the specified key and stores registration informationfrom a specified file into that subkey.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_OpenKey key_sub_key_res_sam
abbr Opens the specified key, returning a handle object.
alias OpenKey
    _winreg.OpenKey(${1:key}, ${2:sub_key}, ${3:res}, ${4:sam})
    # Opens the specified key, returning a handle object.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_OpenKeyEx 
abbr The functionality of OpenKeyEx() is provided via OpenKey(),by the use of default arguments.
alias OpenKeyEx
    _winreg.OpenKeyEx()
    # The functionality of OpenKeyEx() is provided via OpenKey(),by the use of default arguments.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_QueryInfoKey key
abbr Returns information about a key, as a tuple.
alias QueryInfoKey
    _winreg.QueryInfoKey(${1:key})
    # Returns information about a key, as a tuple.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_QueryValue key_sub_key
abbr Retrieves the unnamed value for a key, as a string.
alias QueryValue
    _winreg.QueryValue(${1:key}, ${2:sub_key})
    # Retrieves the unnamed value for a key, as a string.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_QueryValueEx key_value_name
abbr Retrieves the type and data for a specified value name associated withan open registry key.
alias QueryValueEx
    _winreg.QueryValueEx(${1:key}, ${2:value_name})
    # Retrieves the type and data for a specified value name associated withan open registry key.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_SaveKey key_file_name
abbr Saves the specified key, and all its subkeys to the specified file.
alias SaveKey
    _winreg.SaveKey(${1:key}, ${2:file_name})
    # Saves the specified key, and all its subkeys to the specified file.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_SetValue key_sub_key_type_value
abbr Associates a value with a specified key.
alias SetValue
    _winreg.SetValue(${1:key}, ${2:sub_key}, ${3:type}, ${4:value})
    # Associates a value with a specified key.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_SetValueEx key_value_name_reserved_type_value
abbr Stores data in the value field of an open registry key.
alias SetValueEx
    _winreg.SetValueEx(${1:key}, ${2:value_name}, ${3:reserved}, ${4:type}, ${5:value})
    # Stores data in the value field of an open registry key.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_DisableReflectionKey key
abbr Disables registry reflection for 32-bit processes running on a 64-bitoperating system.
alias DisableReflectionKey
    _winreg.DisableReflectionKey(${1:key})
    # Disables registry reflection for 32-bit processes running on a 64-bitoperating system.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_EnableReflectionKey key
abbr Restores registry reflection for the specified disabled key.
alias EnableReflectionKey
    _winreg.EnableReflectionKey(${1:key})
    # Restores registry reflection for the specified disabled key.
    # https://docs.python.org/2/library/_winreg.html
snippet _winreg_QueryReflectionKey key
abbr Determines the reflection state for the specified key.
alias QueryReflectionKey
    _winreg.QueryReflectionKey(${1:key})
    # Determines the reflection state for the specified key.
    # https://docs.python.org/2/library/_winreg.html

snippet abc_abstractmethod function
abbr A decorator indicating abstract methods.
alias abstractmethod
    abc.abstractmethod(${1:function})
    # A decorator indicating abstract methods.
    # https://docs.python.org/2/library/abc.html
snippet abc_abstractproperty fget_fset_fdel_doc
abbr A subclass of the built-in property(), indicating an abstract property.
alias abstractproperty
    abc.abstractproperty(${1:fget}, ${2:fset}, ${3:fdel}, ${4:doc})
    # A subclass of the built-in property(), indicating an abstract property.
    # https://docs.python.org/2/library/abc.html

snippet aepack_pack x_forcetype
abbr Returns an AEDesc object  containing a conversion of Python value x. Ifforcetype is provided it specifies the descriptor type of the result.
alias pack
    aepack.pack(${1:x}, ${2:forcetype})
    # Returns an AEDesc object  containing a conversion of Python value x. Ifforcetype is provided it specifies the descriptor type of the result.
    # https://docs.python.org/2/library/aepack.html
snippet aepack_unpack x_formodulename
abbr x must be an object of type AEDesc. This function returns a Pythonobject representation of the data in the Apple Event descriptor x. SimpleA
alias unpack
    aepack.unpack(${1:x}, ${2:formodulename})
    # x must be an object of type AEDesc. This function returns a Pythonobject representation of the data in the Apple Event descriptor x. SimpleA
    # https://docs.python.org/2/library/aepack.html

snippet aetools_packevent ae_parameters_attributes
abbr Stores parameters and attributes in a pre-created Carbon.AE.AEDesc object.parameters and attributes are  dictionaries mapping 4-character OS
alias packevent
    aetools.packevent(${1:ae}, ${2:parameters}, ${3:attributes})
    # Stores parameters and attributes in a pre-created Carbon.AE.AEDesc object.parameters and attributes are  dictionaries mapping 4-character OS
    # https://docs.python.org/2/library/aetools.html
snippet aetools_unpackevent ae_formodulename
abbr Recursively unpacks a Carbon.AE.AEDesc event to Python objects. The functionreturns the parameter dictionary and the attribute dictionary. T
alias unpackevent
    aetools.unpackevent(${1:ae}, ${2:formodulename})
    # Recursively unpacks a Carbon.AE.AEDesc event to Python objects. The functionreturns the parameter dictionary and the attribute dictionary. T
    # https://docs.python.org/2/library/aetools.html
snippet aetools_keysubst arguments_keydict
abbr Converts a Python keyword argument dictionary arguments to the formatrequired by packevent by replacing the keys, which are Python identifie
alias keysubst
    aetools.keysubst(${1:arguments}, ${2:keydict})
    # Converts a Python keyword argument dictionary arguments to the formatrequired by packevent by replacing the keys, which are Python identifie
    # https://docs.python.org/2/library/aetools.html
snippet aetools_enumsubst arguments_key_edict
abbr If the arguments dictionary contains an entry for key convert the valuefor that entry according to dictionary edict. This converts human-rea
alias enumsubst
    aetools.enumsubst(${1:arguments}, ${2:key}, ${3:edict})
    # If the arguments dictionary contains an entry for key convert the valuefor that entry according to dictionary edict. This converts human-rea
    # https://docs.python.org/2/library/aetools.html



snippet aifc_open file_mode
abbr Open an AIFF or AIFF-C file and return an object instance with methods that aredescribed below.  The argument file is either a string naming
alias open
    aifc.open(${1:file}, ${2:mode})
    # Open an AIFF or AIFF-C file and return an object instance with methods that aredescribed below.  The argument file is either a string naming
    # https://docs.python.org/2/library/aifc.html

snippet al_openport name_direction_config
abbr The name and direction arguments are strings.  The optional config argument isa configuration object as returned by newconfig().  The return
alias openport
    al.openport(${1:name}, ${2:direction}, ${3:config})
    # The name and direction arguments are strings.  The optional config argument isa configuration object as returned by newconfig().  The return
    # https://docs.python.org/2/library/al.html
snippet al_newconfig 
abbr The return value is a new audio configuration object; methods of audioconfiguration objects are described below.
alias newconfig
    al.newconfig()
    # The return value is a new audio configuration object; methods of audioconfiguration objects are described below.
    # https://docs.python.org/2/library/al.html
snippet al_queryparams device
abbr The device argument is an integer.  The return value is a list of integerscontaining the data returned by ALqueryparams().
alias queryparams
    al.queryparams(${1:device})
    # The device argument is an integer.  The return value is a list of integerscontaining the data returned by ALqueryparams().
    # https://docs.python.org/2/library/al.html
snippet al_getparams device_list
abbr The device argument is an integer.  The list argument is a list such asreturned by queryparams(); it is modified in place (!).
alias getparams
    al.getparams(${1:device}, ${2:list})
    # The device argument is an integer.  The list argument is a list such asreturned by queryparams(); it is modified in place (!).
    # https://docs.python.org/2/library/al.html
snippet al_setparams device_list
abbr The device argument is an integer.  The list argument is a list such asreturned by queryparams().
alias setparams
    al.setparams(${1:device}, ${2:list})
    # The device argument is an integer.  The list argument is a list such asreturned by queryparams().
    # https://docs.python.org/2/library/al.html



snippet anydbm_open filename_flag_mode
abbr Open the database file filename and return a corresponding object.
alias open
    anydbm.open(${1:filename}, ${2:flag}, ${3:mode})
    # Open the database file filename and return a corresponding object.
    # https://docs.python.org/2/library/anydbm.html
snippet anydbm_close 
abbr Close the anydbm database.
alias close
    anydbm.close()
    # Close the anydbm database.
    # https://docs.python.org/2/library/anydbm.html







snippet ast_parse source_filename='<unknown>'_mode='exec'
abbr Parse the source into an AST node.  Equivalent to compile(source,filename, mode, ast.PyCF_ONLY_AST).
alias parse
    ast.parse(${1:source}, ${2:filename='<unknown>'}, ${3:mode='exec'})
    # Parse the source into an AST node.  Equivalent to compile(source,filename, mode, ast.PyCF_ONLY_AST).
    # https://docs.python.org/2/library/ast.html
snippet ast_literal_eval node_or_string
abbr Safely evaluate an expression node or a Unicode or Latin-1 encoded stringcontaining a Python expression.  The string or node provided may on
alias literal_eval
    ast.literal_eval(${1:node_or_string})
    # Safely evaluate an expression node or a Unicode or Latin-1 encoded stringcontaining a Python expression.  The string or node provided may on
    # https://docs.python.org/2/library/ast.html
snippet ast_get_docstring node_clean=True
abbr Return the docstring of the given node (which must be aFunctionDef, ClassDef or Module node), or Noneif it has no docstring.  If clean is tr
alias get_docstring
    ast.get_docstring(${1:node}, ${2:clean=True})
    # Return the docstring of the given node (which must be aFunctionDef, ClassDef or Module node), or Noneif it has no docstring.  If clean is tr
    # https://docs.python.org/2/library/ast.html
snippet ast_fix_missing_locations node
abbr When you compile a node tree with compile(), the compiler expectslineno and col_offset attributes for every node that supportsthem.  This is
alias fix_missing_locations
    ast.fix_missing_locations(${1:node})
    # When you compile a node tree with compile(), the compiler expectslineno and col_offset attributes for every node that supportsthem.  This is
    # https://docs.python.org/2/library/ast.html
snippet ast_increment_lineno node_n=1
abbr Increment the line number of each node in the tree starting at node by n.This is useful to “move code” to a different location in a file.
alias increment_lineno
    ast.increment_lineno(${1:node}, ${2:n=1})
    # Increment the line number of each node in the tree starting at node by n.This is useful to “move code” to a different location in a file.
    # https://docs.python.org/2/library/ast.html
snippet ast_copy_location new_node_old_node
abbr Copy source location (lineno and col_offset) from old_nodeto new_node if possible, and return new_node.
alias copy_location
    ast.copy_location(${1:new_node}, ${2:old_node})
    # Copy source location (lineno and col_offset) from old_nodeto new_node if possible, and return new_node.
    # https://docs.python.org/2/library/ast.html
snippet ast_iter_fields node
abbr Yield a tuple of (fieldname, value) for each field in node._fieldsthat is present on node.
alias iter_fields
    ast.iter_fields(${1:node})
    # Yield a tuple of (fieldname, value) for each field in node._fieldsthat is present on node.
    # https://docs.python.org/2/library/ast.html
snippet ast_iter_child_nodes node
abbr Yield all direct child nodes of node, that is, all fields that are nodesand all items of fields that are lists of nodes.
alias iter_child_nodes
    ast.iter_child_nodes(${1:node})
    # Yield all direct child nodes of node, that is, all fields that are nodesand all items of fields that are lists of nodes.
    # https://docs.python.org/2/library/ast.html
snippet ast_walk node
abbr Recursively yield all descendant nodes in the tree starting at node(including node itself), in no specified order.  This is useful if you on
alias walk
    ast.walk(${1:node})
    # Recursively yield all descendant nodes in the tree starting at node(including node itself), in no specified order.  This is useful if you on
    # https://docs.python.org/2/library/ast.html
snippet ast_dump node_annotate_fields=True_include_attributes=False
abbr Return a formatted dump of the tree in node.  This is mainly useful fordebugging purposes.  The returned string will show the names and the 
alias dump
    ast.dump(${1:node}, ${2:annotate_fields=True}, ${3:include_attributes=False})
    # Return a formatted dump of the tree in node.  This is mainly useful fordebugging purposes.  The returned string will show the names and the 
    # https://docs.python.org/2/library/ast.html



snippet asyncore_loop timeout_use_poll_map_count
abbr Enter a polling loop that terminates after count passes or all openchannels have been closed.  All arguments are optional.  The countparamet
alias loop
    asyncore.loop(${1:timeout}, ${2:use_poll}, ${3:map}, ${4:count})
    # Enter a polling loop that terminates after count passes or all openchannels have been closed.  All arguments are optional.  The countparamet
    # https://docs.python.org/2/library/asyncore.html

snippet atexit_register func_*args_**kargs
abbr Register func as a function to be executed at termination.  Any optionalarguments that are to be passed to func must be passed as arguments 
alias register
    atexit.register(${1:func}, ${2:*args}, ${3:**kargs})
    # Register func as a function to be executed at termination.  Any optionalarguments that are to be passed to func must be passed as arguments 
    # https://docs.python.org/2/library/atexit.html

snippet audioop_add fragment1_fragment2_width
abbr Return a fragment which is the addition of the two samples passed as parameters.width is the sample width in bytes, either 1, 2 or 4.  Bothf
alias add
    audioop.add(${1:fragment1}, ${2:fragment2}, ${3:width})
    # Return a fragment which is the addition of the two samples passed as parameters.width is the sample width in bytes, either 1, 2 or 4.  Bothf
    # https://docs.python.org/2/library/audioop.html
snippet audioop_adpcm2lin adpcmfragment_width_state
abbr Decode an Intel/DVI ADPCM coded fragment to a linear fragment.  See thedescription of lin2adpcm() for details on ADPCM coding. Return a tupl
alias adpcm2lin
    audioop.adpcm2lin(${1:adpcmfragment}, ${2:width}, ${3:state})
    # Decode an Intel/DVI ADPCM coded fragment to a linear fragment.  See thedescription of lin2adpcm() for details on ADPCM coding. Return a tupl
    # https://docs.python.org/2/library/audioop.html
snippet audioop_alaw2lin fragment_width
abbr Convert sound fragments in a-LAW encoding to linearly encoded sound fragments.a-LAW encoding always uses 8 bits samples, so width refers onl
alias alaw2lin
    audioop.alaw2lin(${1:fragment}, ${2:width})
    # Convert sound fragments in a-LAW encoding to linearly encoded sound fragments.a-LAW encoding always uses 8 bits samples, so width refers onl
    # https://docs.python.org/2/library/audioop.html
snippet audioop_avg fragment_width
abbr Return the average over all samples in the fragment.
alias avg
    audioop.avg(${1:fragment}, ${2:width})
    # Return the average over all samples in the fragment.
    # https://docs.python.org/2/library/audioop.html
snippet audioop_avgpp fragment_width
abbr Return the average peak-peak value over all samples in the fragment. Nofiltering is done, so the usefulness of this routine is questionable.
alias avgpp
    audioop.avgpp(${1:fragment}, ${2:width})
    # Return the average peak-peak value over all samples in the fragment. Nofiltering is done, so the usefulness of this routine is questionable.
    # https://docs.python.org/2/library/audioop.html
snippet audioop_bias fragment_width_bias
abbr Return a fragment that is the original fragment with a bias added to eachsample.  Samples wrap around in case of overflow.
alias bias
    audioop.bias(${1:fragment}, ${2:width}, ${3:bias})
    # Return a fragment that is the original fragment with a bias added to eachsample.  Samples wrap around in case of overflow.
    # https://docs.python.org/2/library/audioop.html
snippet audioop_cross fragment_width
abbr Return the number of zero crossings in the fragment passed as an argument.
alias cross
    audioop.cross(${1:fragment}, ${2:width})
    # Return the number of zero crossings in the fragment passed as an argument.
    # https://docs.python.org/2/library/audioop.html
snippet audioop_findfactor fragment_reference
abbr Return a factor F such that rms(add(fragment, mul(reference, -F))) isminimal, i.e., return the factor with which you should multiply referen
alias findfactor
    audioop.findfactor(${1:fragment}, ${2:reference})
    # Return a factor F such that rms(add(fragment, mul(reference, -F))) isminimal, i.e., return the factor with which you should multiply referen
    # https://docs.python.org/2/library/audioop.html
snippet audioop_findfit fragment_reference
abbr Try to match reference as well as possible to a portion of fragment (whichshould be the longer fragment).  This is (conceptually) done by ta
alias findfit
    audioop.findfit(${1:fragment}, ${2:reference})
    # Try to match reference as well as possible to a portion of fragment (whichshould be the longer fragment).  This is (conceptually) done by ta
    # https://docs.python.org/2/library/audioop.html
snippet audioop_findmax fragment_length
abbr Search fragment for a slice of length length samples (not bytes!) withmaximum energy, i.e., return i for which rms(fragment[i*2:(i+length)*2
alias findmax
    audioop.findmax(${1:fragment}, ${2:length})
    # Search fragment for a slice of length length samples (not bytes!) withmaximum energy, i.e., return i for which rms(fragment[i*2:(i+length)*2
    # https://docs.python.org/2/library/audioop.html
snippet audioop_getsample fragment_width_index
abbr Return the value of sample index from the fragment.
alias getsample
    audioop.getsample(${1:fragment}, ${2:width}, ${3:index})
    # Return the value of sample index from the fragment.
    # https://docs.python.org/2/library/audioop.html
snippet audioop_lin2adpcm fragment_width_state
abbr Convert samples to 4 bit Intel/DVI ADPCM encoding.  ADPCM coding is an adaptivecoding scheme, whereby each 4 bit number is the difference be
alias lin2adpcm
    audioop.lin2adpcm(${1:fragment}, ${2:width}, ${3:state})
    # Convert samples to 4 bit Intel/DVI ADPCM encoding.  ADPCM coding is an adaptivecoding scheme, whereby each 4 bit number is the difference be
    # https://docs.python.org/2/library/audioop.html
snippet audioop_lin2alaw fragment_width
abbr Convert samples in the audio fragment to a-LAW encoding and return this as aPython string.  a-LAW is an audio encoding format whereby you ge
alias lin2alaw
    audioop.lin2alaw(${1:fragment}, ${2:width})
    # Convert samples in the audio fragment to a-LAW encoding and return this as aPython string.  a-LAW is an audio encoding format whereby you ge
    # https://docs.python.org/2/library/audioop.html
snippet audioop_lin2lin fragment_width_newwidth
abbr Convert samples between 1-, 2- and 4-byte formats.
alias lin2lin
    audioop.lin2lin(${1:fragment}, ${2:width}, ${3:newwidth})
    # Convert samples between 1-, 2- and 4-byte formats.
    # https://docs.python.org/2/library/audioop.html
snippet audioop_lin2ulaw fragment_width
abbr Convert samples in the audio fragment to u-LAW encoding and return this as aPython string.  u-LAW is an audio encoding format whereby you ge
alias lin2ulaw
    audioop.lin2ulaw(${1:fragment}, ${2:width})
    # Convert samples in the audio fragment to u-LAW encoding and return this as aPython string.  u-LAW is an audio encoding format whereby you ge
    # https://docs.python.org/2/library/audioop.html
snippet audioop_max fragment_width
abbr Return the maximum of the absolute value of all samples in a fragment.
alias max
    audioop.max(${1:fragment}, ${2:width})
    # Return the maximum of the absolute value of all samples in a fragment.
    # https://docs.python.org/2/library/audioop.html
snippet audioop_maxpp fragment_width
abbr Return the maximum peak-peak value in the sound fragment.
alias maxpp
    audioop.maxpp(${1:fragment}, ${2:width})
    # Return the maximum peak-peak value in the sound fragment.
    # https://docs.python.org/2/library/audioop.html
snippet audioop_minmax fragment_width
abbr Return a tuple consisting of the minimum and maximum values of all samples inthe sound fragment.
alias minmax
    audioop.minmax(${1:fragment}, ${2:width})
    # Return a tuple consisting of the minimum and maximum values of all samples inthe sound fragment.
    # https://docs.python.org/2/library/audioop.html
snippet audioop_mul fragment_width_factor
abbr Return a fragment that has all samples in the original fragment multiplied bythe floating-point value factor.  Samples are truncated in case
alias mul
    audioop.mul(${1:fragment}, ${2:width}, ${3:factor})
    # Return a fragment that has all samples in the original fragment multiplied bythe floating-point value factor.  Samples are truncated in case
    # https://docs.python.org/2/library/audioop.html
snippet audioop_ratecv fragment_width_nchannels_inrate_outrate_state_weightA_weightB
abbr Convert the frame rate of the input fragment.
alias ratecv
    audioop.ratecv(${1:fragment}, ${2:width}, ${3:nchannels}, ${4:inrate}, ${5:outrate}, ${6:state}, ${7:weightA}, ${8:weightB})
    # Convert the frame rate of the input fragment.
    # https://docs.python.org/2/library/audioop.html
snippet audioop_reverse fragment_width
abbr Reverse the samples in a fragment and returns the modified fragment.
alias reverse
    audioop.reverse(${1:fragment}, ${2:width})
    # Reverse the samples in a fragment and returns the modified fragment.
    # https://docs.python.org/2/library/audioop.html
snippet audioop_rms fragment_width
abbr Return the root-mean-square of the fragment, i.e. sqrt(sum(S_i^2)/n).
alias rms
    audioop.rms(${1:fragment}, ${2:width})
    # Return the root-mean-square of the fragment, i.e. sqrt(sum(S_i^2)/n).
    # https://docs.python.org/2/library/audioop.html
snippet audioop_tomono fragment_width_lfactor_rfactor
abbr Convert a stereo fragment to a mono fragment.  The left channel is multiplied bylfactor and the right channel by rfactor before adding the t
alias tomono
    audioop.tomono(${1:fragment}, ${2:width}, ${3:lfactor}, ${4:rfactor})
    # Convert a stereo fragment to a mono fragment.  The left channel is multiplied bylfactor and the right channel by rfactor before adding the t
    # https://docs.python.org/2/library/audioop.html
snippet audioop_tostereo fragment_width_lfactor_rfactor
abbr Generate a stereo fragment from a mono fragment.  Each pair of samples in thestereo fragment are computed from the mono sample, whereby left
alias tostereo
    audioop.tostereo(${1:fragment}, ${2:width}, ${3:lfactor}, ${4:rfactor})
    # Generate a stereo fragment from a mono fragment.  Each pair of samples in thestereo fragment are computed from the mono sample, whereby left
    # https://docs.python.org/2/library/audioop.html
snippet audioop_ulaw2lin fragment_width
abbr Convert sound fragments in u-LAW encoding to linearly encoded sound fragments.u-LAW encoding always uses 8 bits samples, so width refers onl
alias ulaw2lin
    audioop.ulaw2lin(${1:fragment}, ${2:width})
    # Convert sound fragments in u-LAW encoding to linearly encoded sound fragments.u-LAW encoding always uses 8 bits samples, so width refers onl
    # https://docs.python.org/2/library/audioop.html

snippet autoGIL_installAutoGIL 
abbr Install an observer callback in the event loop (CFRunLoop) for the currentthread, that will lock and unlock the Global Interpreter Lock (GIL
alias installAutoGIL
    autoGIL.installAutoGIL()
    # Install an observer callback in the event loop (CFRunLoop) for the currentthread, that will lock and unlock the Global Interpreter Lock (GIL
    # https://docs.python.org/2/library/autogil.html

snippet base64_b64encode s_altchars
abbr Encode a string use Base64.
alias b64encode
    base64.b64encode(${1:s}, ${2:altchars})
    # Encode a string use Base64.
    # https://docs.python.org/2/library/base64.html
snippet base64_b64decode s_altchars
abbr Decode a Base64 encoded string.
alias b64decode
    base64.b64decode(${1:s}, ${2:altchars})
    # Decode a Base64 encoded string.
    # https://docs.python.org/2/library/base64.html
snippet base64_standard_b64encode s
abbr Encode string s using the standard Base64 alphabet.
alias standard_b64encode
    base64.standard_b64encode(${1:s})
    # Encode string s using the standard Base64 alphabet.
    # https://docs.python.org/2/library/base64.html
snippet base64_standard_b64decode s
abbr Decode string s using the standard Base64 alphabet.
alias standard_b64decode
    base64.standard_b64decode(${1:s})
    # Decode string s using the standard Base64 alphabet.
    # https://docs.python.org/2/library/base64.html
snippet base64_urlsafe_b64encode s
abbr Encode string s using a URL-safe alphabet, which substitutes - instead of+ and _ instead of / in the standard Base64 alphabet.  The resultca
alias urlsafe_b64encode
    base64.urlsafe_b64encode(${1:s})
    # Encode string s using a URL-safe alphabet, which substitutes - instead of+ and _ instead of / in the standard Base64 alphabet.  The resultca
    # https://docs.python.org/2/library/base64.html
snippet base64_urlsafe_b64decode s
abbr Decode string s using a URL-safe alphabet, which substitutes - instead of+ and _ instead of / in the standard Base64 alphabet.
alias urlsafe_b64decode
    base64.urlsafe_b64decode(${1:s})
    # Decode string s using a URL-safe alphabet, which substitutes - instead of+ and _ instead of / in the standard Base64 alphabet.
    # https://docs.python.org/2/library/base64.html
snippet base64_b32encode s
abbr Encode a string using Base32.  s is the string to encode.  The encoded stringis returned.
alias b32encode
    base64.b32encode(${1:s})
    # Encode a string using Base32.  s is the string to encode.  The encoded stringis returned.
    # https://docs.python.org/2/library/base64.html
snippet base64_b32decode s_casefold_map01
abbr Decode a Base32 encoded string.
alias b32decode
    base64.b32decode(${1:s}, ${2:casefold}, ${3:map01})
    # Decode a Base32 encoded string.
    # https://docs.python.org/2/library/base64.html
snippet base64_b16encode s
abbr Encode a string using Base16.
alias b16encode
    base64.b16encode(${1:s})
    # Encode a string using Base16.
    # https://docs.python.org/2/library/base64.html
snippet base64_b16decode s_casefold
abbr Decode a Base16 encoded string.
alias b16decode
    base64.b16decode(${1:s}, ${2:casefold})
    # Decode a Base16 encoded string.
    # https://docs.python.org/2/library/base64.html
snippet base64_decode input_output
abbr Decode the contents of the input file and write the resulting binary data tothe output file. input and output must either be file objects or
alias decode
    base64.decode(${1:input}, ${2:output})
    # Decode the contents of the input file and write the resulting binary data tothe output file. input and output must either be file objects or
    # https://docs.python.org/2/library/base64.html
snippet base64_decodestring s
abbr Decode the string s, which must contain one or more lines of base64 encodeddata, and return a string containing the resulting binary data.
alias decodestring
    base64.decodestring(${1:s})
    # Decode the string s, which must contain one or more lines of base64 encodeddata, and return a string containing the resulting binary data.
    # https://docs.python.org/2/library/base64.html
snippet base64_encode input_output
abbr Encode the contents of the input file and write the resulting base64 encodeddata to the output file. input and output must either be file ob
alias encode
    base64.encode(${1:input}, ${2:output})
    # Encode the contents of the input file and write the resulting base64 encodeddata to the output file. input and output must either be file ob
    # https://docs.python.org/2/library/base64.html
snippet base64_encodestring s
abbr Encode the string s, which can contain arbitrary binary data, and return astring containing one or more lines of base64-encoded data.encodes
alias encodestring
    base64.encodestring(${1:s})
    # Encode the string s, which can contain arbitrary binary data, and return astring containing one or more lines of base64-encoded data.encodes
    # https://docs.python.org/2/library/base64.html



snippet Bastion_Bastion object_filter_name_class
abbr Protect the object object, returning a bastion for the object.  Any attempt toaccess one of the object’s attributes will have to be approved
alias Bastion
    Bastion.Bastion(${1:object}, ${2:filter}, ${3:name}, ${4:class})
    # Protect the object object, returning a bastion for the object.  Any attempt toaccess one of the object’s attributes will have to be approved
    # https://docs.python.org/2/library/bastion.html

snippet bdb_checkfuncname b_frame
abbr Check whether we should break here, depending on the way the breakpoint bwas set.
alias checkfuncname
    bdb.checkfuncname(${1:b}, ${2:frame})
    # Check whether we should break here, depending on the way the breakpoint bwas set.
    # https://docs.python.org/2/library/bdb.html
snippet bdb_effective file_line_frame
abbr Determine if there is an effective (active) breakpoint at this line of code.Return a tuple of the breakpoint and a boolean that indicates if
alias effective
    bdb.effective(${1:file}, ${2:line}, ${3:frame})
    # Determine if there is an effective (active) breakpoint at this line of code.Return a tuple of the breakpoint and a boolean that indicates if
    # https://docs.python.org/2/library/bdb.html
snippet bdb_set_trace 
abbr Start debugging with a Bdb instance from caller’s frame.
alias set_trace
    bdb.set_trace()
    # Start debugging with a Bdb instance from caller’s frame.
    # https://docs.python.org/2/library/bdb.html

snippet binascii_a2b_uu string
abbr Convert a single line of uuencoded data back to binary and return the binarydata. Lines normally contain 45 (binary) bytes, except for the l
alias a2b_uu
    binascii.a2b_uu(${1:string})
    # Convert a single line of uuencoded data back to binary and return the binarydata. Lines normally contain 45 (binary) bytes, except for the l
    # https://docs.python.org/2/library/binascii.html
snippet binascii_b2a_uu data
abbr Convert binary data to a line of ASCII characters, the return value is theconverted line, including a newline char. The length of data shoul
alias b2a_uu
    binascii.b2a_uu(${1:data})
    # Convert binary data to a line of ASCII characters, the return value is theconverted line, including a newline char. The length of data shoul
    # https://docs.python.org/2/library/binascii.html
snippet binascii_a2b_base64 string
abbr Convert a block of base64 data back to binary and return the binary data. Morethan one line may be passed at a time.
alias a2b_base64
    binascii.a2b_base64(${1:string})
    # Convert a block of base64 data back to binary and return the binary data. Morethan one line may be passed at a time.
    # https://docs.python.org/2/library/binascii.html
snippet binascii_b2a_base64 data
abbr Convert binary data to a line of ASCII characters in base64 coding. The returnvalue is the converted line, including a newline char. The len
alias b2a_base64
    binascii.b2a_base64(${1:data})
    # Convert binary data to a line of ASCII characters in base64 coding. The returnvalue is the converted line, including a newline char. The len
    # https://docs.python.org/2/library/binascii.html
snippet binascii_a2b_qp string_header
abbr Convert a block of quoted-printable data back to binary and return the binarydata. More than one line may be passed at a time. If the option
alias a2b_qp
    binascii.a2b_qp(${1:string}, ${2:header})
    # Convert a block of quoted-printable data back to binary and return the binarydata. More than one line may be passed at a time. If the option
    # https://docs.python.org/2/library/binascii.html
snippet binascii_b2a_qp data_quotetabs_istext_header
abbr Convert binary data to a line(s) of ASCII characters in quoted-printableencoding.  The return value is the converted line(s). If the optiona
alias b2a_qp
    binascii.b2a_qp(${1:data}, ${2:quotetabs}, ${3:istext}, ${4:header})
    # Convert binary data to a line(s) of ASCII characters in quoted-printableencoding.  The return value is the converted line(s). If the optiona
    # https://docs.python.org/2/library/binascii.html
snippet binascii_a2b_hqx string
abbr Convert binhex4 formatted ASCII data to binary, without doing RLE-decompression.The string should contain a complete number of binary bytes,
alias a2b_hqx
    binascii.a2b_hqx(${1:string})
    # Convert binhex4 formatted ASCII data to binary, without doing RLE-decompression.The string should contain a complete number of binary bytes,
    # https://docs.python.org/2/library/binascii.html
snippet binascii_rledecode_hqx data
abbr Perform RLE-decompression on the data, as per the binhex4 standard. Thealgorithm uses 0x90 after a byte as a repeat indicator, followed by a
alias rledecode_hqx
    binascii.rledecode_hqx(${1:data})
    # Perform RLE-decompression on the data, as per the binhex4 standard. Thealgorithm uses 0x90 after a byte as a repeat indicator, followed by a
    # https://docs.python.org/2/library/binascii.html
snippet binascii_rlecode_hqx data
abbr Perform binhex4 style RLE-compression on data and return the result.
alias rlecode_hqx
    binascii.rlecode_hqx(${1:data})
    # Perform binhex4 style RLE-compression on data and return the result.
    # https://docs.python.org/2/library/binascii.html
snippet binascii_b2a_hqx data
abbr Perform hexbin4 binary-to-ASCII translation and return the resulting string. Theargument should already be RLE-coded, and have a length divi
alias b2a_hqx
    binascii.b2a_hqx(${1:data})
    # Perform hexbin4 binary-to-ASCII translation and return the resulting string. Theargument should already be RLE-coded, and have a length divi
    # https://docs.python.org/2/library/binascii.html
snippet binascii_crc_hqx data_crc
abbr Compute the binhex4 crc value of data, starting with an initial crc andreturning the result.
alias crc_hqx
    binascii.crc_hqx(${1:data}, ${2:crc})
    # Compute the binhex4 crc value of data, starting with an initial crc andreturning the result.
    # https://docs.python.org/2/library/binascii.html
snippet binascii_crc32 data_crc
abbr Compute CRC-32, the 32-bit checksum of data, starting with an initial crc.  Thisis consistent with the ZIP file checksum.  Since the algorit
alias crc32
    binascii.crc32(${1:data}, ${2:crc})
    # Compute CRC-32, the 32-bit checksum of data, starting with an initial crc.  Thisis consistent with the ZIP file checksum.  Since the algorit
    # https://docs.python.org/2/library/binascii.html
snippet binascii_b2a_hex data
abbr Return the hexadecimal representation of the binary data.  Every byte ofdata is converted into the corresponding 2-digit hex representation.
alias b2a_hex
    binascii.b2a_hex(${1:data})
    # Return the hexadecimal representation of the binary data.  Every byte ofdata is converted into the corresponding 2-digit hex representation.
    # https://docs.python.org/2/library/binascii.html
snippet binascii_hexlify data
abbr Return the hexadecimal representation of the binary data.  Every byte ofdata is converted into the corresponding 2-digit hex representation.
alias hexlify
    binascii.hexlify(${1:data})
    # Return the hexadecimal representation of the binary data.  Every byte ofdata is converted into the corresponding 2-digit hex representation.
    # https://docs.python.org/2/library/binascii.html
snippet binascii_a2b_hex hexstr
abbr Return the binary data represented by the hexadecimal string hexstr.  Thisfunction is the inverse of b2a_hex(). hexstr must contain an even 
alias a2b_hex
    binascii.a2b_hex(${1:hexstr})
    # Return the binary data represented by the hexadecimal string hexstr.  Thisfunction is the inverse of b2a_hex(). hexstr must contain an even 
    # https://docs.python.org/2/library/binascii.html
snippet binascii_unhexlify hexstr
abbr Return the binary data represented by the hexadecimal string hexstr.  Thisfunction is the inverse of b2a_hex(). hexstr must contain an even 
alias unhexlify
    binascii.unhexlify(${1:hexstr})
    # Return the binary data represented by the hexadecimal string hexstr.  Thisfunction is the inverse of b2a_hex(). hexstr must contain an even 
    # https://docs.python.org/2/library/binascii.html

snippet binhex_binhex input_output
abbr Convert a binary file with filename input to binhex file output. Theoutput parameter can either be a filename or a file-like object (any obj
alias binhex
    binhex.binhex(${1:input}, ${2:output})
    # Convert a binary file with filename input to binhex file output. Theoutput parameter can either be a filename or a file-like object (any obj
    # https://docs.python.org/2/library/binhex.html
snippet binhex_hexbin input_output
abbr Decode a binhex file input. input may be a filename or a file-like objectsupporting read() and close() methods. The resulting file is writte
alias hexbin
    binhex.hexbin(${1:input}, ${2:output})
    # Decode a binhex file input. input may be a filename or a file-like objectsupporting read() and close() methods. The resulting file is writte
    # https://docs.python.org/2/library/binhex.html

snippet bisect_bisect_left a_x_lo=0_hi=len(a)
abbr Locate the insertion point for x in a to maintain sorted order.The parameters lo and hi may be used to specify a subset of the listwhich sho
alias bisect_left
    bisect.bisect_left(${1:a}, ${2:x}, ${3:lo=0}, ${4:hi=len(a)})
    # Locate the insertion point for x in a to maintain sorted order.The parameters lo and hi may be used to specify a subset of the listwhich sho
    # https://docs.python.org/2/library/bisect.html
snippet bisect_bisect_right a_x_lo=0_hi=len(a)
abbr Similar to bisect_left(), but returns an insertion point which comesafter (to the right of) any existing entries of x in a.
alias bisect_right
    bisect.bisect_right(${1:a}, ${2:x}, ${3:lo=0}, ${4:hi=len(a)})
    # Similar to bisect_left(), but returns an insertion point which comesafter (to the right of) any existing entries of x in a.
    # https://docs.python.org/2/library/bisect.html
snippet bisect_bisect a_x_lo=0_hi=len(a)
abbr Similar to bisect_left(), but returns an insertion point which comesafter (to the right of) any existing entries of x in a.
alias bisect
    bisect.bisect(${1:a}, ${2:x}, ${3:lo=0}, ${4:hi=len(a)})
    # Similar to bisect_left(), but returns an insertion point which comesafter (to the right of) any existing entries of x in a.
    # https://docs.python.org/2/library/bisect.html
snippet bisect_insort_left a_x_lo=0_hi=len(a)
abbr Insert x in a in sorted order.  This is equivalent toa.insert(bisect.bisect_left(a, x, lo, hi), x) assuming that a isalready sorted.  Keep i
alias insort_left
    bisect.insort_left(${1:a}, ${2:x}, ${3:lo=0}, ${4:hi=len(a)})
    # Insert x in a in sorted order.  This is equivalent toa.insert(bisect.bisect_left(a, x, lo, hi), x) assuming that a isalready sorted.  Keep i
    # https://docs.python.org/2/library/bisect.html
snippet bisect_insort_right a_x_lo=0_hi=len(a)
abbr Similar to insort_left(), but inserting x in a after any existingentries of x.
alias insort_right
    bisect.insort_right(${1:a}, ${2:x}, ${3:lo=0}, ${4:hi=len(a)})
    # Similar to insort_left(), but inserting x in a after any existingentries of x.
    # https://docs.python.org/2/library/bisect.html
snippet bisect_insort a_x_lo=0_hi=len(a)
abbr Similar to insort_left(), but inserting x in a after any existingentries of x.
alias insort
    bisect.insort(${1:a}, ${2:x}, ${3:lo=0}, ${4:hi=len(a)})
    # Similar to insort_left(), but inserting x in a after any existingentries of x.
    # https://docs.python.org/2/library/bisect.html

snippet bsddb_hashopen filename_flag_mode_pgsize_ffactor_nelem_cachesize_lorder_hflags
abbr Open the hash format file named filename.  Files never intended to bepreserved on disk may be created by passing None as the  filename.  The
alias hashopen
    bsddb.hashopen(${1:filename}, ${2:flag}, ${3:mode}, ${4:pgsize}, ${5:ffactor}, ${6:nelem}, ${7:cachesize}, ${8:lorder}, ${9:hflags})
    # Open the hash format file named filename.  Files never intended to bepreserved on disk may be created by passing None as the  filename.  The
    # https://docs.python.org/2/library/bsddb.html
snippet bsddb_btopen filename_flag_mode_btflags_cachesize_maxkeypage_minkeypage_pgsize_lorder
abbr Open the btree format file named filename.  Files never intended  to bepreserved on disk may be created by passing None as the  filename.  T
alias btopen
    bsddb.btopen(${1:filename}, ${2:flag}, ${3:mode}, ${4:btflags}, ${5:cachesize}, ${6:maxkeypage}, ${7:minkeypage}, ${8:pgsize}, ${9:lorder})
    # Open the btree format file named filename.  Files never intended  to bepreserved on disk may be created by passing None as the  filename.  T
    # https://docs.python.org/2/library/bsddb.html
snippet bsddb_rnopen filename_flag_mode_rnflags_cachesize_pgsize_lorder_rlen_delim_source_pad
abbr Open a DB record format file named filename.  Files never intended  to bepreserved on disk may be created by passing None as the  filename. 
alias rnopen
    bsddb.rnopen(${1:filename}, ${2:flag}, ${3:mode}, ${4:rnflags}, ${5:cachesize}, ${6:pgsize}, ${7:lorder}, ${8:rlen}, ${9:delim}, ${10:source}, ${11:pad})
    # Open a DB record format file named filename.  Files never intended  to bepreserved on disk may be created by passing None as the  filename. 
    # https://docs.python.org/2/library/bsddb.html

snippet bz2_compress data_compresslevel
abbr Compress data in one shot. If you want to compress data sequentially, usean instance of BZ2Compressor instead. The compresslevel parameter,i
alias compress
    bz2.compress(${1:data}, ${2:compresslevel})
    # Compress data in one shot. If you want to compress data sequentially, usean instance of BZ2Compressor instead. The compresslevel parameter,i
    # https://docs.python.org/2/library/bz2.html
snippet bz2_decompress data
abbr Decompress data in one shot. If you want to decompress data sequentially,use an instance of BZ2Decompressor instead.
alias decompress
    bz2.decompress(${1:data})
    # Decompress data in one shot. If you want to decompress data sequentially,use an instance of BZ2Decompressor instead.
    # https://docs.python.org/2/library/bz2.html

snippet calendar_setfirstweekday weekday
abbr Sets the weekday (0 is Monday, 6 is Sunday) to start each week. Thevalues MONDAY, TUESDAY, WEDNESDAY, THURSDAY,FRIDAY, SATURDAY, and SUNDAY 
alias setfirstweekday
    calendar.setfirstweekday(${1:weekday})
    # Sets the weekday (0 is Monday, 6 is Sunday) to start each week. Thevalues MONDAY, TUESDAY, WEDNESDAY, THURSDAY,FRIDAY, SATURDAY, and SUNDAY 
    # https://docs.python.org/2/library/calendar.html
snippet calendar_firstweekday 
abbr Returns the current setting for the weekday to start each week.
alias firstweekday
    calendar.firstweekday()
    # Returns the current setting for the weekday to start each week.
    # https://docs.python.org/2/library/calendar.html
snippet calendar_isleap year
abbr Returns True if year is a leap year, otherwise False.
alias isleap
    calendar.isleap(${1:year})
    # Returns True if year is a leap year, otherwise False.
    # https://docs.python.org/2/library/calendar.html
snippet calendar_leapdays y1_y2
abbr Returns the number of leap years in the range from y1 to y2 (exclusive),where y1 and y2 are years.
alias leapdays
    calendar.leapdays(${1:y1}, ${2:y2})
    # Returns the number of leap years in the range from y1 to y2 (exclusive),where y1 and y2 are years.
    # https://docs.python.org/2/library/calendar.html
snippet calendar_weekday year_month_day
abbr Returns the day of the week (0 is Monday) for year (1970–...),month (1–12), day (1–31).
alias weekday
    calendar.weekday(${1:year}, ${2:month}, ${3:day})
    # Returns the day of the week (0 is Monday) for year (1970–...),month (1–12), day (1–31).
    # https://docs.python.org/2/library/calendar.html
snippet calendar_weekheader n
abbr Return a header containing abbreviated weekday names. n specifies the width incharacters for one weekday.
alias weekheader
    calendar.weekheader(${1:n})
    # Return a header containing abbreviated weekday names. n specifies the width incharacters for one weekday.
    # https://docs.python.org/2/library/calendar.html
snippet calendar_monthrange year_month
abbr Returns weekday of first day of the month and number of days in month,  for thespecified year and month.
alias monthrange
    calendar.monthrange(${1:year}, ${2:month})
    # Returns weekday of first day of the month and number of days in month,  for thespecified year and month.
    # https://docs.python.org/2/library/calendar.html
snippet calendar_monthcalendar year_month
abbr Returns a matrix representing a month’s calendar.  Each row represents a week;days outside of the month a represented by zeros. Each week be
alias monthcalendar
    calendar.monthcalendar(${1:year}, ${2:month})
    # Returns a matrix representing a month’s calendar.  Each row represents a week;days outside of the month a represented by zeros. Each week be
    # https://docs.python.org/2/library/calendar.html
snippet calendar_prmonth theyear_themonth_w_l
abbr Prints a month’s calendar as returned by month().
alias prmonth
    calendar.prmonth(${1:theyear}, ${2:themonth}, ${3:w}, ${4:l})
    # Prints a month’s calendar as returned by month().
    # https://docs.python.org/2/library/calendar.html
snippet calendar_month theyear_themonth_w_l
abbr Returns a month’s calendar in a multi-line string using the formatmonth()of the TextCalendar class.
alias month
    calendar.month(${1:theyear}, ${2:themonth}, ${3:w}, ${4:l})
    # Returns a month’s calendar in a multi-line string using the formatmonth()of the TextCalendar class.
    # https://docs.python.org/2/library/calendar.html
snippet calendar_prcal year[, w[, l[c]]]
abbr Prints the calendar for an entire year as returned by  calendar().
alias prcal
    calendar.prcal(${1:year[, w[, l[c]]]})
    # Prints the calendar for an entire year as returned by  calendar().
    # https://docs.python.org/2/library/calendar.html
snippet calendar_calendar year[, w[, l[c]]]
abbr Returns a 3-column calendar for an entire year as a multi-line string using theformatyear() of the TextCalendar class.
alias calendar
    calendar.calendar(${1:year[, w[, l[c]]]})
    # Returns a 3-column calendar for an entire year as a multi-line string using theformatyear() of the TextCalendar class.
    # https://docs.python.org/2/library/calendar.html
snippet calendar_timegm tuple
abbr An unrelated but handy function that takes a time tuple such as returned bythe gmtime() function in the time module, and returns thecorrespo
alias timegm
    calendar.timegm(${1:tuple})
    # An unrelated but handy function that takes a time tuple such as returned bythe gmtime() function in the time module, and returns thecorrespo
    # https://docs.python.org/2/library/calendar.html

snippet Carbon_Scrap_InfoScrap 
abbr Return current information about the scrap.  The information is encoded as atuple containing the fields (size, handle, count, state, path).
alias InfoScrap
    Carbon.Scrap.InfoScrap()
    # Return current information about the scrap.  The information is encoded as atuple containing the fields (size, handle, count, state, path).
    # https://docs.python.org/2/library/carbon.html

snippet cd_createparser 
abbr Create and return an opaque parser object.  The methods of the parser object aredescribed below.
alias createparser
    cd.createparser()
    # Create and return an opaque parser object.  The methods of the parser object aredescribed below.
    # https://docs.python.org/2/library/cd.html
snippet cd_msftoframe minutes_seconds_frames
abbr Converts a (minutes, seconds, frames) triple representing time in absolutetime code into the corresponding CD frame number.
alias msftoframe
    cd.msftoframe(${1:minutes}, ${2:seconds}, ${3:frames})
    # Converts a (minutes, seconds, frames) triple representing time in absolutetime code into the corresponding CD frame number.
    # https://docs.python.org/2/library/cd.html
snippet cd_open device_mode
abbr Open the CD-ROM device.  The return value is an opaque player object; methods ofthe player object are described below.  The device is the na
alias open
    cd.open(${1:device}, ${2:mode})
    # Open the CD-ROM device.  The return value is an opaque player object; methods ofthe player object are described below.  The device is the na
    # https://docs.python.org/2/library/cd.html

snippet cgi_parse fp_environ_keep_blank_values_strict_parsing
abbr Parse a query in the environment or from a file (the file defaults tosys.stdin and environment defaults to os.environ).  The keep_blank_valu
alias parse
    cgi.parse(${1:fp}, ${2:environ}, ${3:keep_blank_values}, ${4:strict_parsing})
    # Parse a query in the environment or from a file (the file defaults tosys.stdin and environment defaults to os.environ).  The keep_blank_valu
    # https://docs.python.org/2/library/cgi.html
snippet cgi_parse_qs qs_keep_blank_values_strict_parsing
abbr This function is deprecated in this module. Use urlparse.parse_qs()instead. It is maintained here only for backward compatiblity.
alias parse_qs
    cgi.parse_qs(${1:qs}, ${2:keep_blank_values}, ${3:strict_parsing})
    # This function is deprecated in this module. Use urlparse.parse_qs()instead. It is maintained here only for backward compatiblity.
    # https://docs.python.org/2/library/cgi.html
snippet cgi_parse_qsl qs_keep_blank_values_strict_parsing
abbr This function is deprecated in this module. Use urlparse.parse_qsl()instead. It is maintained here only for backward compatiblity.
alias parse_qsl
    cgi.parse_qsl(${1:qs}, ${2:keep_blank_values}, ${3:strict_parsing})
    # This function is deprecated in this module. Use urlparse.parse_qsl()instead. It is maintained here only for backward compatiblity.
    # https://docs.python.org/2/library/cgi.html
snippet cgi_parse_multipart fp_pdict
abbr Parse input of type multipart/form-data (for  file uploads).Arguments are fp for the input file and pdict for a dictionary containingother p
alias parse_multipart
    cgi.parse_multipart(${1:fp}, ${2:pdict})
    # Parse input of type multipart/form-data (for  file uploads).Arguments are fp for the input file and pdict for a dictionary containingother p
    # https://docs.python.org/2/library/cgi.html
snippet cgi_parse_header string
abbr Parse a MIME header (such as Content-Type) into a main value and adictionary of parameters.
alias parse_header
    cgi.parse_header(${1:string})
    # Parse a MIME header (such as Content-Type) into a main value and adictionary of parameters.
    # https://docs.python.org/2/library/cgi.html
snippet cgi_test 
abbr Robust test CGI script, usable as main program. Writes minimal HTTP headers andformats all information provided to the script in HTML form.
alias test
    cgi.test()
    # Robust test CGI script, usable as main program. Writes minimal HTTP headers andformats all information provided to the script in HTML form.
    # https://docs.python.org/2/library/cgi.html
snippet cgi_print_environ 
abbr Format the shell environment in HTML.
alias print_environ
    cgi.print_environ()
    # Format the shell environment in HTML.
    # https://docs.python.org/2/library/cgi.html
snippet cgi_print_form form
abbr Format a form in HTML.
alias print_form
    cgi.print_form(${1:form})
    # Format a form in HTML.
    # https://docs.python.org/2/library/cgi.html
snippet cgi_print_directory 
abbr Format the current directory in HTML.
alias print_directory
    cgi.print_directory()
    # Format the current directory in HTML.
    # https://docs.python.org/2/library/cgi.html
snippet cgi_print_environ_usage 
abbr Print a list of useful (used by CGI) environment variables in HTML.
alias print_environ_usage
    cgi.print_environ_usage()
    # Print a list of useful (used by CGI) environment variables in HTML.
    # https://docs.python.org/2/library/cgi.html
snippet cgi_escape s_quote
abbr Convert the characters '&', '<' and '>' in string s to HTML-safesequences.  Use this if you need to display text that might contain suchchar
alias escape
    cgi.escape(${1:s}, ${2:quote})
    # Convert the characters '&', '<' and '>' in string s to HTML-safesequences.  Use this if you need to display text that might contain suchchar
    # https://docs.python.org/2/library/cgi.html



snippet cgitb_enable display_logdir_context_format
abbr This function causes the cgitb module to take over the interpreter’sdefault handling for exceptions by setting the value of sys.excepthook.
alias enable
    cgitb.enable(${1:display}, ${2:logdir}, ${3:context}, ${4:format})
    # This function causes the cgitb module to take over the interpreter’sdefault handling for exceptions by setting the value of sys.excepthook.
    # https://docs.python.org/2/library/cgitb.html
snippet cgitb_handler info
abbr This function handles an exception using the default settings (that is, show areport in the browser, but don’t log to a file). This can be u
alias handler
    cgitb.handler(${1:info})
    # This function handles an exception using the default settings (that is, show areport in the browser, but don’t log to a file). This can be u
    # https://docs.python.org/2/library/cgitb.html



snippet cmath_phase x
abbr Return the phase of x (also known as the argument of x), as afloat.  phase(x) is equivalent to math.atan2(x.imag,x.real).  The result lies i
alias phase
    cmath.phase(${1:x})
    # Return the phase of x (also known as the argument of x), as afloat.  phase(x) is equivalent to math.atan2(x.imag,x.real).  The result lies i
    # https://docs.python.org/2/library/cmath.html
snippet cmath_polar x
abbr Return the representation of x in polar coordinates.  Returns apair (r, phi) where r is the modulus of x and phi is thephase of x.  polar(x)
alias polar
    cmath.polar(${1:x})
    # Return the representation of x in polar coordinates.  Returns apair (r, phi) where r is the modulus of x and phi is thephase of x.  polar(x)
    # https://docs.python.org/2/library/cmath.html
snippet cmath_rect r_phi
abbr Return the complex number x with polar coordinates r and phi.Equivalent to r * (math.cos(phi) + math.sin(phi)*1j).
alias rect
    cmath.rect(${1:r}, ${2:phi})
    # Return the complex number x with polar coordinates r and phi.Equivalent to r * (math.cos(phi) + math.sin(phi)*1j).
    # https://docs.python.org/2/library/cmath.html
snippet cmath_exp x
abbr Return the exponential value e**x.
alias exp
    cmath.exp(${1:x})
    # Return the exponential value e**x.
    # https://docs.python.org/2/library/cmath.html
snippet cmath_log x_base
abbr Returns the logarithm of x to the given base. If the base is notspecified, returns the natural logarithm of x. There is one branch cut, from
alias log
    cmath.log(${1:x}, ${2:base})
    # Returns the logarithm of x to the given base. If the base is notspecified, returns the natural logarithm of x. There is one branch cut, from
    # https://docs.python.org/2/library/cmath.html
snippet cmath_log10 x
abbr Return the base-10 logarithm of x. This has the same branch cut aslog().
alias log10
    cmath.log10(${1:x})
    # Return the base-10 logarithm of x. This has the same branch cut aslog().
    # https://docs.python.org/2/library/cmath.html
snippet cmath_sqrt x
abbr Return the square root of x. This has the same branch cut as log().
alias sqrt
    cmath.sqrt(${1:x})
    # Return the square root of x. This has the same branch cut as log().
    # https://docs.python.org/2/library/cmath.html
snippet cmath_acos x
abbr Return the arc cosine of x. There are two branch cuts: One extends right from1 along the real axis to ∞, continuous from below. The other ex
alias acos
    cmath.acos(${1:x})
    # Return the arc cosine of x. There are two branch cuts: One extends right from1 along the real axis to ∞, continuous from below. The other ex
    # https://docs.python.org/2/library/cmath.html
snippet cmath_asin x
abbr Return the arc sine of x. This has the same branch cuts as acos().
alias asin
    cmath.asin(${1:x})
    # Return the arc sine of x. This has the same branch cuts as acos().
    # https://docs.python.org/2/library/cmath.html
snippet cmath_atan x
abbr Return the arc tangent of x. There are two branch cuts: One extends from1j along the imaginary axis to ∞j, continuous from the right. Theoth
alias atan
    cmath.atan(${1:x})
    # Return the arc tangent of x. There are two branch cuts: One extends from1j along the imaginary axis to ∞j, continuous from the right. Theoth
    # https://docs.python.org/2/library/cmath.html
snippet cmath_cos x
abbr Return the cosine of x.
alias cos
    cmath.cos(${1:x})
    # Return the cosine of x.
    # https://docs.python.org/2/library/cmath.html
snippet cmath_sin x
abbr Return the sine of x.
alias sin
    cmath.sin(${1:x})
    # Return the sine of x.
    # https://docs.python.org/2/library/cmath.html
snippet cmath_tan x
abbr Return the tangent of x.
alias tan
    cmath.tan(${1:x})
    # Return the tangent of x.
    # https://docs.python.org/2/library/cmath.html
snippet cmath_acosh x
abbr Return the hyperbolic arc cosine of x. There is one branch cut, extending leftfrom 1 along the real axis to -∞, continuous from above.
alias acosh
    cmath.acosh(${1:x})
    # Return the hyperbolic arc cosine of x. There is one branch cut, extending leftfrom 1 along the real axis to -∞, continuous from above.
    # https://docs.python.org/2/library/cmath.html
snippet cmath_asinh x
abbr Return the hyperbolic arc sine of x. There are two branch cuts:One extends from 1j along the imaginary axis to ∞j,continuous from the right.
alias asinh
    cmath.asinh(${1:x})
    # Return the hyperbolic arc sine of x. There are two branch cuts:One extends from 1j along the imaginary axis to ∞j,continuous from the right.
    # https://docs.python.org/2/library/cmath.html
snippet cmath_atanh x
abbr Return the hyperbolic arc tangent of x. There are two branch cuts: Oneextends from 1 along the real axis to ∞, continuous from below. Theoth
alias atanh
    cmath.atanh(${1:x})
    # Return the hyperbolic arc tangent of x. There are two branch cuts: Oneextends from 1 along the real axis to ∞, continuous from below. Theoth
    # https://docs.python.org/2/library/cmath.html
snippet cmath_cosh x
abbr Return the hyperbolic cosine of x.
alias cosh
    cmath.cosh(${1:x})
    # Return the hyperbolic cosine of x.
    # https://docs.python.org/2/library/cmath.html
snippet cmath_sinh x
abbr Return the hyperbolic sine of x.
alias sinh
    cmath.sinh(${1:x})
    # Return the hyperbolic sine of x.
    # https://docs.python.org/2/library/cmath.html
snippet cmath_tanh x
abbr Return the hyperbolic tangent of x.
alias tanh
    cmath.tanh(${1:x})
    # Return the hyperbolic tangent of x.
    # https://docs.python.org/2/library/cmath.html
snippet cmath_isinf x
abbr Return True if the real or the imaginary part of x is positiveor negative infinity.
alias isinf
    cmath.isinf(${1:x})
    # Return True if the real or the imaginary part of x is positiveor negative infinity.
    # https://docs.python.org/2/library/cmath.html
snippet cmath_isnan x
abbr Return True if the real or imaginary part of x is not a number (NaN).
alias isnan
    cmath.isnan(${1:x})
    # Return True if the real or imaginary part of x is not a number (NaN).
    # https://docs.python.org/2/library/cmath.html



snippet code_interact banner_readfunc_local
abbr Convenience function to run a read-eval-print loop.  This creates a new instanceof InteractiveConsole and sets readfunc to be used as theInt
alias interact
    code.interact(${1:banner}, ${2:readfunc}, ${3:local})
    # Convenience function to run a read-eval-print loop.  This creates a new instanceof InteractiveConsole and sets readfunc to be used as theInt
    # https://docs.python.org/2/library/code.html
snippet code_compile_command source_filename_symbol
abbr This function is useful for programs that want to emulate Python’s interpretermain loop (a.k.a. the read-eval-print loop).  The tricky part 
alias compile_command
    code.compile_command(${1:source}, ${2:filename}, ${3:symbol})
    # This function is useful for programs that want to emulate Python’s interpretermain loop (a.k.a. the read-eval-print loop).  The tricky part 
    # https://docs.python.org/2/library/code.html

snippet codecs_encode obj_encoding_errors
abbr Encodes obj using the codec registered for encoding. The defaultencoding is 'ascii'.
alias encode
    codecs.encode(${1:obj}, ${2:encoding}, ${3:errors})
    # Encodes obj using the codec registered for encoding. The defaultencoding is 'ascii'.
    # https://docs.python.org/2/library/codecs.html
snippet codecs_decode obj_encoding_errors
abbr Decodes obj using the codec registered for encoding. The defaultencoding is 'ascii'.
alias decode
    codecs.decode(${1:obj}, ${2:encoding}, ${3:errors})
    # Decodes obj using the codec registered for encoding. The defaultencoding is 'ascii'.
    # https://docs.python.org/2/library/codecs.html
snippet codecs_register search_function
abbr Register a codec search function. Search functions are expected to take oneargument, the encoding name in all lower case letters, and return
alias register
    codecs.register(${1:search_function})
    # Register a codec search function. Search functions are expected to take oneargument, the encoding name in all lower case letters, and return
    # https://docs.python.org/2/library/codecs.html
snippet codecs_lookup encoding
abbr Looks up the codec info in the Python codec registry and returns aCodecInfo object as defined above.
alias lookup
    codecs.lookup(${1:encoding})
    # Looks up the codec info in the Python codec registry and returns aCodecInfo object as defined above.
    # https://docs.python.org/2/library/codecs.html
snippet codecs_getencoder encoding
abbr Look up the codec for the given encoding and return its encoder function.
alias getencoder
    codecs.getencoder(${1:encoding})
    # Look up the codec for the given encoding and return its encoder function.
    # https://docs.python.org/2/library/codecs.html
snippet codecs_getdecoder encoding
abbr Look up the codec for the given encoding and return its decoder function.
alias getdecoder
    codecs.getdecoder(${1:encoding})
    # Look up the codec for the given encoding and return its decoder function.
    # https://docs.python.org/2/library/codecs.html
snippet codecs_getincrementalencoder encoding
abbr Look up the codec for the given encoding and return its incremental encoderclass or factory function.
alias getincrementalencoder
    codecs.getincrementalencoder(${1:encoding})
    # Look up the codec for the given encoding and return its incremental encoderclass or factory function.
    # https://docs.python.org/2/library/codecs.html
snippet codecs_getincrementaldecoder encoding
abbr Look up the codec for the given encoding and return its incremental decoderclass or factory function.
alias getincrementaldecoder
    codecs.getincrementaldecoder(${1:encoding})
    # Look up the codec for the given encoding and return its incremental decoderclass or factory function.
    # https://docs.python.org/2/library/codecs.html
snippet codecs_getreader encoding
abbr Look up the codec for the given encoding and return its StreamReader class orfactory function.
alias getreader
    codecs.getreader(${1:encoding})
    # Look up the codec for the given encoding and return its StreamReader class orfactory function.
    # https://docs.python.org/2/library/codecs.html
snippet codecs_getwriter encoding
abbr Look up the codec for the given encoding and return its StreamWriter class orfactory function.
alias getwriter
    codecs.getwriter(${1:encoding})
    # Look up the codec for the given encoding and return its StreamWriter class orfactory function.
    # https://docs.python.org/2/library/codecs.html
snippet codecs_register_error name_error_handler
abbr Register the error handling function error_handler under the name name.error_handler will be called during encoding and decoding in case of 
alias register_error
    codecs.register_error(${1:name}, ${2:error_handler})
    # Register the error handling function error_handler under the name name.error_handler will be called during encoding and decoding in case of 
    # https://docs.python.org/2/library/codecs.html
snippet codecs_lookup_error name
abbr Return the error handler previously registered under the name name.
alias lookup_error
    codecs.lookup_error(${1:name})
    # Return the error handler previously registered under the name name.
    # https://docs.python.org/2/library/codecs.html
snippet codecs_strict_errors exception
abbr Implements the strict error handling: each encoding or decoding errorraises a UnicodeError.
alias strict_errors
    codecs.strict_errors(${1:exception})
    # Implements the strict error handling: each encoding or decoding errorraises a UnicodeError.
    # https://docs.python.org/2/library/codecs.html
snippet codecs_replace_errors exception
abbr Implements the replace error handling: malformed data is replaced with asuitable replacement character such as '?' in bytestrings and'\ufffd
alias replace_errors
    codecs.replace_errors(${1:exception})
    # Implements the replace error handling: malformed data is replaced with asuitable replacement character such as '?' in bytestrings and'\ufffd
    # https://docs.python.org/2/library/codecs.html
snippet codecs_ignore_errors exception
abbr Implements the ignore error handling: malformed data is ignored andencoding or decoding is continued without further notice.
alias ignore_errors
    codecs.ignore_errors(${1:exception})
    # Implements the ignore error handling: malformed data is ignored andencoding or decoding is continued without further notice.
    # https://docs.python.org/2/library/codecs.html
snippet codecs_xmlcharrefreplace_errors exception
abbr Implements the xmlcharrefreplace error handling (for encoding only): theunencodable character is replaced by an appropriate XML character re
alias xmlcharrefreplace_errors
    codecs.xmlcharrefreplace_errors(${1:exception})
    # Implements the xmlcharrefreplace error handling (for encoding only): theunencodable character is replaced by an appropriate XML character re
    # https://docs.python.org/2/library/codecs.html
snippet codecs_backslashreplace_errors exception
abbr Implements the backslashreplace error handling (for encoding only): theunencodable character is replaced by a backslashed escape sequence.
alias backslashreplace_errors
    codecs.backslashreplace_errors(${1:exception})
    # Implements the backslashreplace error handling (for encoding only): theunencodable character is replaced by a backslashed escape sequence.
    # https://docs.python.org/2/library/codecs.html
snippet codecs_open filename_mode_encoding_errors_buffering
abbr Open an encoded file using the given mode and return a wrapped versionproviding transparent encoding/decoding.  The default file mode is 'r'
alias open
    codecs.open(${1:filename}, ${2:mode}, ${3:encoding}, ${4:errors}, ${5:buffering})
    # Open an encoded file using the given mode and return a wrapped versionproviding transparent encoding/decoding.  The default file mode is 'r'
    # https://docs.python.org/2/library/codecs.html
snippet codecs_EncodedFile file_input_output_errors
abbr Return a wrapped version of file which provides transparent encodingtranslation.
alias EncodedFile
    codecs.EncodedFile(${1:file}, ${2:input}, ${3:output}, ${4:errors})
    # Return a wrapped version of file which provides transparent encodingtranslation.
    # https://docs.python.org/2/library/codecs.html
snippet codecs_iterencode iterable_encoding_errors
abbr Uses an incremental encoder to iteratively encode the input provided byiterable. This function is a generator.  errors (as well as anyother 
alias iterencode
    codecs.iterencode(${1:iterable}, ${2:encoding}, ${3:errors})
    # Uses an incremental encoder to iteratively encode the input provided byiterable. This function is a generator.  errors (as well as anyother 
    # https://docs.python.org/2/library/codecs.html
snippet codecs_iterdecode iterable_encoding_errors
abbr Uses an incremental decoder to iteratively decode the input provided byiterable. This function is a generator.  errors (as well as anyother 
alias iterdecode
    codecs.iterdecode(${1:iterable}, ${2:encoding}, ${3:errors})
    # Uses an incremental decoder to iteratively decode the input provided byiterable. This function is a generator.  errors (as well as anyother 
    # https://docs.python.org/2/library/codecs.html
snippet encodings_idna_nameprep label
abbr Return the nameprepped version of label. The implementation currently assumesquery strings, so AllowUnassigned is true.
alias nameprep
    encodings.idna.nameprep(${1:label})
    # Return the nameprepped version of label. The implementation currently assumesquery strings, so AllowUnassigned is true.
    # https://docs.python.org/2/library/codecs.html
snippet encodings_idna_ToASCII label
abbr Convert a label to ASCII, as specified in RFC 3490. UseSTD3ASCIIRules isassumed to be false.
alias ToASCII
    encodings.idna.ToASCII(${1:label})
    # Convert a label to ASCII, as specified in RFC 3490. UseSTD3ASCIIRules isassumed to be false.
    # https://docs.python.org/2/library/codecs.html
snippet encodings_idna_ToUnicode label
abbr Convert a label to Unicode, as specified in RFC 3490.
alias ToUnicode
    encodings.idna.ToUnicode(${1:label})
    # Convert a label to Unicode, as specified in RFC 3490.
    # https://docs.python.org/2/library/codecs.html

snippet codeop_compile_command source_filename_symbol
abbr Tries to compile source, which should be a string of Python code and return acode object if source is valid Python code. In that case, the f
alias compile_command
    codeop.compile_command(${1:source}, ${2:filename}, ${3:symbol})
    # Tries to compile source, which should be a string of Python code and return acode object if source is valid Python code. In that case, the f
    # https://docs.python.org/2/library/codeop.html

snippet collections_namedtuple typename_field_names_verbose=False_rename=False
abbr Returns a new tuple subclass named typename.  The new subclass is used tocreate tuple-like objects that have fields accessible by attribute 
alias namedtuple
    collections.namedtuple(${1:typename}, ${2:field_names}, ${3:verbose=False}, ${4:rename=False})
    # Returns a new tuple subclass named typename.  The new subclass is used tocreate tuple-like objects that have fields accessible by attribute 
    # https://docs.python.org/2/library/collections.html

snippet ColorPicker_GetColor prompt_rgb
abbr Show a standard color selection dialog and allow the user to select a color.The user is given instruction by the prompt string, and the defa
alias GetColor
    ColorPicker.GetColor(${1:prompt}, ${2:rgb})
    # Show a standard color selection dialog and allow the user to select a color.The user is given instruction by the prompt string, and the defa
    # https://docs.python.org/2/library/colorpicker.html

snippet colorsys_rgb_to_yiq r_g_b
abbr Convert the color from RGB coordinates to YIQ coordinates.
alias rgb_to_yiq
    colorsys.rgb_to_yiq(${1:r}, ${2:g}, ${3:b})
    # Convert the color from RGB coordinates to YIQ coordinates.
    # https://docs.python.org/2/library/colorsys.html
snippet colorsys_yiq_to_rgb y_i_q
abbr Convert the color from YIQ coordinates to RGB coordinates.
alias yiq_to_rgb
    colorsys.yiq_to_rgb(${1:y}, ${2:i}, ${3:q})
    # Convert the color from YIQ coordinates to RGB coordinates.
    # https://docs.python.org/2/library/colorsys.html
snippet colorsys_rgb_to_hls r_g_b
abbr Convert the color from RGB coordinates to HLS coordinates.
alias rgb_to_hls
    colorsys.rgb_to_hls(${1:r}, ${2:g}, ${3:b})
    # Convert the color from RGB coordinates to HLS coordinates.
    # https://docs.python.org/2/library/colorsys.html
snippet colorsys_hls_to_rgb h_l_s
abbr Convert the color from HLS coordinates to RGB coordinates.
alias hls_to_rgb
    colorsys.hls_to_rgb(${1:h}, ${2:l}, ${3:s})
    # Convert the color from HLS coordinates to RGB coordinates.
    # https://docs.python.org/2/library/colorsys.html
snippet colorsys_rgb_to_hsv r_g_b
abbr Convert the color from RGB coordinates to HSV coordinates.
alias rgb_to_hsv
    colorsys.rgb_to_hsv(${1:r}, ${2:g}, ${3:b})
    # Convert the color from RGB coordinates to HSV coordinates.
    # https://docs.python.org/2/library/colorsys.html
snippet colorsys_hsv_to_rgb h_s_v
abbr Convert the color from HSV coordinates to RGB coordinates.
alias hsv_to_rgb
    colorsys.hsv_to_rgb(${1:h}, ${2:s}, ${3:v})
    # Convert the color from HSV coordinates to RGB coordinates.
    # https://docs.python.org/2/library/colorsys.html

snippet commands_getstatusoutput cmd
abbr Execute the string cmd in a shell with os.popen() and return a 2-tuple(status, output).  cmd is actually run as { cmd ; } 2>&1, so that ther
alias getstatusoutput
    commands.getstatusoutput(${1:cmd})
    # Execute the string cmd in a shell with os.popen() and return a 2-tuple(status, output).  cmd is actually run as { cmd ; } 2>&1, so that ther
    # https://docs.python.org/2/library/commands.html
snippet commands_getoutput cmd
abbr Like getstatusoutput(), except the exit status is ignored and the returnvalue is a string containing the command’s output.
alias getoutput
    commands.getoutput(${1:cmd})
    # Like getstatusoutput(), except the exit status is ignored and the returnvalue is a string containing the command’s output.
    # https://docs.python.org/2/library/commands.html
snippet commands_getstatus file
abbr Return the output of ls -ld file as a string.  This function uses thegetoutput() function, and properly escapes backslashes and dollar signs
alias getstatus
    commands.getstatus(${1:file})
    # Return the output of ls -ld file as a string.  This function uses thegetoutput() function, and properly escapes backslashes and dollar signs
    # https://docs.python.org/2/library/commands.html

snippet compileall_compile_dir dir_maxlevels_ddir_force_rx_quiet
abbr Recursively descend the directory tree named by dir, compiling all .pyfiles along the way.
alias compile_dir
    compileall.compile_dir(${1:dir}, ${2:maxlevels}, ${3:ddir}, ${4:force}, ${5:rx}, ${6:quiet})
    # Recursively descend the directory tree named by dir, compiling all .pyfiles along the way.
    # https://docs.python.org/2/library/compileall.html
snippet compileall_compile_file fullname_ddir_force_rx_quiet
abbr Compile the file with path fullname.
alias compile_file
    compileall.compile_file(${1:fullname}, ${2:ddir}, ${3:force}, ${4:rx}, ${5:quiet})
    # Compile the file with path fullname.
    # https://docs.python.org/2/library/compileall.html
snippet compileall_compile_path skip_curdir_maxlevels_force
abbr Byte-compile all the .py files found along sys.path. Ifskip_curdir is true (the default), the current directory is not includedin the search
alias compile_path
    compileall.compile_path(${1:skip_curdir}, ${2:maxlevels}, ${3:force})
    # Byte-compile all the .py files found along sys.path. Ifskip_curdir is true (the default), the current directory is not includedin the search
    # https://docs.python.org/2/library/compileall.html

snippet compiler_parse buf
abbr Returns an abstract syntax tree for the Python source code in buf. Thefunction raises SyntaxError if there is an error in the source code.  
alias parse
    compiler.parse(${1:buf})
    # Returns an abstract syntax tree for the Python source code in buf. Thefunction raises SyntaxError if there is an error in the source code.  
    # https://docs.python.org/2/library/compiler.html
snippet compiler_parseFile path
abbr Return an abstract syntax tree for the Python source code in the file specifiedby path.  It is equivalent to parse(open(path).read()).
alias parseFile
    compiler.parseFile(${1:path})
    # Return an abstract syntax tree for the Python source code in the file specifiedby path.  It is equivalent to parse(open(path).read()).
    # https://docs.python.org/2/library/compiler.html
snippet compiler_walk ast_visitor_verbose
abbr Do a pre-order walk over the abstract syntax tree ast.  Call the appropriatemethod on the visitor instance for each node encountered.
alias walk
    compiler.walk(${1:ast}, ${2:visitor}, ${3:verbose})
    # Do a pre-order walk over the abstract syntax tree ast.  Call the appropriatemethod on the visitor instance for each node encountered.
    # https://docs.python.org/2/library/compiler.html
snippet compiler_compile source_filename_mode_flags=None_dont_inherit=None
abbr Compile the string source, a Python module, statement or expression, into acode object that can be executed by the exec statement or eval().
alias compile
    compiler.compile(${1:source}, ${2:filename}, ${3:mode}, ${4:flags=None}, ${5:dont_inherit=None})
    # Compile the string source, a Python module, statement or expression, into acode object that can be executed by the exec statement or eval().
    # https://docs.python.org/2/library/compiler.html
snippet compiler_compileFile source
abbr Compiles the file source and generates a .pyc file.
alias compileFile
    compiler.compileFile(${1:source})
    # Compiles the file source and generates a .pyc file.
    # https://docs.python.org/2/library/compiler.html
snippet compiler_visitor_walk tree_visitor_verbose
abbr undefined
alias walk
    compiler.visitor.walk(${1:tree}, ${2:visitor}, ${3:verbose})
    # undefined
    # https://docs.python.org/2/library/compiler.html





snippet contextlib_contextmanager func
abbr This function is a decorator that can be used to define a factoryfunction for with statement context managers, without needing tocreate a cl
alias contextmanager
    contextlib.contextmanager(${1:func})
    # This function is a decorator that can be used to define a factoryfunction for with statement context managers, without needing tocreate a cl
    # https://docs.python.org/2/library/contextlib.html
snippet contextlib_nested mgr1_mgr2_...
abbr Combine multiple context managers into a single nested context manager.
alias nested
    contextlib.nested(${1:mgr1}, ${2:mgr2}, ${3:...})
    # Combine multiple context managers into a single nested context manager.
    # https://docs.python.org/2/library/contextlib.html
snippet contextlib_closing thing
abbr Return a context manager that closes thing upon completion of the block.  Thisis basically equivalent to:
alias closing
    contextlib.closing(${1:thing})
    # Return a context manager that closes thing upon completion of the block.  Thisis basically equivalent to:
    # https://docs.python.org/2/library/contextlib.html





snippet copy_copy x
abbr Return a shallow copy of x.
alias copy
    copy.copy(${1:x})
    # Return a shallow copy of x.
    # https://docs.python.org/2/library/copy.html
snippet copy_deepcopy x
abbr Return a deep copy of x.
alias deepcopy
    copy.deepcopy(${1:x})
    # Return a deep copy of x.
    # https://docs.python.org/2/library/copy.html

snippet copy_reg_constructor object
abbr Declares object to be a valid constructor.  If object is not callable (andhence not valid as a constructor), raises TypeError.
alias constructor
    copy_reg.constructor(${1:object})
    # Declares object to be a valid constructor.  If object is not callable (andhence not valid as a constructor), raises TypeError.
    # https://docs.python.org/2/library/copy_reg.html
snippet copy_reg_pickle type_function_constructor
abbr Declares that function should be used as a “reduction” function for objects oftype type; type must not be a “classic” class object.  (Classi
alias pickle
    copy_reg.pickle(${1:type}, ${2:function}, ${3:constructor})
    # Declares that function should be used as a “reduction” function for objects oftype type; type must not be a “classic” class object.  (Classi
    # https://docs.python.org/2/library/copy_reg.html

snippet crypt_crypt word_salt
abbr word will usually be a user’s password as typed at a prompt or  in a graphicalinterface.  salt is usually a random two-character string whic
alias crypt
    crypt.crypt(${1:word}, ${2:salt})
    # word will usually be a user’s password as typed at a prompt or  in a graphicalinterface.  salt is usually a random two-character string whic
    # https://docs.python.org/2/library/crypt.html



snippet csv_reader csvfile_dialect='excel'_**fmtparams
abbr Return a reader object which will iterate over lines in the given csvfile.csvfile can be any object which supports the iterator protocol and
alias reader
    csv.reader(${1:csvfile}, ${2:dialect='excel'}, ${3:**fmtparams})
    # Return a reader object which will iterate over lines in the given csvfile.csvfile can be any object which supports the iterator protocol and
    # https://docs.python.org/2/library/csv.html
snippet csv_writer csvfile_dialect='excel'_**fmtparams
abbr Return a writer object responsible for converting the user’s data into delimitedstrings on the given file-like object.  csvfile can be any o
alias writer
    csv.writer(${1:csvfile}, ${2:dialect='excel'}, ${3:**fmtparams})
    # Return a writer object responsible for converting the user’s data into delimitedstrings on the given file-like object.  csvfile can be any o
    # https://docs.python.org/2/library/csv.html
snippet csv_register_dialect name_dialect_**fmtparams
abbr Associate dialect with name.  name must be a string or Unicode object. Thedialect can be specified either by passing a sub-class of Dialect,
alias register_dialect
    csv.register_dialect(${1:name}, ${2:dialect}, ${3:**fmtparams})
    # Associate dialect with name.  name must be a string or Unicode object. Thedialect can be specified either by passing a sub-class of Dialect,
    # https://docs.python.org/2/library/csv.html
snippet csv_unregister_dialect name
abbr Delete the dialect associated with name from the dialect registry.  AnError is raised if name is not a registered dialect name.
alias unregister_dialect
    csv.unregister_dialect(${1:name})
    # Delete the dialect associated with name from the dialect registry.  AnError is raised if name is not a registered dialect name.
    # https://docs.python.org/2/library/csv.html
snippet csv_get_dialect name
abbr Return the dialect associated with name.  An Error is raised if nameis not a registered dialect name.
alias get_dialect
    csv.get_dialect(${1:name})
    # Return the dialect associated with name.  An Error is raised if nameis not a registered dialect name.
    # https://docs.python.org/2/library/csv.html
snippet csv_list_dialects 
abbr Return the names of all registered dialects.
alias list_dialects
    csv.list_dialects()
    # Return the names of all registered dialects.
    # https://docs.python.org/2/library/csv.html
snippet csv_field_size_limit new_limit
abbr Returns the current maximum field size allowed by the parser. If new_limit isgiven, this becomes the new limit.
alias field_size_limit
    csv.field_size_limit(${1:new_limit})
    # Returns the current maximum field size allowed by the parser. If new_limit isgiven, this becomes the new limit.
    # https://docs.python.org/2/library/csv.html

snippet ctypes_CFUNCTYPE restype_*argtypes_use_errno=False_use_last_error=False
abbr The returned function prototype creates functions that use the standard Ccalling convention.  The function will release the GIL during the c
alias CFUNCTYPE
    ctypes.CFUNCTYPE(${1:restype}, ${2:*argtypes}, ${3:use_errno=False}, ${4:use_last_error=False})
    # The returned function prototype creates functions that use the standard Ccalling convention.  The function will release the GIL during the c
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_WINFUNCTYPE restype_*argtypes_use_errno=False_use_last_error=False
abbr Windows only: The returned function prototype creates functions that use thestdcall calling convention, except on Windows CE whereWINFUNCTYP
alias WINFUNCTYPE
    ctypes.WINFUNCTYPE(${1:restype}, ${2:*argtypes}, ${3:use_errno=False}, ${4:use_last_error=False})
    # Windows only: The returned function prototype creates functions that use thestdcall calling convention, except on Windows CE whereWINFUNCTYP
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_PYFUNCTYPE restype_*argtypes
abbr The returned function prototype creates functions that use the Python callingconvention.  The function will not release the GIL during the c
alias PYFUNCTYPE
    ctypes.PYFUNCTYPE(${1:restype}, ${2:*argtypes})
    # The returned function prototype creates functions that use the Python callingconvention.  The function will not release the GIL during the c
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_addressof obj
abbr Returns the address of the memory buffer as integer.  obj must be aninstance of a ctypes type.
alias addressof
    ctypes.addressof(${1:obj})
    # Returns the address of the memory buffer as integer.  obj must be aninstance of a ctypes type.
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_alignment obj_or_type
abbr Returns the alignment requirements of a ctypes type. obj_or_type must be actypes type or instance.
alias alignment
    ctypes.alignment(${1:obj_or_type})
    # Returns the alignment requirements of a ctypes type. obj_or_type must be actypes type or instance.
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_byref obj_offset
abbr Returns a light-weight pointer to obj, which must be an instance of actypes type.  offset defaults to zero, and must be an integer that will
alias byref
    ctypes.byref(${1:obj}, ${2:offset})
    # Returns a light-weight pointer to obj, which must be an instance of actypes type.  offset defaults to zero, and must be an integer that will
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_cast obj_type
abbr This function is similar to the cast operator in C.  It returns a newinstance of type which points to the same memory block as obj.  typemus
alias cast
    ctypes.cast(${1:obj}, ${2:type})
    # This function is similar to the cast operator in C.  It returns a newinstance of type which points to the same memory block as obj.  typemus
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_create_string_buffer init_or_size_size
abbr This function creates a mutable character buffer. The returned object is actypes array of c_char.
alias create_string_buffer
    ctypes.create_string_buffer(${1:init_or_size}, ${2:size})
    # This function creates a mutable character buffer. The returned object is actypes array of c_char.
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_create_unicode_buffer init_or_size_size
abbr This function creates a mutable unicode character buffer. The returned object isa ctypes array of c_wchar.
alias create_unicode_buffer
    ctypes.create_unicode_buffer(${1:init_or_size}, ${2:size})
    # This function creates a mutable unicode character buffer. The returned object isa ctypes array of c_wchar.
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_DllCanUnloadNow 
abbr Windows only: This function is a hook which allows to implement in-processCOM servers with ctypes.  It is called from the DllCanUnloadNow fu
alias DllCanUnloadNow
    ctypes.DllCanUnloadNow()
    # Windows only: This function is a hook which allows to implement in-processCOM servers with ctypes.  It is called from the DllCanUnloadNow fu
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_DllGetClassObject 
abbr Windows only: This function is a hook which allows to implement in-processCOM servers with ctypes.  It is called from the DllGetClassObject 
alias DllGetClassObject
    ctypes.DllGetClassObject()
    # Windows only: This function is a hook which allows to implement in-processCOM servers with ctypes.  It is called from the DllGetClassObject 
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_util_find_library name
abbr Try to find a library and return a pathname.  name is the library namewithout any prefix like lib, suffix like .so, .dylib or versionnumber 
alias find_library
    ctypes.util.find_library(${1:name})
    # Try to find a library and return a pathname.  name is the library namewithout any prefix like lib, suffix like .so, .dylib or versionnumber 
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_util_find_msvcrt 
abbr Windows only: return the filename of the VC runtype library used by Python,and by the extension modules.  If the name of the library cannot 
alias find_msvcrt
    ctypes.util.find_msvcrt()
    # Windows only: return the filename of the VC runtype library used by Python,and by the extension modules.  If the name of the library cannot 
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_FormatError code
abbr Windows only: Returns a textual description of the error code code.  If noerror code is specified, the last error code is used by calling th
alias FormatError
    ctypes.FormatError(${1:code})
    # Windows only: Returns a textual description of the error code code.  If noerror code is specified, the last error code is used by calling th
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_GetLastError 
abbr Windows only: Returns the last error code set by Windows in the calling thread.This function calls the Windows GetLastError() function direc
alias GetLastError
    ctypes.GetLastError()
    # Windows only: Returns the last error code set by Windows in the calling thread.This function calls the Windows GetLastError() function direc
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_get_errno 
abbr Returns the current value of the ctypes-private copy of the systemerrno variable in the calling thread.
alias get_errno
    ctypes.get_errno()
    # Returns the current value of the ctypes-private copy of the systemerrno variable in the calling thread.
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_get_last_error 
abbr Windows only: returns the current value of the ctypes-private copy of the systemLastError variable in the calling thread.
alias get_last_error
    ctypes.get_last_error()
    # Windows only: returns the current value of the ctypes-private copy of the systemLastError variable in the calling thread.
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_memmove dst_src_count
abbr Same as the standard C memmove library function: copies count bytes fromsrc to dst. dst and src must be integers or ctypes instances that ca
alias memmove
    ctypes.memmove(${1:dst}, ${2:src}, ${3:count})
    # Same as the standard C memmove library function: copies count bytes fromsrc to dst. dst and src must be integers or ctypes instances that ca
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_memset dst_c_count
abbr Same as the standard C memset library function: fills the memory block ataddress dst with count bytes of value c. dst must be an integerspec
alias memset
    ctypes.memset(${1:dst}, ${2:c}, ${3:count})
    # Same as the standard C memset library function: fills the memory block ataddress dst with count bytes of value c. dst must be an integerspec
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_POINTER type
abbr This factory function creates and returns a new ctypes pointer type. Pointertypes are cached an reused internally, so calling this function 
alias POINTER
    ctypes.POINTER(${1:type})
    # This factory function creates and returns a new ctypes pointer type. Pointertypes are cached an reused internally, so calling this function 
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_pointer obj
abbr This function creates a new pointer instance, pointing to obj. The returnedobject is of the type POINTER(type(obj)).
alias pointer
    ctypes.pointer(${1:obj})
    # This function creates a new pointer instance, pointing to obj. The returnedobject is of the type POINTER(type(obj)).
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_resize obj_size
abbr This function resizes the internal memory buffer of obj, which must be aninstance of a ctypes type.  It is not possible to make the buffer s
alias resize
    ctypes.resize(${1:obj}, ${2:size})
    # This function resizes the internal memory buffer of obj, which must be aninstance of a ctypes type.  It is not possible to make the buffer s
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_set_conversion_mode encoding_errors
abbr This function sets the rules that ctypes objects use when converting between8-bit strings and unicode strings.  encoding must be a string sp
alias set_conversion_mode
    ctypes.set_conversion_mode(${1:encoding}, ${2:errors})
    # This function sets the rules that ctypes objects use when converting between8-bit strings and unicode strings.  encoding must be a string sp
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_set_errno value
abbr Set the current value of the ctypes-private copy of the system errnovariable in the calling thread to value and return the previous value.
alias set_errno
    ctypes.set_errno(${1:value})
    # Set the current value of the ctypes-private copy of the system errnovariable in the calling thread to value and return the previous value.
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_set_last_error value
abbr Windows only: set the current value of the ctypes-private copy of the systemLastError variable in the calling thread to value and return the
alias set_last_error
    ctypes.set_last_error(${1:value})
    # Windows only: set the current value of the ctypes-private copy of the systemLastError variable in the calling thread to value and return the
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_sizeof obj_or_type
abbr Returns the size in bytes of a ctypes type or instance memory buffer.Does the same as the C sizeof operator.
alias sizeof
    ctypes.sizeof(${1:obj_or_type})
    # Returns the size in bytes of a ctypes type or instance memory buffer.Does the same as the C sizeof operator.
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_string_at address_size
abbr This function returns the string starting at memory address address. If sizeis specified, it is used as size, otherwise the string is assume
alias string_at
    ctypes.string_at(${1:address}, ${2:size})
    # This function returns the string starting at memory address address. If sizeis specified, it is used as size, otherwise the string is assume
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_WinError code=None_descr=None
abbr Windows only: this function is probably the worst-named thing in ctypes.  Itcreates an instance of WindowsError.  If code is not specified,G
alias WinError
    ctypes.WinError(${1:code=None}, ${2:descr=None})
    # Windows only: this function is probably the worst-named thing in ctypes.  Itcreates an instance of WindowsError.  If code is not specified,G
    # https://docs.python.org/2/library/ctypes.html
snippet ctypes_wstring_at address_size
abbr This function returns the wide character string starting at memory addressaddress as unicode string.  If size is specified, it is used as th
alias wstring_at
    ctypes.wstring_at(${1:address}, ${2:size})
    # This function returns the wide character string starting at memory addressaddress as unicode string.  If size is specified, it is used as th
    # https://docs.python.org/2/library/ctypes.html

snippet curses_ascii_isalnum c
abbr Checks for an ASCII alphanumeric character; it is equivalent to isalpha(c) orisdigit(c).
alias isalnum
    curses.ascii.isalnum(${1:c})
    # Checks for an ASCII alphanumeric character; it is equivalent to isalpha(c) orisdigit(c).
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_isalpha c
abbr Checks for an ASCII alphabetic character; it is equivalent to isupper(c) orislower(c).
alias isalpha
    curses.ascii.isalpha(${1:c})
    # Checks for an ASCII alphabetic character; it is equivalent to isupper(c) orislower(c).
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_isascii c
abbr Checks for a character value that fits in the 7-bit ASCII set.
alias isascii
    curses.ascii.isascii(${1:c})
    # Checks for a character value that fits in the 7-bit ASCII set.
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_isblank c
abbr Checks for an ASCII whitespace character.
alias isblank
    curses.ascii.isblank(${1:c})
    # Checks for an ASCII whitespace character.
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_iscntrl c
abbr Checks for an ASCII control character (in the range 0x00 to 0x1f).
alias iscntrl
    curses.ascii.iscntrl(${1:c})
    # Checks for an ASCII control character (in the range 0x00 to 0x1f).
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_isdigit c
abbr Checks for an ASCII decimal digit, '0' through '9'.  This is equivalentto c in string.digits.
alias isdigit
    curses.ascii.isdigit(${1:c})
    # Checks for an ASCII decimal digit, '0' through '9'.  This is equivalentto c in string.digits.
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_isgraph c
abbr Checks for ASCII any printable character except space.
alias isgraph
    curses.ascii.isgraph(${1:c})
    # Checks for ASCII any printable character except space.
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_islower c
abbr Checks for an ASCII lower-case character.
alias islower
    curses.ascii.islower(${1:c})
    # Checks for an ASCII lower-case character.
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_isprint c
abbr Checks for any ASCII printable character including space.
alias isprint
    curses.ascii.isprint(${1:c})
    # Checks for any ASCII printable character including space.
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_ispunct c
abbr Checks for any printable ASCII character which is not a space or an alphanumericcharacter.
alias ispunct
    curses.ascii.ispunct(${1:c})
    # Checks for any printable ASCII character which is not a space or an alphanumericcharacter.
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_isspace c
abbr Checks for ASCII white-space characters; space, line feed, carriage return, formfeed, horizontal tab, vertical tab.
alias isspace
    curses.ascii.isspace(${1:c})
    # Checks for ASCII white-space characters; space, line feed, carriage return, formfeed, horizontal tab, vertical tab.
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_isupper c
abbr Checks for an ASCII uppercase letter.
alias isupper
    curses.ascii.isupper(${1:c})
    # Checks for an ASCII uppercase letter.
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_isxdigit c
abbr Checks for an ASCII hexadecimal digit.  This is equivalent to c instring.hexdigits.
alias isxdigit
    curses.ascii.isxdigit(${1:c})
    # Checks for an ASCII hexadecimal digit.  This is equivalent to c instring.hexdigits.
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_isctrl c
abbr Checks for an ASCII control character (ordinal values 0 to 31).
alias isctrl
    curses.ascii.isctrl(${1:c})
    # Checks for an ASCII control character (ordinal values 0 to 31).
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_ismeta c
abbr Checks for a non-ASCII character (ordinal values 0x80 and above).
alias ismeta
    curses.ascii.ismeta(${1:c})
    # Checks for a non-ASCII character (ordinal values 0x80 and above).
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_ascii c
abbr Return the ASCII value corresponding to the low 7 bits of c.
alias ascii
    curses.ascii.ascii(${1:c})
    # Return the ASCII value corresponding to the low 7 bits of c.
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_ctrl c
abbr Return the control character corresponding to the given character (the characterbit value is bitwise-anded with 0x1f).
alias ctrl
    curses.ascii.ctrl(${1:c})
    # Return the control character corresponding to the given character (the characterbit value is bitwise-anded with 0x1f).
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_alt c
abbr Return the 8-bit character corresponding to the given ASCII character (thecharacter bit value is bitwise-ored with 0x80).
alias alt
    curses.ascii.alt(${1:c})
    # Return the 8-bit character corresponding to the given ASCII character (thecharacter bit value is bitwise-ored with 0x80).
    # https://docs.python.org/2/library/curses.ascii.html
snippet curses_ascii_unctrl c
abbr Return a string representation of the ASCII character c.  If c is printable,this string is the character itself.  If the character is a cont
alias unctrl
    curses.ascii.unctrl(${1:c})
    # Return a string representation of the ASCII character c.  If c is printable,this string is the character itself.  If the character is a cont
    # https://docs.python.org/2/library/curses.ascii.html

snippet curses_baudrate 
abbr Return the output speed of the terminal in bits per second.  On softwareterminal emulators it will have a fixed high value. Included for his
alias baudrate
    curses.baudrate()
    # Return the output speed of the terminal in bits per second.  On softwareterminal emulators it will have a fixed high value. Included for his
    # https://docs.python.org/2/library/curses.html
snippet curses_beep 
abbr Emit a short attention sound.
alias beep
    curses.beep()
    # Emit a short attention sound.
    # https://docs.python.org/2/library/curses.html
snippet curses_can_change_color 
abbr Return True or False, depending on whether the programmer can change the colorsdisplayed by the terminal.
alias can_change_color
    curses.can_change_color()
    # Return True or False, depending on whether the programmer can change the colorsdisplayed by the terminal.
    # https://docs.python.org/2/library/curses.html
snippet curses_cbreak 
abbr Enter cbreak mode.  In cbreak mode (sometimes called “rare” mode) normal ttyline buffering is turned off and characters are available to be 
alias cbreak
    curses.cbreak()
    # Enter cbreak mode.  In cbreak mode (sometimes called “rare” mode) normal ttyline buffering is turned off and characters are available to be 
    # https://docs.python.org/2/library/curses.html
snippet curses_color_content color_number
abbr Return the intensity of the red, green, and blue (RGB) components in the colorcolor_number, which must be between 0 and COLORS.  A 3-tuple i
alias color_content
    curses.color_content(${1:color_number})
    # Return the intensity of the red, green, and blue (RGB) components in the colorcolor_number, which must be between 0 and COLORS.  A 3-tuple i
    # https://docs.python.org/2/library/curses.html
snippet curses_color_pair color_number
abbr Return the attribute value for displaying text in the specified color.  Thisattribute value can be combined with A_STANDOUT, A_REVERSE,and t
alias color_pair
    curses.color_pair(${1:color_number})
    # Return the attribute value for displaying text in the specified color.  Thisattribute value can be combined with A_STANDOUT, A_REVERSE,and t
    # https://docs.python.org/2/library/curses.html
snippet curses_curs_set visibility
abbr Set the cursor state.  visibility can be set to 0, 1, or 2, for invisible,normal, or very visible.  If the terminal supports the visibility 
alias curs_set
    curses.curs_set(${1:visibility})
    # Set the cursor state.  visibility can be set to 0, 1, or 2, for invisible,normal, or very visible.  If the terminal supports the visibility 
    # https://docs.python.org/2/library/curses.html
snippet curses_def_prog_mode 
abbr Save the current terminal mode as the “program” mode, the mode when the runningprogram is using curses.  (Its counterpart is the “shell” mod
alias def_prog_mode
    curses.def_prog_mode()
    # Save the current terminal mode as the “program” mode, the mode when the runningprogram is using curses.  (Its counterpart is the “shell” mod
    # https://docs.python.org/2/library/curses.html
snippet curses_def_shell_mode 
abbr Save the current terminal mode as the “shell” mode, the mode when the runningprogram is not using curses.  (Its counterpart is the “program”
alias def_shell_mode
    curses.def_shell_mode()
    # Save the current terminal mode as the “shell” mode, the mode when the runningprogram is not using curses.  (Its counterpart is the “program”
    # https://docs.python.org/2/library/curses.html
snippet curses_delay_output ms
abbr Insert an ms millisecond pause in output.
alias delay_output
    curses.delay_output(${1:ms})
    # Insert an ms millisecond pause in output.
    # https://docs.python.org/2/library/curses.html
snippet curses_doupdate 
abbr Update the physical screen.  The curses library keeps two data structures, onerepresenting the current physical screen contents and a virtua
alias doupdate
    curses.doupdate()
    # Update the physical screen.  The curses library keeps two data structures, onerepresenting the current physical screen contents and a virtua
    # https://docs.python.org/2/library/curses.html
snippet curses_echo 
abbr Enter echo mode.  In echo mode, each character input is echoed to the screen asit is entered.
alias echo
    curses.echo()
    # Enter echo mode.  In echo mode, each character input is echoed to the screen asit is entered.
    # https://docs.python.org/2/library/curses.html
snippet curses_endwin 
abbr De-initialize the library, and return terminal to normal status.
alias endwin
    curses.endwin()
    # De-initialize the library, and return terminal to normal status.
    # https://docs.python.org/2/library/curses.html
snippet curses_erasechar 
abbr Return the user’s current erase character.  Under Unix operating systems thisis a property of the controlling tty of the curses program, and
alias erasechar
    curses.erasechar()
    # Return the user’s current erase character.  Under Unix operating systems thisis a property of the controlling tty of the curses program, and
    # https://docs.python.org/2/library/curses.html
snippet curses_filter 
abbr The filter() routine, if used, must be called before initscr() iscalled.  The effect is that, during those calls, LINES is set to 1; thecapa
alias filter
    curses.filter()
    # The filter() routine, if used, must be called before initscr() iscalled.  The effect is that, during those calls, LINES is set to 1; thecapa
    # https://docs.python.org/2/library/curses.html
snippet curses_flash 
abbr Flash the screen.  That is, change it to reverse-video and then change it backin a short interval.  Some people prefer such as ‘visible bell
alias flash
    curses.flash()
    # Flash the screen.  That is, change it to reverse-video and then change it backin a short interval.  Some people prefer such as ‘visible bell
    # https://docs.python.org/2/library/curses.html
snippet curses_flushinp 
abbr Flush all input buffers.  This throws away any  typeahead  that  has been typedby the user and has not yet been processed by the program.
alias flushinp
    curses.flushinp()
    # Flush all input buffers.  This throws away any  typeahead  that  has been typedby the user and has not yet been processed by the program.
    # https://docs.python.org/2/library/curses.html
snippet curses_getmouse 
abbr After getch() returns KEY_MOUSE to signal a mouse event, thismethod should be call to retrieve the queued mouse event, represented as a5-tup
alias getmouse
    curses.getmouse()
    # After getch() returns KEY_MOUSE to signal a mouse event, thismethod should be call to retrieve the queued mouse event, represented as a5-tup
    # https://docs.python.org/2/library/curses.html
snippet curses_getsyx 
abbr Return the current coordinates of the virtual screen cursor in y and x.  Ifleaveok is currently true, then -1,-1 is returned.
alias getsyx
    curses.getsyx()
    # Return the current coordinates of the virtual screen cursor in y and x.  Ifleaveok is currently true, then -1,-1 is returned.
    # https://docs.python.org/2/library/curses.html
snippet curses_getwin file
abbr Read window related data stored in the file by an earlier putwin() call.The routine then creates and initializes a new window using that dat
alias getwin
    curses.getwin(${1:file})
    # Read window related data stored in the file by an earlier putwin() call.The routine then creates and initializes a new window using that dat
    # https://docs.python.org/2/library/curses.html
snippet curses_has_colors 
abbr Return True if the terminal can display colors; otherwise, return False.
alias has_colors
    curses.has_colors()
    # Return True if the terminal can display colors; otherwise, return False.
    # https://docs.python.org/2/library/curses.html
snippet curses_has_ic 
abbr Return True if the terminal has insert- and delete-character capabilities.This function is included for historical reasons only, as all mode
alias has_ic
    curses.has_ic()
    # Return True if the terminal has insert- and delete-character capabilities.This function is included for historical reasons only, as all mode
    # https://docs.python.org/2/library/curses.html
snippet curses_has_il 
abbr Return True if the terminal has insert- and delete-line capabilities, or cansimulate  them  using scrolling regions. This function is includ
alias has_il
    curses.has_il()
    # Return True if the terminal has insert- and delete-line capabilities, or cansimulate  them  using scrolling regions. This function is includ
    # https://docs.python.org/2/library/curses.html
snippet curses_has_key ch
abbr Take a key value ch, and return True if the current terminal type recognizesa key with that value.
alias has_key
    curses.has_key(${1:ch})
    # Take a key value ch, and return True if the current terminal type recognizesa key with that value.
    # https://docs.python.org/2/library/curses.html
snippet curses_halfdelay tenths
abbr Used for half-delay mode, which is similar to cbreak mode in that characterstyped by the user are immediately available to the program. Howe
alias halfdelay
    curses.halfdelay(${1:tenths})
    # Used for half-delay mode, which is similar to cbreak mode in that characterstyped by the user are immediately available to the program. Howe
    # https://docs.python.org/2/library/curses.html
snippet curses_init_color color_number_r_g_b
abbr Change the definition of a color, taking the number of the color to be changedfollowed by three RGB values (for the amounts of red, green, a
alias init_color
    curses.init_color(${1:color_number}, ${2:r}, ${3:g}, ${4:b})
    # Change the definition of a color, taking the number of the color to be changedfollowed by three RGB values (for the amounts of red, green, a
    # https://docs.python.org/2/library/curses.html
snippet curses_init_pair pair_number_fg_bg
abbr Change the definition of a color-pair.  It takes three arguments: the number ofthe color-pair to be changed, the foreground color number, an
alias init_pair
    curses.init_pair(${1:pair_number}, ${2:fg}, ${3:bg})
    # Change the definition of a color-pair.  It takes three arguments: the number ofthe color-pair to be changed, the foreground color number, an
    # https://docs.python.org/2/library/curses.html
snippet curses_initscr 
abbr Initialize the library. Return a WindowObject which represents thewhole screen.
alias initscr
    curses.initscr()
    # Initialize the library. Return a WindowObject which represents thewhole screen.
    # https://docs.python.org/2/library/curses.html
snippet curses_is_term_resized nlines_ncols
abbr Return True if resize_term() would modify the window structure,False otherwise.
alias is_term_resized
    curses.is_term_resized(${1:nlines}, ${2:ncols})
    # Return True if resize_term() would modify the window structure,False otherwise.
    # https://docs.python.org/2/library/curses.html
snippet curses_isendwin 
abbr Return True if endwin() has been called (that is, the  curses library hasbeen deinitialized).
alias isendwin
    curses.isendwin()
    # Return True if endwin() has been called (that is, the  curses library hasbeen deinitialized).
    # https://docs.python.org/2/library/curses.html
snippet curses_keyname k
abbr Return the name of the key numbered k.  The name of a key generating printableASCII character is the key’s character.  The name of a control
alias keyname
    curses.keyname(${1:k})
    # Return the name of the key numbered k.  The name of a key generating printableASCII character is the key’s character.  The name of a control
    # https://docs.python.org/2/library/curses.html
snippet curses_killchar 
abbr Return the user’s current line kill character. Under Unix operating systemsthis is a property of the controlling tty of the curses program, 
alias killchar
    curses.killchar()
    # Return the user’s current line kill character. Under Unix operating systemsthis is a property of the controlling tty of the curses program, 
    # https://docs.python.org/2/library/curses.html
snippet curses_longname 
abbr Return a string containing the terminfo long name field describing the currentterminal.  The maximum length of a verbose description is 128 
alias longname
    curses.longname()
    # Return a string containing the terminfo long name field describing the currentterminal.  The maximum length of a verbose description is 128 
    # https://docs.python.org/2/library/curses.html
snippet curses_meta yes
abbr If yes is 1, allow 8-bit characters to be input. If yes is 0,  allow only7-bit chars.
alias meta
    curses.meta(${1:yes})
    # If yes is 1, allow 8-bit characters to be input. If yes is 0,  allow only7-bit chars.
    # https://docs.python.org/2/library/curses.html
snippet curses_mouseinterval interval
abbr Set the maximum time in milliseconds that can elapse between press and releaseevents in order for them to be recognized as a click, and retu
alias mouseinterval
    curses.mouseinterval(${1:interval})
    # Set the maximum time in milliseconds that can elapse between press and releaseevents in order for them to be recognized as a click, and retu
    # https://docs.python.org/2/library/curses.html
snippet curses_mousemask mousemask
abbr Set the mouse events to be reported, and return a tuple (availmask,oldmask).   availmask indicates which of the specified mouse events can b
alias mousemask
    curses.mousemask(${1:mousemask})
    # Set the mouse events to be reported, and return a tuple (availmask,oldmask).   availmask indicates which of the specified mouse events can b
    # https://docs.python.org/2/library/curses.html
snippet curses_napms ms
abbr Sleep for ms milliseconds.
alias napms
    curses.napms(${1:ms})
    # Sleep for ms milliseconds.
    # https://docs.python.org/2/library/curses.html
snippet curses_newpad nlines_ncols
abbr Create and return a pointer to a new pad data structure with the given numberof lines and columns.  A pad is returned as a window object.
alias newpad
    curses.newpad(${1:nlines}, ${2:ncols})
    # Create and return a pointer to a new pad data structure with the given numberof lines and columns.  A pad is returned as a window object.
    # https://docs.python.org/2/library/curses.html
snippet curses_newwin nlines_ncols
abbr Return a new window, whose left-upper corner is at  (begin_y, begin_x), andwhose height/width is  nlines/ncols.
alias newwin
    curses.newwin(${1:nlines}, ${2:ncols})
    # Return a new window, whose left-upper corner is at  (begin_y, begin_x), andwhose height/width is  nlines/ncols.
    # https://docs.python.org/2/library/curses.html
snippet curses_nl 
abbr Enter newline mode.  This mode translates the return key into newline on input,and translates newline into return and line-feed on output. N
alias nl
    curses.nl()
    # Enter newline mode.  This mode translates the return key into newline on input,and translates newline into return and line-feed on output. N
    # https://docs.python.org/2/library/curses.html
snippet curses_nocbreak 
abbr Leave cbreak mode.  Return to normal “cooked” mode with line buffering.
alias nocbreak
    curses.nocbreak()
    # Leave cbreak mode.  Return to normal “cooked” mode with line buffering.
    # https://docs.python.org/2/library/curses.html
snippet curses_noecho 
abbr Leave echo mode.  Echoing of input characters is turned off.
alias noecho
    curses.noecho()
    # Leave echo mode.  Echoing of input characters is turned off.
    # https://docs.python.org/2/library/curses.html
snippet curses_nonl 
abbr Leave newline mode.  Disable translation of return into newline on input, anddisable low-level translation of newline into newline/return on
alias nonl
    curses.nonl()
    # Leave newline mode.  Disable translation of return into newline on input, anddisable low-level translation of newline into newline/return on
    # https://docs.python.org/2/library/curses.html
snippet curses_noqiflush 
abbr When the noqiflush() routine is used, normal flush of input and output queuesassociated with the INTR, QUIT and SUSP characters will not be 
alias noqiflush
    curses.noqiflush()
    # When the noqiflush() routine is used, normal flush of input and output queuesassociated with the INTR, QUIT and SUSP characters will not be 
    # https://docs.python.org/2/library/curses.html
snippet curses_noraw 
abbr Leave raw mode. Return to normal “cooked” mode with line buffering.
alias noraw
    curses.noraw()
    # Leave raw mode. Return to normal “cooked” mode with line buffering.
    # https://docs.python.org/2/library/curses.html
snippet curses_pair_content pair_number
abbr Return a tuple (fg, bg) containing the colors for the requested color pair.The value of pair_number must be between 1 and COLOR_PAIRS - 1.
alias pair_content
    curses.pair_content(${1:pair_number})
    # Return a tuple (fg, bg) containing the colors for the requested color pair.The value of pair_number must be between 1 and COLOR_PAIRS - 1.
    # https://docs.python.org/2/library/curses.html
snippet curses_pair_number attr
abbr Return the number of the color-pair set by the attribute value attr.color_pair() is the counterpart to this function.
alias pair_number
    curses.pair_number(${1:attr})
    # Return the number of the color-pair set by the attribute value attr.color_pair() is the counterpart to this function.
    # https://docs.python.org/2/library/curses.html
snippet curses_putp string
abbr Equivalent to tputs(str, 1, putchar); emit the value of a specifiedterminfo capability for the current terminal.  Note that the output of pu
alias putp
    curses.putp(${1:string})
    # Equivalent to tputs(str, 1, putchar); emit the value of a specifiedterminfo capability for the current terminal.  Note that the output of pu
    # https://docs.python.org/2/library/curses.html
snippet curses_qiflush flag
abbr If flag is False, the effect is the same as calling noqiflush(). Ifflag is True, or no argument is provided, the queues will be flushed when
alias qiflush
    curses.qiflush(${1:flag})
    # If flag is False, the effect is the same as calling noqiflush(). Ifflag is True, or no argument is provided, the queues will be flushed when
    # https://docs.python.org/2/library/curses.html
snippet curses_raw 
abbr Enter raw mode.  In raw mode, normal line buffering and  processing ofinterrupt, quit, suspend, and flow control keys are turned off; charac
alias raw
    curses.raw()
    # Enter raw mode.  In raw mode, normal line buffering and  processing ofinterrupt, quit, suspend, and flow control keys are turned off; charac
    # https://docs.python.org/2/library/curses.html
snippet curses_reset_prog_mode 
abbr Restore the  terminal  to “program” mode, as previously saved  bydef_prog_mode().
alias reset_prog_mode
    curses.reset_prog_mode()
    # Restore the  terminal  to “program” mode, as previously saved  bydef_prog_mode().
    # https://docs.python.org/2/library/curses.html
snippet curses_reset_shell_mode 
abbr Restore the  terminal  to “shell” mode, as previously saved  bydef_shell_mode().
alias reset_shell_mode
    curses.reset_shell_mode()
    # Restore the  terminal  to “shell” mode, as previously saved  bydef_shell_mode().
    # https://docs.python.org/2/library/curses.html
snippet curses_resetty 
abbr Restore the state of the terminal modes to what it was at the last call tosavetty().
alias resetty
    curses.resetty()
    # Restore the state of the terminal modes to what it was at the last call tosavetty().
    # https://docs.python.org/2/library/curses.html
snippet curses_resize_term nlines_ncols
abbr Backend function used by resizeterm(), performing most of the work;when resizing the windows, resize_term() blank-fills the areas that areex
alias resize_term
    curses.resize_term(${1:nlines}, ${2:ncols})
    # Backend function used by resizeterm(), performing most of the work;when resizing the windows, resize_term() blank-fills the areas that areex
    # https://docs.python.org/2/library/curses.html
snippet curses_resizeterm nlines_ncols
abbr Resize the standard and current windows to the specified dimensions, andadjusts other bookkeeping data used by the curses library that recor
alias resizeterm
    curses.resizeterm(${1:nlines}, ${2:ncols})
    # Resize the standard and current windows to the specified dimensions, andadjusts other bookkeeping data used by the curses library that recor
    # https://docs.python.org/2/library/curses.html
snippet curses_savetty 
abbr Save the current state of the terminal modes in a buffer, usable byresetty().
alias savetty
    curses.savetty()
    # Save the current state of the terminal modes in a buffer, usable byresetty().
    # https://docs.python.org/2/library/curses.html
snippet curses_setsyx y_x
abbr Set the virtual screen cursor to y, x. If y and x are both -1, thenleaveok is set.
alias setsyx
    curses.setsyx(${1:y}, ${2:x})
    # Set the virtual screen cursor to y, x. If y and x are both -1, thenleaveok is set.
    # https://docs.python.org/2/library/curses.html
snippet curses_setupterm termstr_fd
abbr Initialize the terminal.  termstr is a string giving the terminal name; ifomitted, the value of the TERM environment variable will be used. 
alias setupterm
    curses.setupterm(${1:termstr}, ${2:fd})
    # Initialize the terminal.  termstr is a string giving the terminal name; ifomitted, the value of the TERM environment variable will be used. 
    # https://docs.python.org/2/library/curses.html
snippet curses_start_color 
abbr Must be called if the programmer wants to use colors, and before any other colormanipulation routine is called.  It is good practice to call
alias start_color
    curses.start_color()
    # Must be called if the programmer wants to use colors, and before any other colormanipulation routine is called.  It is good practice to call
    # https://docs.python.org/2/library/curses.html
snippet curses_termattrs 
abbr Return a logical OR of all video attributes supported by the terminal.  Thisinformation is useful when a curses program needs complete contr
alias termattrs
    curses.termattrs()
    # Return a logical OR of all video attributes supported by the terminal.  Thisinformation is useful when a curses program needs complete contr
    # https://docs.python.org/2/library/curses.html
snippet curses_termname 
abbr Return the value of the environment variable TERM, truncated to 14 characters.
alias termname
    curses.termname()
    # Return the value of the environment variable TERM, truncated to 14 characters.
    # https://docs.python.org/2/library/curses.html
snippet curses_tigetflag capname
abbr Return the value of the Boolean capability corresponding to the terminfocapability name capname.  The value -1 is returned if capname is not
alias tigetflag
    curses.tigetflag(${1:capname})
    # Return the value of the Boolean capability corresponding to the terminfocapability name capname.  The value -1 is returned if capname is not
    # https://docs.python.org/2/library/curses.html
snippet curses_tigetnum capname
abbr Return the value of the numeric capability corresponding to the terminfocapability name capname.  The value -2 is returned if capname is not
alias tigetnum
    curses.tigetnum(${1:capname})
    # Return the value of the numeric capability corresponding to the terminfocapability name capname.  The value -2 is returned if capname is not
    # https://docs.python.org/2/library/curses.html
snippet curses_tigetstr capname
abbr Return the value of the string capability corresponding to the terminfocapability name capname.  None is returned if capname is not a string
alias tigetstr
    curses.tigetstr(${1:capname})
    # Return the value of the string capability corresponding to the terminfocapability name capname.  None is returned if capname is not a string
    # https://docs.python.org/2/library/curses.html
snippet curses_tparm str_...
abbr Instantiate the string str with the supplied parameters, where str shouldbe a parameterized string obtained from the terminfo database.  E.g
alias tparm
    curses.tparm(${1:str}, ${2:...})
    # Instantiate the string str with the supplied parameters, where str shouldbe a parameterized string obtained from the terminfo database.  E.g
    # https://docs.python.org/2/library/curses.html
snippet curses_typeahead fd
abbr Specify that the file descriptor fd be used for typeahead checking.  If fdis -1, then no typeahead checking is done.
alias typeahead
    curses.typeahead(${1:fd})
    # Specify that the file descriptor fd be used for typeahead checking.  If fdis -1, then no typeahead checking is done.
    # https://docs.python.org/2/library/curses.html
snippet curses_unctrl ch
abbr Return a string which is a printable representation of the character ch.Control characters are displayed as a caret followed by the characte
alias unctrl
    curses.unctrl(${1:ch})
    # Return a string which is a printable representation of the character ch.Control characters are displayed as a caret followed by the characte
    # https://docs.python.org/2/library/curses.html
snippet curses_ungetch ch
abbr Push ch so the next getch() will return it.
alias ungetch
    curses.ungetch(${1:ch})
    # Push ch so the next getch() will return it.
    # https://docs.python.org/2/library/curses.html
snippet curses_ungetmouse id_x_y_z_bstate
abbr Push a KEY_MOUSE event onto the input queue, associating the givenstate data with it.
alias ungetmouse
    curses.ungetmouse(${1:id}, ${2:x}, ${3:y}, ${4:z}, ${5:bstate})
    # Push a KEY_MOUSE event onto the input queue, associating the givenstate data with it.
    # https://docs.python.org/2/library/curses.html
snippet curses_use_env flag
abbr If used, this function should be called before initscr() or newterm arecalled.  When flag is False, the values of lines and columns specifie
alias use_env
    curses.use_env(${1:flag})
    # If used, this function should be called before initscr() or newterm arecalled.  When flag is False, the values of lines and columns specifie
    # https://docs.python.org/2/library/curses.html
snippet curses_use_default_colors 
abbr Allow use of default values for colors on terminals supporting this feature. Usethis to support transparency in your application.  The defau
alias use_default_colors
    curses.use_default_colors()
    # Allow use of default values for colors on terminals supporting this feature. Usethis to support transparency in your application.  The defau
    # https://docs.python.org/2/library/curses.html
snippet curses_wrapper func_...
abbr Initialize curses and call another callable object, func, which should be therest of your curses-using application.  If the application rais
alias wrapper
    curses.wrapper(${1:func}, ${2:...})
    # Initialize curses and call another callable object, func, which should be therest of your curses-using application.  If the application rais
    # https://docs.python.org/2/library/curses.html
snippet curses_textpad_rectangle win_uly_ulx_lry_lrx
abbr Draw a rectangle.  The first argument must be a window object; the remainingarguments are coordinates relative to that window.  The second a
alias rectangle
    curses.textpad.rectangle(${1:win}, ${2:uly}, ${3:ulx}, ${4:lry}, ${5:lrx})
    # Draw a rectangle.  The first argument must be a window object; the remainingarguments are coordinates relative to that window.  The second a
    # https://docs.python.org/2/library/curses.html

snippet curses_panel_bottom_panel 
abbr Returns the bottom panel in the panel stack.
alias bottom_panel
    curses.panel.bottom_panel()
    # Returns the bottom panel in the panel stack.
    # https://docs.python.org/2/library/curses.panel.html
snippet curses_panel_new_panel win
abbr Returns a panel object, associating it with the given window win. Be awarethat you need to keep the returned panel object referenced explici
alias new_panel
    curses.panel.new_panel(${1:win})
    # Returns a panel object, associating it with the given window win. Be awarethat you need to keep the returned panel object referenced explici
    # https://docs.python.org/2/library/curses.panel.html
snippet curses_panel_top_panel 
abbr Returns the top panel in the panel stack.
alias top_panel
    curses.panel.top_panel()
    # Returns the top panel in the panel stack.
    # https://docs.python.org/2/library/curses.panel.html
snippet curses_panel_update_panels 
abbr Updates the virtual screen after changes in the panel stack. This does not callcurses.doupdate(), so you’ll have to do this yourself.
alias update_panels
    curses.panel.update_panels()
    # Updates the virtual screen after changes in the panel stack. This does not callcurses.doupdate(), so you’ll have to do this yourself.
    # https://docs.python.org/2/library/curses.panel.html







snippet dbhash_open path_flag_mode
abbr Open a db database and return the database object.  The path argument isthe name of the database file.
alias open
    dbhash.open(${1:path}, ${2:flag}, ${3:mode})
    # Open a db database and return the database object.  The path argument isthe name of the database file.
    # https://docs.python.org/2/library/dbhash.html

snippet dbm_open filename_flag_mode
abbr Open a dbm database and return a dbm object.  The filename argument is thename of the database file (without the .dir or .pag extensions;not
alias open
    dbm.open(${1:filename}, ${2:flag}, ${3:mode})
    # Open a dbm database and return a dbm object.  The filename argument is thename of the database file (without the .dir or .pag extensions;not
    # https://docs.python.org/2/library/dbm.html
snippet dbm_close 
abbr Open a dbm database and return a dbm object.  The filename argument is thename of the database file (without the .dir or .pag extensions;not
alias close
    dbm.close()
    # Open a dbm database and return a dbm object.  The filename argument is thename of the database file (without the .dir or .pag extensions;not
    # https://docs.python.org/2/library/dbm.html



snippet decimal_getcontext 
abbr Return the current context for the active thread.
alias getcontext
    decimal.getcontext()
    # Return the current context for the active thread.
    # https://docs.python.org/2/library/decimal.html
snippet decimal_setcontext c
abbr Set the current context for the active thread to c.
alias setcontext
    decimal.setcontext(${1:c})
    # Set the current context for the active thread to c.
    # https://docs.python.org/2/library/decimal.html
snippet decimal_localcontext c
abbr Return a context manager that will set the current context for the active threadto a copy of c on entry to the with-statement and restore th
alias localcontext
    decimal.localcontext(${1:c})
    # Return a context manager that will set the current context for the active threadto a copy of c on entry to the with-statement and restore th
    # https://docs.python.org/2/library/decimal.html



snippet __init__ tabsize=8_wrapcolumn=None_linejunk=None_charjunk=IS_CHARACTER_JUNK
abbr This class can be used to create an HTML table (or a complete HTML filecontaining the table) showing a side by side, line by line comparison
alias __init__
    __init__(${1:tabsize=8}, ${2:wrapcolumn=None}, ${3:linejunk=None}, ${4:charjunk=IS_CHARACTER_JUNK})
    # This class can be used to create an HTML table (or a complete HTML filecontaining the table) showing a side by side, line by line comparison
    # https://docs.python.org/2/library/difflib.html
snippet make_file fromlines, tolines [, fromdesc][, todesc][, context][, numlines]
abbr This class can be used to create an HTML table (or a complete HTML filecontaining the table) showing a side by side, line by line comparison
alias make_file
    make_file(${1:fromlines, tolines [, fromdesc][, todesc][, context][, numlines]})
    # This class can be used to create an HTML table (or a complete HTML filecontaining the table) showing a side by side, line by line comparison
    # https://docs.python.org/2/library/difflib.html
snippet make_table fromlines, tolines [, fromdesc][, todesc][, context][, numlines]
abbr This class can be used to create an HTML table (or a complete HTML filecontaining the table) showing a side by side, line by line comparison
alias make_table
    make_table(${1:fromlines, tolines [, fromdesc][, todesc][, context][, numlines]})
    # This class can be used to create an HTML table (or a complete HTML filecontaining the table) showing a side by side, line by line comparison
    # https://docs.python.org/2/library/difflib.html
snippet difflib_context_diff a, b[, fromfile][, tofile][, fromfiledate][, tofiledate][, n][, lineterm]
abbr Compare a and b (lists of strings); return a delta (a generatorgenerating the delta lines) in context diff format.
alias context_diff
    difflib.context_diff(${1:a, b[, fromfile][, tofile][, fromfiledate][, tofiledate][, n][, lineterm]})
    # Compare a and b (lists of strings); return a delta (a generatorgenerating the delta lines) in context diff format.
    # https://docs.python.org/2/library/difflib.html
snippet difflib_get_close_matches word, possibilities[, n][, cutoff]
abbr Return a list of the best “good enough” matches.  word is a sequence for whichclose matches are desired (typically a string), and possibilit
alias get_close_matches
    difflib.get_close_matches(${1:word, possibilities[, n][, cutoff]})
    # Return a list of the best “good enough” matches.  word is a sequence for whichclose matches are desired (typically a string), and possibilit
    # https://docs.python.org/2/library/difflib.html
snippet difflib_ndiff a, b[, linejunk][, charjunk]
abbr Compare a and b (lists of strings); return a Differ-styledelta (a generator generating the delta lines).
alias ndiff
    difflib.ndiff(${1:a, b[, linejunk][, charjunk]})
    # Compare a and b (lists of strings); return a Differ-styledelta (a generator generating the delta lines).
    # https://docs.python.org/2/library/difflib.html
snippet difflib_restore sequence_which
abbr Return one of the two sequences that generated a delta.
alias restore
    difflib.restore(${1:sequence}, ${2:which})
    # Return one of the two sequences that generated a delta.
    # https://docs.python.org/2/library/difflib.html
snippet difflib_unified_diff a, b[, fromfile][, tofile][, fromfiledate][, tofiledate][, n][, lineterm]
abbr Compare a and b (lists of strings); return a delta (a generatorgenerating the delta lines) in unified diff format.
alias unified_diff
    difflib.unified_diff(${1:a, b[, fromfile][, tofile][, fromfiledate][, tofiledate][, n][, lineterm]})
    # Compare a and b (lists of strings); return a delta (a generatorgenerating the delta lines) in unified diff format.
    # https://docs.python.org/2/library/difflib.html
snippet difflib_IS_LINE_JUNK line
abbr Return true for ignorable lines.  The line line is ignorable if line isblank or contains a single '#', otherwise it is not ignorable.  Used 
alias IS_LINE_JUNK
    difflib.IS_LINE_JUNK(${1:line})
    # Return true for ignorable lines.  The line line is ignorable if line isblank or contains a single '#', otherwise it is not ignorable.  Used 
    # https://docs.python.org/2/library/difflib.html
snippet difflib_IS_CHARACTER_JUNK ch
abbr Return true for ignorable characters.  The character ch is ignorable if chis a space or tab, otherwise it is not ignorable.  Used as a defau
alias IS_CHARACTER_JUNK
    difflib.IS_CHARACTER_JUNK(${1:ch})
    # Return true for ignorable characters.  The character ch is ignorable if chis a space or tab, otherwise it is not ignorable.  Used as a defau
    # https://docs.python.org/2/library/difflib.html

snippet dircache_reset 
abbr Resets the directory cache.
alias reset
    dircache.reset()
    # Resets the directory cache.
    # https://docs.python.org/2/library/dircache.html
snippet dircache_listdir path
abbr Return a directory listing of path, as gotten from os.listdir(). Notethat unless path changes, further call to listdir() will not re-read th
alias listdir
    dircache.listdir(${1:path})
    # Return a directory listing of path, as gotten from os.listdir(). Notethat unless path changes, further call to listdir() will not re-read th
    # https://docs.python.org/2/library/dircache.html
snippet dircache_opendir path
abbr Same as listdir(). Defined for backwards compatibility.
alias opendir
    dircache.opendir(${1:path})
    # Same as listdir(). Defined for backwards compatibility.
    # https://docs.python.org/2/library/dircache.html
snippet dircache_annotate head_list
abbr Assume list is a list of paths relative to head, and append, in place, a'/' to each path which points to a directory.
alias annotate
    dircache.annotate(${1:head}, ${2:list})
    # Assume list is a list of paths relative to head, and append, in place, a'/' to each path which points to a directory.
    # https://docs.python.org/2/library/dircache.html

snippet dis_dis bytesource
abbr Disassemble the bytesource object. bytesource can denote either a module, aclass, a method, a function, or a code object.   For a module, it
alias dis
    dis.dis(${1:bytesource})
    # Disassemble the bytesource object. bytesource can denote either a module, aclass, a method, a function, or a code object.   For a module, it
    # https://docs.python.org/2/library/dis.html
snippet dis_distb tb
abbr Disassembles the top-of-stack function of a traceback, using the last tracebackif none was passed.  The instruction causing the exception is
alias distb
    dis.distb(${1:tb})
    # Disassembles the top-of-stack function of a traceback, using the last tracebackif none was passed.  The instruction causing the exception is
    # https://docs.python.org/2/library/dis.html
snippet dis_disassemble code_lasti
abbr Disassembles a code object, indicating the last instruction if lasti wasprovided.  The output is divided in the following columns:
alias disassemble
    dis.disassemble(${1:code}, ${2:lasti})
    # Disassembles a code object, indicating the last instruction if lasti wasprovided.  The output is divided in the following columns:
    # https://docs.python.org/2/library/dis.html
snippet dis_disco code_lasti
abbr A synonym for disassemble().  It is more convenient to type, and keptfor compatibility with earlier Python releases.
alias disco
    dis.disco(${1:code}, ${2:lasti})
    # A synonym for disassemble().  It is more convenient to type, and keptfor compatibility with earlier Python releases.
    # https://docs.python.org/2/library/dis.html
snippet dis_findlinestarts code
abbr This generator function uses the co_firstlineno and co_lnotabattributes of the code object code to find the offsets which are starts oflines
alias findlinestarts
    dis.findlinestarts(${1:code})
    # This generator function uses the co_firstlineno and co_lnotabattributes of the code object code to find the offsets which are starts oflines
    # https://docs.python.org/2/library/dis.html
snippet dis_findlabels code
abbr Detect all offsets in the code object code which are jump targets, andreturn a list of these offsets.
alias findlabels
    dis.findlabels(${1:code})
    # Detect all offsets in the code object code which are jump targets, andreturn a list of these offsets.
    # https://docs.python.org/2/library/dis.html



snippet dl_open name_mode=RTLD_LAZY
abbr Open a shared object file, and return a handle. Mode signifies late binding(RTLD_LAZY) or immediate binding (RTLD_NOW). Default isRTLD_LAZY.
alias open
    dl.open(${1:name}, ${2:mode=RTLD_LAZY})
    # Open a shared object file, and return a handle. Mode signifies late binding(RTLD_LAZY) or immediate binding (RTLD_NOW). Default isRTLD_LAZY.
    # https://docs.python.org/2/library/dl.html

snippet doctest_register_optionflag name
abbr Create a new option flag with a given name, and return the new flag’s integervalue.  register_optionflag() can be used when subclassingOutpu
alias register_optionflag
    doctest.register_optionflag(${1:name})
    # Create a new option flag with a given name, and return the new flag’s integervalue.  register_optionflag() can be used when subclassingOutpu
    # https://docs.python.org/2/library/doctest.html
snippet doctest_testfile filename[, module_relative][, name][, package][, globs][, verbose][, report][, optionflags][, extraglobs][, raise_on_error][, parser][, encoding]
abbr All arguments except filename are optional, and should be specified in keywordform.
alias testfile
    doctest.testfile(${1:filename[, module_relative][, name][, package][, globs][, verbose][, report][, optionflags][, extraglobs][, raise_on_error][, parser][, encoding]})
    # All arguments except filename are optional, and should be specified in keywordform.
    # https://docs.python.org/2/library/doctest.html
snippet doctest_testmod [m][, name][, globs][, verbose][, report][, optionflags][, extraglobs][, raise_on_error][, exclude_empty]
abbr All arguments are optional, and all except for m should be specified inkeyword form.
alias testmod
    doctest.testmod(${1:[m][, name][, globs][, verbose][, report][, optionflags][, extraglobs][, raise_on_error][, exclude_empty]})
    # All arguments are optional, and all except for m should be specified inkeyword form.
    # https://docs.python.org/2/library/doctest.html
snippet doctest_run_docstring_examples f, globs[, verbose][, name][, compileflags][, optionflags]
abbr Test examples associated with object f; for example, f may be a module,function, or class object.
alias run_docstring_examples
    doctest.run_docstring_examples(${1:f, globs[, verbose][, name][, compileflags][, optionflags]})
    # Test examples associated with object f; for example, f may be a module,function, or class object.
    # https://docs.python.org/2/library/doctest.html
snippet doctest_DocFileSuite *paths, [module_relative][, package][, setUp][, tearDown][, globs][, optionflags][, parser][, encoding]
abbr Convert doctest tests from one or more text files to aunittest.TestSuite.
alias DocFileSuite
    doctest.DocFileSuite(${1:*paths, [module_relative][, package][, setUp][, tearDown][, globs][, optionflags][, parser][, encoding]})
    # Convert doctest tests from one or more text files to aunittest.TestSuite.
    # https://docs.python.org/2/library/doctest.html
snippet doctest_DocTestSuite [module][, globs][, extraglobs][, test_finder][, setUp][, tearDown][, checker]
abbr Convert doctest tests for a module to a unittest.TestSuite.
alias DocTestSuite
    doctest.DocTestSuite(${1:[module][, globs][, extraglobs][, test_finder][, setUp][, tearDown][, checker]})
    # Convert doctest tests for a module to a unittest.TestSuite.
    # https://docs.python.org/2/library/doctest.html
snippet doctest_set_unittest_reportflags flags
abbr Set the doctest reporting flags to use.
alias set_unittest_reportflags
    doctest.set_unittest_reportflags(${1:flags})
    # Set the doctest reporting flags to use.
    # https://docs.python.org/2/library/doctest.html
snippet doctest_script_from_examples s
abbr Convert text with examples to a script.
alias script_from_examples
    doctest.script_from_examples(${1:s})
    # Convert text with examples to a script.
    # https://docs.python.org/2/library/doctest.html
snippet doctest_testsource module_name
abbr Convert the doctest for an object to a script.
alias testsource
    doctest.testsource(${1:module}, ${2:name})
    # Convert the doctest for an object to a script.
    # https://docs.python.org/2/library/doctest.html
snippet doctest_debug module_name_pm
abbr Debug the doctests for an object.
alias debug
    doctest.debug(${1:module}, ${2:name}, ${3:pm})
    # Debug the doctests for an object.
    # https://docs.python.org/2/library/doctest.html
snippet doctest_debug_src src[, pm][, globs]
abbr Debug the doctests in a string.
alias debug_src
    doctest.debug_src(${1:src[, pm][, globs]})
    # Debug the doctests in a string.
    # https://docs.python.org/2/library/doctest.html



snippet dumbdbm_open filename_flag_mode
abbr Open a dumbdbm database and return a dumbdbm object.  The filename argument isthe basename of the database file (without any specific extens
alias open
    dumbdbm.open(${1:filename}, ${2:flag}, ${3:mode})
    # Open a dumbdbm database and return a dumbdbm object.  The filename argument isthe basename of the database file (without any specific extens
    # https://docs.python.org/2/library/dumbdbm.html
snippet dumbdbm_close 
abbr Close the dumbdm database.
alias close
    dumbdbm.close()
    # Close the dumbdm database.
    # https://docs.python.org/2/library/dumbdbm.html





snippet EasyDialogs_Message str_id_ok
abbr Displays a modal dialog with the message text str, which should be at most 255characters long. The button text defaults to “OK”, but is set 
alias Message
    EasyDialogs.Message(${1:str}, ${2:id}, ${3:ok})
    # Displays a modal dialog with the message text str, which should be at most 255characters long. The button text defaults to “OK”, but is set 
    # https://docs.python.org/2/library/easydialogs.html
snippet EasyDialogs_AskString prompt_default_id_ok_cancel
abbr Asks the user to input a string value via a modal dialog. prompt is the promptmessage, and the optional default supplies the initial value f
alias AskString
    EasyDialogs.AskString(${1:prompt}, ${2:default}, ${3:id}, ${4:ok}, ${5:cancel})
    # Asks the user to input a string value via a modal dialog. prompt is the promptmessage, and the optional default supplies the initial value f
    # https://docs.python.org/2/library/easydialogs.html
snippet EasyDialogs_AskPassword prompt_default_id_ok_cancel
abbr Asks the user to input a string value via a modal dialog. LikeAskString(), but with the text shown as bullets. The arguments have thesame me
alias AskPassword
    EasyDialogs.AskPassword(${1:prompt}, ${2:default}, ${3:id}, ${4:ok}, ${5:cancel})
    # Asks the user to input a string value via a modal dialog. LikeAskString(), but with the text shown as bullets. The arguments have thesame me
    # https://docs.python.org/2/library/easydialogs.html
snippet EasyDialogs_AskYesNoCancel question_default_yes_no_cancel_id
abbr Presents a dialog with prompt question and three buttons labelled “Yes”, “No”,and “Cancel”. Returns 1 for “Yes”, 0 for “No” and -1 for “Canc
alias AskYesNoCancel
    EasyDialogs.AskYesNoCancel(${1:question}, ${2:default}, ${3:yes}, ${4:no}, ${5:cancel}, ${6:id})
    # Presents a dialog with prompt question and three buttons labelled “Yes”, “No”,and “Cancel”. Returns 1 for “Yes”, 0 for “No” and -1 for “Canc
    # https://docs.python.org/2/library/easydialogs.html
snippet EasyDialogs_ProgressBar title_maxval_label_id
abbr Displays a modeless progress-bar dialog. This is the constructor for theProgressBar class described below. title is the text string displaye
alias ProgressBar
    EasyDialogs.ProgressBar(${1:title}, ${2:maxval}, ${3:label}, ${4:id})
    # Displays a modeless progress-bar dialog. This is the constructor for theProgressBar class described below. title is the text string displaye
    # https://docs.python.org/2/library/easydialogs.html
snippet EasyDialogs_GetArgv [optionlist[ commandlist[, addoldfile[, addnewfile[, addfolder[, id]]]]]]
abbr Displays a dialog which aids the user in constructing a command-line argumentlist.  Returns the list in sys.argv format, suitable for passin
alias GetArgv
    EasyDialogs.GetArgv(${1:[optionlist[ commandlist[, addoldfile[, addnewfile[, addfolder[, id]]]]]]})
    # Displays a dialog which aids the user in constructing a command-line argumentlist.  Returns the list in sys.argv format, suitable for passin
    # https://docs.python.org/2/library/easydialogs.html
snippet EasyDialogs_AskFileForOpen  [message] [, typeList] [, defaultLocation] [, defaultOptionFlags] [, location] [, clientName] [, windowTitle] [, actionButtonLabel] [, cancelButtonLabel] [, preferenceKey] [, popupExtension] [, eventProc] [, previewProc] [, filterProc] [, wanted] 
abbr Post a dialog asking the user for a file to open, and return the file selectedor None if the user cancelled. message is a text message to di
alias AskFileForOpen
    EasyDialogs.AskFileForOpen(${1: [message] [, typeList] [, defaultLocation] [, defaultOptionFlags] [, location] [, clientName] [, windowTitle] [, actionButtonLabel] [, cancelButtonLabel] [, preferenceKey] [, popupExtension] [, eventProc] [, previewProc] [, filterProc] [, wanted] })
    # Post a dialog asking the user for a file to open, and return the file selectedor None if the user cancelled. message is a text message to di
    # https://docs.python.org/2/library/easydialogs.html
snippet EasyDialogs_AskFileForSave  [message] [, savedFileName] [, defaultLocation] [, defaultOptionFlags] [, location] [, clientName] [, windowTitle] [, actionButtonLabel] [, cancelButtonLabel] [, preferenceKey] [, popupExtension] [, fileType] [, fileCreator] [, eventProc] [, wanted] 
abbr Post a dialog asking the user for a file to save to, and return the fileselected or None if the user cancelled. savedFileName is the default
alias AskFileForSave
    EasyDialogs.AskFileForSave(${1: [message] [, savedFileName] [, defaultLocation] [, defaultOptionFlags] [, location] [, clientName] [, windowTitle] [, actionButtonLabel] [, cancelButtonLabel] [, preferenceKey] [, popupExtension] [, fileType] [, fileCreator] [, eventProc] [, wanted] })
    # Post a dialog asking the user for a file to save to, and return the fileselected or None if the user cancelled. savedFileName is the default
    # https://docs.python.org/2/library/easydialogs.html
snippet EasyDialogs_AskFolder  [message] [, defaultLocation] [, defaultOptionFlags] [, location] [, clientName] [, windowTitle] [, actionButtonLabel] [, cancelButtonLabel] [, preferenceKey] [, popupExtension] [, eventProc] [, filterProc] [, wanted] 
abbr Post a dialog asking the user to select a folder, and return the folder selectedor None if the user cancelled. See AskFileForOpen() for ades
alias AskFolder
    EasyDialogs.AskFolder(${1: [message] [, defaultLocation] [, defaultOptionFlags] [, location] [, clientName] [, windowTitle] [, actionButtonLabel] [, cancelButtonLabel] [, preferenceKey] [, popupExtension] [, eventProc] [, filterProc] [, wanted] })
    # Post a dialog asking the user to select a folder, and return the folder selectedor None if the user cancelled. See AskFileForOpen() for ades
    # https://docs.python.org/2/library/easydialogs.html



snippet email_charset_add_charset charset_header_enc_body_enc_output_charset
abbr Add character properties to the global registry.
alias add_charset
    email.charset.add_charset(${1:charset}, ${2:header_enc}, ${3:body_enc}, ${4:output_charset})
    # Add character properties to the global registry.
    # https://docs.python.org/2/library/email.charset.html
snippet email_charset_add_alias alias_canonical
abbr Add a character set alias.  alias is the alias name, e.g. latin-1.canonical is the character set’s canonical name, e.g. iso-8859-1.
alias add_alias
    email.charset.add_alias(${1:alias}, ${2:canonical})
    # Add a character set alias.  alias is the alias name, e.g. latin-1.canonical is the character set’s canonical name, e.g. iso-8859-1.
    # https://docs.python.org/2/library/email.charset.html
snippet email_charset_add_codec charset_codecname
abbr Add a codec that map characters in the given character set to and from Unicode.
alias add_codec
    email.charset.add_codec(${1:charset}, ${2:codecname})
    # Add a codec that map characters in the given character set to and from Unicode.
    # https://docs.python.org/2/library/email.charset.html

snippet email_encoders_encode_quopri msg
abbr Encodes the payload into quoted-printable form and sets theContent-Transfer-Encoding header to quoted-printable [1].This is a good encoding 
alias encode_quopri
    email.encoders.encode_quopri(${1:msg})
    # Encodes the payload into quoted-printable form and sets theContent-Transfer-Encoding header to quoted-printable [1].This is a good encoding 
    # https://docs.python.org/2/library/email.encoders.html
snippet email_encoders_encode_base64 msg
abbr Encodes the payload into base64 form and sets theContent-Transfer-Encoding header to base64.  This is a goodencoding to use when most of you
alias encode_base64
    email.encoders.encode_base64(${1:msg})
    # Encodes the payload into base64 form and sets theContent-Transfer-Encoding header to base64.  This is a goodencoding to use when most of you
    # https://docs.python.org/2/library/email.encoders.html
snippet email_encoders_encode_7or8bit msg
abbr This doesn’t actually modify the message’s payload, but it does set theContent-Transfer-Encoding header to either 7bit or 8bit asappropriate
alias encode_7or8bit
    email.encoders.encode_7or8bit(${1:msg})
    # This doesn’t actually modify the message’s payload, but it does set theContent-Transfer-Encoding header to either 7bit or 8bit asappropriate
    # https://docs.python.org/2/library/email.encoders.html
snippet email_encoders_encode_noop msg
abbr This does nothing; it doesn’t even set theContent-Transfer-Encoding header.
alias encode_noop
    email.encoders.encode_noop(${1:msg})
    # This does nothing; it doesn’t even set theContent-Transfer-Encoding header.
    # https://docs.python.org/2/library/email.encoders.html





snippet email_header_decode_header header
abbr Decode a message header value without converting the character set. The headervalue is in header.
alias decode_header
    email.header.decode_header(${1:header})
    # Decode a message header value without converting the character set. The headervalue is in header.
    # https://docs.python.org/2/library/email.header.html
snippet email_header_make_header decoded_seq_maxlinelen_header_name_continuation_ws
abbr Create a Header instance from a sequence of pairs as returned bydecode_header().
alias make_header
    email.header.make_header(${1:decoded_seq}, ${2:maxlinelen}, ${3:header_name}, ${4:continuation_ws})
    # Create a Header instance from a sequence of pairs as returned bydecode_header().
    # https://docs.python.org/2/library/email.header.html



snippet email_iterators_body_line_iterator msg_decode
abbr This iterates over all the payloads in all the subparts of msg, returning thestring payloads line-by-line.  It skips over all the subpart he
alias body_line_iterator
    email.iterators.body_line_iterator(${1:msg}, ${2:decode})
    # This iterates over all the payloads in all the subparts of msg, returning thestring payloads line-by-line.  It skips over all the subpart he
    # https://docs.python.org/2/library/email.iterators.html
snippet email_iterators_typed_subpart_iterator msg_maintype_subtype
abbr This iterates over all the subparts of msg, returning only those subparts thatmatch the MIME type specified by maintype and subtype.
alias typed_subpart_iterator
    email.iterators.typed_subpart_iterator(${1:msg}, ${2:maintype}, ${3:subtype})
    # This iterates over all the subparts of msg, returning only those subparts thatmatch the MIME type specified by maintype and subtype.
    # https://docs.python.org/2/library/email.iterators.html
snippet email_iterators__structure msg_fp_level
abbr Prints an indented representation of the content types of the message objectstructure.  For example:
alias _structure
    email.iterators._structure(${1:msg}, ${2:fp}, ${3:level})
    # Prints an indented representation of the content types of the message objectstructure.  For example:
    # https://docs.python.org/2/library/email.iterators.html





snippet email_message_from_string s__class_strict
abbr Return a message object structure from a string.  This is exactly equivalent toParser().parsestr(s).  Optional _class and strict are interpr
alias message_from_string
    email.message_from_string(${1:s}, ${2:_class}, ${3:strict})
    # Return a message object structure from a string.  This is exactly equivalent toParser().parsestr(s).  Optional _class and strict are interpr
    # https://docs.python.org/2/library/email.parser.html
snippet email_message_from_file fp__class_strict
abbr Return a message object structure tree from an open file object.  This isexactly equivalent to Parser().parse(fp).  Optional _class and stri
alias message_from_file
    email.message_from_file(${1:fp}, ${2:_class}, ${3:strict})
    # Return a message object structure tree from an open file object.  This isexactly equivalent to Parser().parse(fp).  Optional _class and stri
    # https://docs.python.org/2/library/email.parser.html

snippet email_utils_quote str
abbr Return a new string with backslashes in str replaced by two backslashes, anddouble quotes replaced by backslash-double quote.
alias quote
    email.utils.quote(${1:str})
    # Return a new string with backslashes in str replaced by two backslashes, anddouble quotes replaced by backslash-double quote.
    # https://docs.python.org/2/library/email.util.html
snippet email_utils_unquote str
abbr Return a new string which is an unquoted version of str. If str ends andbegins with double quotes, they are stripped off.  Likewise if str e
alias unquote
    email.utils.unquote(${1:str})
    # Return a new string which is an unquoted version of str. If str ends andbegins with double quotes, they are stripped off.  Likewise if str e
    # https://docs.python.org/2/library/email.util.html
snippet email_utils_parseaddr address
abbr Parse address – which should be the value of some address-containing field suchas To or Cc – into its constituent realname andemail address 
alias parseaddr
    email.utils.parseaddr(${1:address})
    # Parse address – which should be the value of some address-containing field suchas To or Cc – into its constituent realname andemail address 
    # https://docs.python.org/2/library/email.util.html
snippet email_utils_formataddr pair
abbr The inverse of parseaddr(), this takes a 2-tuple of the form (realname,email_address) and returns the string value suitable for a To orCc he
alias formataddr
    email.utils.formataddr(${1:pair})
    # The inverse of parseaddr(), this takes a 2-tuple of the form (realname,email_address) and returns the string value suitable for a To orCc he
    # https://docs.python.org/2/library/email.util.html
snippet email_utils_getaddresses fieldvalues
abbr This method returns a list of 2-tuples of the form returned by parseaddr().fieldvalues is a sequence of header field values as might be retu
alias getaddresses
    email.utils.getaddresses(${1:fieldvalues})
    # This method returns a list of 2-tuples of the form returned by parseaddr().fieldvalues is a sequence of header field values as might be retu
    # https://docs.python.org/2/library/email.util.html
snippet email_utils_parsedate date
abbr Attempts to parse a date according to the rules in RFC 2822. however, somemailers don’t follow that format as specified, so parsedate() trie
alias parsedate
    email.utils.parsedate(${1:date})
    # Attempts to parse a date according to the rules in RFC 2822. however, somemailers don’t follow that format as specified, so parsedate() trie
    # https://docs.python.org/2/library/email.util.html
snippet email_utils_parsedate_tz date
abbr Performs the same function as parsedate(), but returns either None ora 10-tuple; the first 9 elements make up a tuple that can be passed dir
alias parsedate_tz
    email.utils.parsedate_tz(${1:date})
    # Performs the same function as parsedate(), but returns either None ora 10-tuple; the first 9 elements make up a tuple that can be passed dir
    # https://docs.python.org/2/library/email.util.html
snippet email_utils_mktime_tz tuple
abbr Turn a 10-tuple as returned by parsedate_tz() into a UTCtimestamp (seconds since the Epoch).  If the timezone item in thetuple is None, assu
alias mktime_tz
    email.utils.mktime_tz(${1:tuple})
    # Turn a 10-tuple as returned by parsedate_tz() into a UTCtimestamp (seconds since the Epoch).  If the timezone item in thetuple is None, assu
    # https://docs.python.org/2/library/email.util.html
snippet email_utils_formatdate [timeval[, localtime][, usegmt]]
abbr Returns a date string as per RFC 2822, e.g.:
alias formatdate
    email.utils.formatdate(${1:[timeval[, localtime][, usegmt]]})
    # Returns a date string as per RFC 2822, e.g.:
    # https://docs.python.org/2/library/email.util.html
snippet email_utils_make_msgid idstring
abbr Returns a string suitable for an RFC 2822-compliantMessage-ID header.  Optional idstring if given, is a string usedto strengthen the uniquen
alias make_msgid
    email.utils.make_msgid(${1:idstring})
    # Returns a string suitable for an RFC 2822-compliantMessage-ID header.  Optional idstring if given, is a string usedto strengthen the uniquen
    # https://docs.python.org/2/library/email.util.html
snippet email_utils_decode_rfc2231 s
abbr Decode the string s according to RFC 2231.
alias decode_rfc2231
    email.utils.decode_rfc2231(${1:s})
    # Decode the string s according to RFC 2231.
    # https://docs.python.org/2/library/email.util.html
snippet email_utils_encode_rfc2231 s_charset_language
abbr Encode the string s according to RFC 2231.  Optional charset andlanguage, if given is the character set name and language name to use.  Ifne
alias encode_rfc2231
    email.utils.encode_rfc2231(${1:s}, ${2:charset}, ${3:language})
    # Encode the string s according to RFC 2231.  Optional charset andlanguage, if given is the character set name and language name to use.  Ifne
    # https://docs.python.org/2/library/email.util.html
snippet email_utils_collapse_rfc2231_value value_errors_fallback_charset
abbr When a header parameter is encoded in RFC 2231 format,Message.get_param may return a3-tuple containing the character set,language, and value
alias collapse_rfc2231_value
    email.utils.collapse_rfc2231_value(${1:value}, ${2:errors}, ${3:fallback_charset})
    # When a header parameter is encoded in RFC 2231 format,Message.get_param may return a3-tuple containing the character set,language, and value
    # https://docs.python.org/2/library/email.util.html
snippet email_utils_decode_params params
abbr Decode parameters list according to RFC 2231.  params is a sequence of2-tuples containing elements of the form (content-type, string-value).
alias decode_params
    email.utils.decode_params(${1:params})
    # Decode parameters list according to RFC 2231.  params is a sequence of2-tuples containing elements of the form (content-type, string-value).
    # https://docs.python.org/2/library/email.util.html





snippet fcntl_fcntl fd_op_arg
abbr Perform the operation op on file descriptor fd (file objects providinga fileno() method are accepted as well).  The values usedfor for op ar
alias fcntl
    fcntl.fcntl(${1:fd}, ${2:op}, ${3:arg})
    # Perform the operation op on file descriptor fd (file objects providinga fileno() method are accepted as well).  The values usedfor for op ar
    # https://docs.python.org/2/library/fcntl.html
snippet fcntl_ioctl fd_op_arg_mutate_flag
abbr This function is identical to the fcntl() function, except that theoperations are typically defined in the library module termios and thearg
alias ioctl
    fcntl.ioctl(${1:fd}, ${2:op}, ${3:arg}, ${4:mutate_flag})
    # This function is identical to the fcntl() function, except that theoperations are typically defined in the library module termios and thearg
    # https://docs.python.org/2/library/fcntl.html
snippet fcntl_flock fd_op
abbr Perform the lock operation op on file descriptor fd (file objects providinga fileno() method are accepted as well). See the Unix manualflock
alias flock
    fcntl.flock(${1:fd}, ${2:op})
    # Perform the lock operation op on file descriptor fd (file objects providinga fileno() method are accepted as well). See the Unix manualflock
    # https://docs.python.org/2/library/fcntl.html
snippet fcntl_lockf fd_operation_length_start_whence
abbr This is essentially a wrapper around the fcntl() locking calls.fd is the file descriptor of the file to lock or unlock, and operationis one 
alias lockf
    fcntl.lockf(${1:fd}, ${2:operation}, ${3:length}, ${4:start}, ${5:whence})
    # This is essentially a wrapper around the fcntl() locking calls.fd is the file descriptor of the file to lock or unlock, and operationis one 
    # https://docs.python.org/2/library/fcntl.html

snippet filecmp_cmp f1_f2_shallow
abbr Compare the files named f1 and f2, returning True if they seem equal,False otherwise.
alias cmp
    filecmp.cmp(${1:f1}, ${2:f2}, ${3:shallow})
    # Compare the files named f1 and f2, returning True if they seem equal,False otherwise.
    # https://docs.python.org/2/library/filecmp.html
snippet filecmp_cmpfiles dir1_dir2_common_shallow
abbr Compare the files in the two directories dir1 and dir2 whose names aregiven by common.
alias cmpfiles
    filecmp.cmpfiles(${1:dir1}, ${2:dir2}, ${3:common}, ${4:shallow})
    # Compare the files in the two directories dir1 and dir2 whose names aregiven by common.
    # https://docs.python.org/2/library/filecmp.html



snippet fileinput_input files_inplace_backup_bufsize_mode_openhook
abbr Create an instance of the FileInput class.  The instance will be usedas global state for the functions of this module, and is also returned 
alias input
    fileinput.input(${1:files}, ${2:inplace}, ${3:backup}, ${4:bufsize}, ${5:mode}, ${6:openhook})
    # Create an instance of the FileInput class.  The instance will be usedas global state for the functions of this module, and is also returned 
    # https://docs.python.org/2/library/fileinput.html
snippet fileinput_filename 
abbr Return the name of the file currently being read.  Before the first line hasbeen read, returns None.
alias filename
    fileinput.filename()
    # Return the name of the file currently being read.  Before the first line hasbeen read, returns None.
    # https://docs.python.org/2/library/fileinput.html
snippet fileinput_fileno 
abbr Return the integer “file descriptor” for the current file. When no file isopened (before the first line and between files), returns -1.
alias fileno
    fileinput.fileno()
    # Return the integer “file descriptor” for the current file. When no file isopened (before the first line and between files), returns -1.
    # https://docs.python.org/2/library/fileinput.html
snippet fileinput_lineno 
abbr Return the cumulative line number of the line that has just been read.  Beforethe first line has been read, returns 0.  After the last line 
alias lineno
    fileinput.lineno()
    # Return the cumulative line number of the line that has just been read.  Beforethe first line has been read, returns 0.  After the last line 
    # https://docs.python.org/2/library/fileinput.html
snippet fileinput_filelineno 
abbr Return the line number in the current file.  Before the first line has beenread, returns 0.  After the last line of the last file has been r
alias filelineno
    fileinput.filelineno()
    # Return the line number in the current file.  Before the first line has beenread, returns 0.  After the last line of the last file has been r
    # https://docs.python.org/2/library/fileinput.html
snippet fileinput_isfirstline 
abbr Returns true if the line just read is the first line of its file, otherwisereturns false.
alias isfirstline
    fileinput.isfirstline()
    # Returns true if the line just read is the first line of its file, otherwisereturns false.
    # https://docs.python.org/2/library/fileinput.html
snippet fileinput_isstdin 
abbr Returns true if the last line was read from sys.stdin, otherwise returnsfalse.
alias isstdin
    fileinput.isstdin()
    # Returns true if the last line was read from sys.stdin, otherwise returnsfalse.
    # https://docs.python.org/2/library/fileinput.html
snippet fileinput_nextfile 
abbr Close the current file so that the next iteration will read the first line fromthe next file (if any); lines not read from the file will not
alias nextfile
    fileinput.nextfile()
    # Close the current file so that the next iteration will read the first line fromthe next file (if any); lines not read from the file will not
    # https://docs.python.org/2/library/fileinput.html
snippet fileinput_close 
abbr Close the sequence.
alias close
    fileinput.close()
    # Close the sequence.
    # https://docs.python.org/2/library/fileinput.html
snippet fileinput_hook_compressed filename_mode
abbr Transparently opens files compressed with gzip and bzip2 (recognized by theextensions '.gz' and '.bz2') using the gzip and bz2modules.  If t
alias hook_compressed
    fileinput.hook_compressed(${1:filename}, ${2:mode})
    # Transparently opens files compressed with gzip and bzip2 (recognized by theextensions '.gz' and '.bz2') using the gzip and bz2modules.  If t
    # https://docs.python.org/2/library/fileinput.html
snippet fileinput_hook_encoded encoding
abbr Returns a hook which opens each file with codecs.open(), using the givenencoding to read the file.
alias hook_encoded
    fileinput.hook_encoded(${1:encoding})
    # Returns a hook which opens each file with codecs.open(), using the givenencoding to read the file.
    # https://docs.python.org/2/library/fileinput.html



snippet fl_make_form type_width_height
abbr Create a form with given type, width and height.  This returns a formobject, whose methods are described below.
alias make_form
    fl.make_form(${1:type}, ${2:width}, ${3:height})
    # Create a form with given type, width and height.  This returns a formobject, whose methods are described below.
    # https://docs.python.org/2/library/fl.html
snippet fl_do_forms 
abbr The standard FORMS main loop.  Returns a Python object representing the FORMSobject needing interaction, or the special value FL.EVENT.
alias do_forms
    fl.do_forms()
    # The standard FORMS main loop.  Returns a Python object representing the FORMSobject needing interaction, or the special value FL.EVENT.
    # https://docs.python.org/2/library/fl.html
snippet fl_check_forms 
abbr Check for FORMS events.  Returns what do_forms() above returns, orNone if there is no event that immediately needs interaction.
alias check_forms
    fl.check_forms()
    # Check for FORMS events.  Returns what do_forms() above returns, orNone if there is no event that immediately needs interaction.
    # https://docs.python.org/2/library/fl.html
snippet fl_set_event_call_back function
abbr Set the event callback function.
alias set_event_call_back
    fl.set_event_call_back(${1:function})
    # Set the event callback function.
    # https://docs.python.org/2/library/fl.html
snippet fl_set_graphics_mode rgbmode_doublebuffering
abbr Set the graphics modes.
alias set_graphics_mode
    fl.set_graphics_mode(${1:rgbmode}, ${2:doublebuffering})
    # Set the graphics modes.
    # https://docs.python.org/2/library/fl.html
snippet fl_get_rgbmode 
abbr Return the current rgb mode.  This is the value of the C global variablefl_rgbmode.
alias get_rgbmode
    fl.get_rgbmode()
    # Return the current rgb mode.  This is the value of the C global variablefl_rgbmode.
    # https://docs.python.org/2/library/fl.html
snippet fl_show_message str1_str2_str3
abbr Show a dialog box with a three-line message and an OK button.
alias show_message
    fl.show_message(${1:str1}, ${2:str2}, ${3:str3})
    # Show a dialog box with a three-line message and an OK button.
    # https://docs.python.org/2/library/fl.html
snippet fl_show_question str1_str2_str3
abbr Show a dialog box with a three-line message and YES and NO buttons. It returns1 if the user pressed YES, 0 if NO.
alias show_question
    fl.show_question(${1:str1}, ${2:str2}, ${3:str3})
    # Show a dialog box with a three-line message and YES and NO buttons. It returns1 if the user pressed YES, 0 if NO.
    # https://docs.python.org/2/library/fl.html
snippet fl_show_choice str1_str2_str3_but1_but2_but3
abbr Show a dialog box with a three-line message and up to three buttons. It returnsthe number of the button clicked by the user (1, 2 or 3).
alias show_choice
    fl.show_choice(${1:str1}, ${2:str2}, ${3:str3}, ${4:but1}, ${5:but2}, ${6:but3})
    # Show a dialog box with a three-line message and up to three buttons. It returnsthe number of the button clicked by the user (1, 2 or 3).
    # https://docs.python.org/2/library/fl.html
snippet fl_show_input prompt_default
abbr Show a dialog box with a one-line prompt message and text field in which theuser can enter a string.  The second argument is the default inp
alias show_input
    fl.show_input(${1:prompt}, ${2:default})
    # Show a dialog box with a one-line prompt message and text field in which theuser can enter a string.  The second argument is the default inp
    # https://docs.python.org/2/library/fl.html
snippet fl_show_file_selector message_directory_pattern_default
abbr Show a dialog box in which the user can select a file.  It returns the absolutefilename selected by the user, or None if the user presses Ca
alias show_file_selector
    fl.show_file_selector(${1:message}, ${2:directory}, ${3:pattern}, ${4:default})
    # Show a dialog box in which the user can select a file.  It returns the absolutefilename selected by the user, or None if the user presses Ca
    # https://docs.python.org/2/library/fl.html
snippet fl_get_directory 
abbr These functions return the directory, pattern and filename (the tail part only)selected by the user in the last show_file_selector() call.
alias get_directory
    fl.get_directory()
    # These functions return the directory, pattern and filename (the tail part only)selected by the user in the last show_file_selector() call.
    # https://docs.python.org/2/library/fl.html
snippet fl_get_pattern 
abbr These functions return the directory, pattern and filename (the tail part only)selected by the user in the last show_file_selector() call.
alias get_pattern
    fl.get_pattern()
    # These functions return the directory, pattern and filename (the tail part only)selected by the user in the last show_file_selector() call.
    # https://docs.python.org/2/library/fl.html
snippet fl_get_filename 
abbr These functions return the directory, pattern and filename (the tail part only)selected by the user in the last show_file_selector() call.
alias get_filename
    fl.get_filename()
    # These functions return the directory, pattern and filename (the tail part only)selected by the user in the last show_file_selector() call.
    # https://docs.python.org/2/library/fl.html
snippet fl_qdevice dev
abbr These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
alias qdevice
    fl.qdevice(${1:dev})
    # These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
    # https://docs.python.org/2/library/fl.html
snippet fl_unqdevice dev
abbr These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
alias unqdevice
    fl.unqdevice(${1:dev})
    # These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
    # https://docs.python.org/2/library/fl.html
snippet fl_isqueued dev
abbr These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
alias isqueued
    fl.isqueued(${1:dev})
    # These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
    # https://docs.python.org/2/library/fl.html
snippet fl_qtest 
abbr These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
alias qtest
    fl.qtest()
    # These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
    # https://docs.python.org/2/library/fl.html
snippet fl_qread 
abbr These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
alias qread
    fl.qread()
    # These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
    # https://docs.python.org/2/library/fl.html
snippet fl_qreset 
abbr These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
alias qreset
    fl.qreset()
    # These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
    # https://docs.python.org/2/library/fl.html
snippet fl_qenter dev_val
abbr These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
alias qenter
    fl.qenter(${1:dev}, ${2:val})
    # These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
    # https://docs.python.org/2/library/fl.html
snippet fl_get_mouse 
abbr These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
alias get_mouse
    fl.get_mouse()
    # These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
    # https://docs.python.org/2/library/fl.html
snippet fl_tie button_valuator1_valuator2
abbr These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
alias tie
    fl.tie(${1:button}, ${2:valuator1}, ${3:valuator2})
    # These functions are the FORMS interfaces to the corresponding GL functions.  Usethese if you want to handle some GL events yourself when usi
    # https://docs.python.org/2/library/fl.html
snippet fl_color 
abbr See the description in the FORMS documentation of fl_color(),fl_mapcolor() and fl_getmcolor().
alias color
    fl.color()
    # See the description in the FORMS documentation of fl_color(),fl_mapcolor() and fl_getmcolor().
    # https://docs.python.org/2/library/fl.html
snippet fl_mapcolor 
abbr See the description in the FORMS documentation of fl_color(),fl_mapcolor() and fl_getmcolor().
alias mapcolor
    fl.mapcolor()
    # See the description in the FORMS documentation of fl_color(),fl_mapcolor() and fl_getmcolor().
    # https://docs.python.org/2/library/fl.html
snippet fl_getmcolor 
abbr See the description in the FORMS documentation of fl_color(),fl_mapcolor() and fl_getmcolor().
alias getmcolor
    fl.getmcolor()
    # See the description in the FORMS documentation of fl_color(),fl_mapcolor() and fl_getmcolor().
    # https://docs.python.org/2/library/fl.html

snippet fm_init 
abbr Initialization function. Calls fminit(). It is normally not necessary tocall this function, since it is called automatically the first time 
alias init
    fm.init()
    # Initialization function. Calls fminit(). It is normally not necessary tocall this function, since it is called automatically the first time 
    # https://docs.python.org/2/library/fm.html
snippet fm_findfont fontname
abbr Return a font handle object. Calls fmfindfont(fontname).
alias findfont
    fm.findfont(${1:fontname})
    # Return a font handle object. Calls fmfindfont(fontname).
    # https://docs.python.org/2/library/fm.html
snippet fm_enumerate 
abbr Returns a list of available font names. This is an interface tofmenumerate().
alias enumerate
    fm.enumerate()
    # Returns a list of available font names. This is an interface tofmenumerate().
    # https://docs.python.org/2/library/fm.html
snippet fm_prstr string
abbr Render a string using the current font (see the setfont() font handlemethod below). Calls fmprstr(string).
alias prstr
    fm.prstr(${1:string})
    # Render a string using the current font (see the setfont() font handlemethod below). Calls fmprstr(string).
    # https://docs.python.org/2/library/fm.html
snippet fm_setpath string
abbr Sets the font search path. Calls fmsetpath(string). (XXX Does not work!?!)
alias setpath
    fm.setpath(${1:string})
    # Sets the font search path. Calls fmsetpath(string). (XXX Does not work!?!)
    # https://docs.python.org/2/library/fm.html
snippet fm_fontpath 
abbr Returns the current font search path.
alias fontpath
    fm.fontpath()
    # Returns the current font search path.
    # https://docs.python.org/2/library/fm.html

snippet fnmatch_fnmatch filename_pattern
abbr Test whether the filename string matches the pattern string, returningTrue or False.  If the operating system is case-insensitive,then both 
alias fnmatch
    fnmatch.fnmatch(${1:filename}, ${2:pattern})
    # Test whether the filename string matches the pattern string, returningTrue or False.  If the operating system is case-insensitive,then both 
    # https://docs.python.org/2/library/fnmatch.html
snippet fnmatch_fnmatchcase filename_pattern
abbr Test whether filename matches pattern, returning True orFalse; the comparison is case-sensitive.
alias fnmatchcase
    fnmatch.fnmatchcase(${1:filename}, ${2:pattern})
    # Test whether filename matches pattern, returning True orFalse; the comparison is case-sensitive.
    # https://docs.python.org/2/library/fnmatch.html
snippet fnmatch_filter names_pattern
abbr Return the subset of the list of names that match pattern. It is the same as[n for n in names if fnmatch(n, pattern)], but implemented more 
alias filter
    fnmatch.filter(${1:names}, ${2:pattern})
    # Return the subset of the list of names that match pattern. It is the same as[n for n in names if fnmatch(n, pattern)], but implemented more 
    # https://docs.python.org/2/library/fnmatch.html
snippet fnmatch_translate pattern
abbr Return the shell-style pattern converted to a regular expression.
alias translate
    fnmatch.translate(${1:pattern})
    # Return the shell-style pattern converted to a regular expression.
    # https://docs.python.org/2/library/fnmatch.html



snippet fpectl_turnon_sigfpe 
abbr Turn on the generation of SIGFPE, and set up an appropriate signalhandler.
alias turnon_sigfpe
    fpectl.turnon_sigfpe()
    # Turn on the generation of SIGFPE, and set up an appropriate signalhandler.
    # https://docs.python.org/2/library/fpectl.html
snippet fpectl_turnoff_sigfpe 
abbr Reset default handling of floating point exceptions.
alias turnoff_sigfpe
    fpectl.turnoff_sigfpe()
    # Reset default handling of floating point exceptions.
    # https://docs.python.org/2/library/fpectl.html

snippet fpformat_fix x_digs
abbr Format x as [-]ddd.ddd with digs digits after the point and at least onedigit before. If digs <= 0, the decimal point is suppressed.
alias fix
    fpformat.fix(${1:x}, ${2:digs})
    # Format x as [-]ddd.ddd with digs digits after the point and at least onedigit before. If digs <= 0, the decimal point is suppressed.
    # https://docs.python.org/2/library/fpformat.html
snippet fpformat_sci x_digs
abbr Format x as [-]d.dddE[+-]ddd with digs digits after the  point andexactly one digit before. If digs <= 0, one digit is kept and the point is
alias sci
    fpformat.sci(${1:x}, ${2:digs})
    # Format x as [-]d.dddE[+-]ddd with digs digits after the  point andexactly one digit before. If digs <= 0, one digit is kept and the point is
    # https://docs.python.org/2/library/fpformat.html

snippet fractions_gcd a_b
abbr Return the greatest common divisor of the integers a and b.  If eithera or b is nonzero, then the absolute value of gcd(a, b) is thelargest 
alias gcd
    fractions.gcd(${1:a}, ${2:b})
    # Return the greatest common divisor of the integers a and b.  If eithera or b is nonzero, then the absolute value of gcd(a, b) is thelargest 
    # https://docs.python.org/2/library/fractions.html

snippet FrameWork_Application 
abbr An object representing the complete application. See below for a description ofthe methods. The default __init__() routine creates an empty 
alias Application
    FrameWork.Application()
    # An object representing the complete application. See below for a description ofthe methods. The default __init__() routine creates an empty 
    # https://docs.python.org/2/library/framework.html
snippet FrameWork_MenuBar 
abbr An object representing the menubar. This object is usually not created by theuser.
alias MenuBar
    FrameWork.MenuBar()
    # An object representing the menubar. This object is usually not created by theuser.
    # https://docs.python.org/2/library/framework.html
snippet FrameWork_Menu bar_title_after
abbr An object representing a menu. Upon creation you pass the MenuBar the menuappears in, the title string and a position (1-based) after where 
alias Menu
    FrameWork.Menu(${1:bar}, ${2:title}, ${3:after})
    # An object representing a menu. Upon creation you pass the MenuBar the menuappears in, the title string and a position (1-based) after where 
    # https://docs.python.org/2/library/framework.html
snippet FrameWork_MenuItem menu_title_shortcut_callback
abbr Create a menu item object. The arguments are the menu to create, the item titlestring and optionally the keyboard shortcut and a callback ro
alias MenuItem
    FrameWork.MenuItem(${1:menu}, ${2:title}, ${3:shortcut}, ${4:callback})
    # Create a menu item object. The arguments are the menu to create, the item titlestring and optionally the keyboard shortcut and a callback ro
    # https://docs.python.org/2/library/framework.html
snippet FrameWork_Separator menu
abbr Add a separator to the end of a menu.
alias Separator
    FrameWork.Separator(${1:menu})
    # Add a separator to the end of a menu.
    # https://docs.python.org/2/library/framework.html
snippet FrameWork_SubMenu menu_label
abbr Create a submenu named label under menu menu. The menu object is returned.
alias SubMenu
    FrameWork.SubMenu(${1:menu}, ${2:label})
    # Create a submenu named label under menu menu. The menu object is returned.
    # https://docs.python.org/2/library/framework.html
snippet FrameWork_Window parent
abbr Creates a (modeless) window. Parent is the application object to which thewindow belongs. The window is not displayed until later.
alias Window
    FrameWork.Window(${1:parent})
    # Creates a (modeless) window. Parent is the application object to which thewindow belongs. The window is not displayed until later.
    # https://docs.python.org/2/library/framework.html
snippet FrameWork_DialogWindow parent
abbr Creates a modeless dialog window.
alias DialogWindow
    FrameWork.DialogWindow(${1:parent})
    # Creates a modeless dialog window.
    # https://docs.python.org/2/library/framework.html
snippet FrameWork_windowbounds width_height
abbr Return a (left, top, right, bottom) tuple suitable for creation of a windowof given width and height. The window will be staggered with resp
alias windowbounds
    FrameWork.windowbounds(${1:width}, ${2:height})
    # Return a (left, top, right, bottom) tuple suitable for creation of a windowof given width and height. The window will be staggered with resp
    # https://docs.python.org/2/library/framework.html
snippet FrameWork_setwatchcursor 
abbr Set the mouse cursor to a watch.
alias setwatchcursor
    FrameWork.setwatchcursor()
    # Set the mouse cursor to a watch.
    # https://docs.python.org/2/library/framework.html
snippet FrameWork_setarrowcursor 
abbr Set the mouse cursor to an arrow.
alias setarrowcursor
    FrameWork.setarrowcursor()
    # Set the mouse cursor to an arrow.
    # https://docs.python.org/2/library/framework.html





snippet abs x
abbr Return the absolute value of a number.  The argument may be a plain or longinteger or a floating point number.  If the argument is a complex
alias abs
    abs(${1:x})
    # Return the absolute value of a number.  The argument may be a plain or longinteger or a floating point number.  If the argument is a complex
    # https://docs.python.org/2/library/functions.html
snippet all iterable
abbr Return True if all elements of the iterable are true (or if the iterableis empty).  Equivalent to:
alias all
    all(${1:iterable})
    # Return True if all elements of the iterable are true (or if the iterableis empty).  Equivalent to:
    # https://docs.python.org/2/library/functions.html
snippet any iterable
abbr Return True if any element of the iterable is true.  If the iterableis empty, return False.  Equivalent to:
alias any
    any(${1:iterable})
    # Return True if any element of the iterable is true.  If the iterableis empty, return False.  Equivalent to:
    # https://docs.python.org/2/library/functions.html
snippet basestring 
abbr This abstract type is the superclass for str and unicode. Itcannot be called or instantiated, but it can be used to test whether an objectis
alias basestring
    basestring()
    # This abstract type is the superclass for str and unicode. Itcannot be called or instantiated, but it can be used to test whether an objectis
    # https://docs.python.org/2/library/functions.html
snippet bin x
abbr Convert an integer number to a binary string. The result is a valid Pythonexpression.  If x is not a Python int object, it has to define an_
alias bin
    bin(${1:x})
    # Convert an integer number to a binary string. The result is a valid Pythonexpression.  If x is not a Python int object, it has to define an_
    # https://docs.python.org/2/library/functions.html
snippet bool x
abbr Convert a value to a Boolean, using the standard truth testing procedure.  Ifx is false or omitted, this returns False; otherwise it returns
alias bool
    bool(${1:x})
    # Convert a value to a Boolean, using the standard truth testing procedure.  Ifx is false or omitted, this returns False; otherwise it returns
    # https://docs.python.org/2/library/functions.html
snippet bytearray source_encoding_errors
abbr Return a new array of bytes.  The bytearray type is a mutablesequence of integers in the range 0 <= x < 256.  It has most of the usualmethod
alias bytearray
    bytearray(${1:source}, ${2:encoding}, ${3:errors})
    # Return a new array of bytes.  The bytearray type is a mutablesequence of integers in the range 0 <= x < 256.  It has most of the usualmethod
    # https://docs.python.org/2/library/functions.html
snippet callable object
abbr Return True if the object argument appears callable,False if not.  If thisreturns true, it is still possible that a call fails, but if it is
alias callable
    callable(${1:object})
    # Return True if the object argument appears callable,False if not.  If thisreturns true, it is still possible that a call fails, but if it is
    # https://docs.python.org/2/library/functions.html
snippet chr i
abbr Return a string of one character whose ASCII code is the integer i.  Forexample, chr(97) returns the string 'a'. This is the inverse oford()
alias chr
    chr(${1:i})
    # Return a string of one character whose ASCII code is the integer i.  Forexample, chr(97) returns the string 'a'. This is the inverse oford()
    # https://docs.python.org/2/library/functions.html
snippet classmethod function
abbr Return a class method for function.
alias classmethod
    classmethod(${1:function})
    # Return a class method for function.
    # https://docs.python.org/2/library/functions.html
snippet cmp x_y
abbr Compare the two objects x and y and return an integer according to theoutcome.  The return value is negative if x < y, zero if x == y andstr
alias cmp
    cmp(${1:x}, ${2:y})
    # Compare the two objects x and y and return an integer according to theoutcome.  The return value is negative if x < y, zero if x == y andstr
    # https://docs.python.org/2/library/functions.html
snippet compile source_filename_mode_flags_dont_inherit
abbr Compile the source into a code or AST object.  Code objects can be executedby an exec statement or evaluated by a call to eval().source can 
alias compile
    compile(${1:source}, ${2:filename}, ${3:mode}, ${4:flags}, ${5:dont_inherit})
    # Compile the source into a code or AST object.  Code objects can be executedby an exec statement or evaluated by a call to eval().source can 
    # https://docs.python.org/2/library/functions.html
snippet complex real_imag
abbr Create a complex number with the value real + imag*j or convert a string ornumber to a complex number.  If the first parameter is a string, 
alias complex
    complex(${1:real}, ${2:imag})
    # Create a complex number with the value real + imag*j or convert a string ornumber to a complex number.  If the first parameter is a string, 
    # https://docs.python.org/2/library/functions.html
snippet delattr object_name
abbr This is a relative of setattr().  The arguments are an object and astring.  The string must be the name of one of the object’s attributes.  
alias delattr
    delattr(${1:object}, ${2:name})
    # This is a relative of setattr().  The arguments are an object and astring.  The string must be the name of one of the object’s attributes.  
    # https://docs.python.org/2/library/functions.html
snippet dir object
abbr Without arguments, return the list of names in the current local scope.  With anargument, attempt to return a list of valid attributes for t
alias dir
    dir(${1:object})
    # Without arguments, return the list of names in the current local scope.  With anargument, attempt to return a list of valid attributes for t
    # https://docs.python.org/2/library/functions.html
snippet divmod a_b
abbr Take two (non complex) numbers as arguments and return a pair of numbersconsisting of their quotient and remainder when using long division.
alias divmod
    divmod(${1:a}, ${2:b})
    # Take two (non complex) numbers as arguments and return a pair of numbersconsisting of their quotient and remainder when using long division.
    # https://docs.python.org/2/library/functions.html
snippet enumerate sequence_start=0
abbr Return an enumerate object. sequence must be a sequence, aniterator, or some other object which supports iteration.  Thenext() method of the
alias enumerate
    enumerate(${1:sequence}, ${2:start=0})
    # Return an enumerate object. sequence must be a sequence, aniterator, or some other object which supports iteration.  Thenext() method of the
    # https://docs.python.org/2/library/functions.html
snippet eval expression_globals_locals
abbr The arguments are a Unicode or Latin-1 encoded string and optionalglobals and locals.  If provided, globals must be a dictionary.If provided
alias eval
    eval(${1:expression}, ${2:globals}, ${3:locals})
    # The arguments are a Unicode or Latin-1 encoded string and optionalglobals and locals.  If provided, globals must be a dictionary.If provided
    # https://docs.python.org/2/library/functions.html
snippet execfile filename_globals_locals
abbr This function is similar to the exec statement, but parses a fileinstead of a string.  It is different from the import statement inthat it d
alias execfile
    execfile(${1:filename}, ${2:globals}, ${3:locals})
    # This function is similar to the exec statement, but parses a fileinstead of a string.  It is different from the import statement inthat it d
    # https://docs.python.org/2/library/functions.html
snippet file name_mode_buffering
abbr Constructor function for the file type, described further in sectionFile Objects.  The constructor’s arguments are the same as thoseof the o
alias file
    file(${1:name}, ${2:mode}, ${3:buffering})
    # Constructor function for the file type, described further in sectionFile Objects.  The constructor’s arguments are the same as thoseof the o
    # https://docs.python.org/2/library/functions.html
snippet filter function_iterable
abbr Construct a list from those elements of iterable for which function returnstrue.  iterable may be either a sequence, a container which suppo
alias filter
    filter(${1:function}, ${2:iterable})
    # Construct a list from those elements of iterable for which function returnstrue.  iterable may be either a sequence, a container which suppo
    # https://docs.python.org/2/library/functions.html
snippet float x
abbr Convert a string or a number to floating point.  If the argument is a string, itmust contain a possibly signed decimal or floating point num
alias float
    float(${1:x})
    # Convert a string or a number to floating point.  If the argument is a string, itmust contain a possibly signed decimal or floating point num
    # https://docs.python.org/2/library/functions.html
snippet format value_format_spec
abbr Convert a value to a “formatted” representation, as controlled byformat_spec.  The interpretation of format_spec will depend on the typeof t
alias format
    format(${1:value}, ${2:format_spec})
    # Convert a value to a “formatted” representation, as controlled byformat_spec.  The interpretation of format_spec will depend on the typeof t
    # https://docs.python.org/2/library/functions.html
snippet getattr object_name_default
abbr Return the value of the named attribute of object.  name must be a string.If the string is the name of one of the object’s attributes, the r
alias getattr
    getattr(${1:object}, ${2:name}, ${3:default})
    # Return the value of the named attribute of object.  name must be a string.If the string is the name of one of the object’s attributes, the r
    # https://docs.python.org/2/library/functions.html
snippet globals 
abbr Return a dictionary representing the current global symbol table. This is alwaysthe dictionary of the current module (inside a function or m
alias globals
    globals()
    # Return a dictionary representing the current global symbol table. This is alwaysthe dictionary of the current module (inside a function or m
    # https://docs.python.org/2/library/functions.html
snippet hasattr object_name
abbr The arguments are an object and a string.  The result is True if the stringis the name of one of the object’s attributes, False if not. (Thi
alias hasattr
    hasattr(${1:object}, ${2:name})
    # The arguments are an object and a string.  The result is True if the stringis the name of one of the object’s attributes, False if not. (Thi
    # https://docs.python.org/2/library/functions.html
snippet hash object
abbr Return the hash value of the object (if it has one).  Hash values are integers.They are used to quickly compare dictionary keys during a dic
alias hash
    hash(${1:object})
    # Return the hash value of the object (if it has one).  Hash values are integers.They are used to quickly compare dictionary keys during a dic
    # https://docs.python.org/2/library/functions.html
snippet help object
abbr Invoke the built-in help system.  (This function is intended for interactiveuse.)  If no argument is given, the interactive help system star
alias help
    help(${1:object})
    # Invoke the built-in help system.  (This function is intended for interactiveuse.)  If no argument is given, the interactive help system star
    # https://docs.python.org/2/library/functions.html
snippet hex x
abbr Convert an integer number (of any size) to a lowercase hexadecimal stringprefixed with “0x”, for example:
alias hex
    hex(${1:x})
    # Convert an integer number (of any size) to a lowercase hexadecimal stringprefixed with “0x”, for example:
    # https://docs.python.org/2/library/functions.html
snippet id object
abbr Return the “identity” of an object.  This is an integer (or long integer) whichis guaranteed to be unique and constant for this object durin
alias id
    id(${1:object})
    # Return the “identity” of an object.  This is an integer (or long integer) whichis guaranteed to be unique and constant for this object durin
    # https://docs.python.org/2/library/functions.html
snippet input prompt
abbr Equivalent to eval(raw_input(prompt)).
alias input
    input(${1:prompt})
    # Equivalent to eval(raw_input(prompt)).
    # https://docs.python.org/2/library/functions.html
snippet int x=0
abbr Convert a number or string x to an integer, or return 0 if noarguments are given.  If x is a number, it can be a plain integer, a longintege
alias int
    int(${1:x=0})
    # Convert a number or string x to an integer, or return 0 if noarguments are given.  If x is a number, it can be a plain integer, a longintege
    # https://docs.python.org/2/library/functions.html
snippet isinstance object_classinfo
abbr Return true if the object argument is an instance of the classinfo argument,or of a (direct, indirect or virtual) subclassthereof.  Also ret
alias isinstance
    isinstance(${1:object}, ${2:classinfo})
    # Return true if the object argument is an instance of the classinfo argument,or of a (direct, indirect or virtual) subclassthereof.  Also ret
    # https://docs.python.org/2/library/functions.html
snippet issubclass class_classinfo
abbr Return true if class is a subclass (direct, indirect or virtual) of classinfo.  Aclass is considered a subclass of itself. classinfo may be 
alias issubclass
    issubclass(${1:class}, ${2:classinfo})
    # Return true if class is a subclass (direct, indirect or virtual) of classinfo.  Aclass is considered a subclass of itself. classinfo may be 
    # https://docs.python.org/2/library/functions.html
snippet iter o_sentinel
abbr Return an iterator object.  The first argument is interpreted very differentlydepending on the presence of the second argument. Without a se
alias iter
    iter(${1:o}, ${2:sentinel})
    # Return an iterator object.  The first argument is interpreted very differentlydepending on the presence of the second argument. Without a se
    # https://docs.python.org/2/library/functions.html
snippet len s
abbr Return the length (the number of items) of an object.  The argument may be asequence (such as a string, bytes, tuple, list, or range) or a c
alias len
    len(${1:s})
    # Return the length (the number of items) of an object.  The argument may be asequence (such as a string, bytes, tuple, list, or range) or a c
    # https://docs.python.org/2/library/functions.html
snippet list iterable
abbr Return a list whose items are the same and in the same order as iterable‘sitems.  iterable may be either a sequence, a container that suppor
alias list
    list(${1:iterable})
    # Return a list whose items are the same and in the same order as iterable‘sitems.  iterable may be either a sequence, a container that suppor
    # https://docs.python.org/2/library/functions.html
snippet locals 
abbr Update and return a dictionary representing the current local symbol table.Free variables are returned by locals() when it is called in func
alias locals
    locals()
    # Update and return a dictionary representing the current local symbol table.Free variables are returned by locals() when it is called in func
    # https://docs.python.org/2/library/functions.html
snippet long x=0
abbr Convert a string or number to a long integer.  If the argument is a string, itmust contain a possibly signed number of arbitrary size, possi
alias long
    long(${1:x=0})
    # Convert a string or number to a long integer.  If the argument is a string, itmust contain a possibly signed number of arbitrary size, possi
    # https://docs.python.org/2/library/functions.html
snippet map function_iterable_...
abbr Apply function to every item of iterable and return a list of the results.If additional iterable arguments are passed, function must take th
alias map
    map(${1:function}, ${2:iterable}, ${3:...})
    # Apply function to every item of iterable and return a list of the results.If additional iterable arguments are passed, function must take th
    # https://docs.python.org/2/library/functions.html
snippet max iterable_key
abbr Return the largest item in an iterable or the largest of two or morearguments.
alias max
    max(${1:iterable}, ${2:key})
    # Return the largest item in an iterable or the largest of two or morearguments.
    # https://docs.python.org/2/library/functions.html
snippet min iterable_key
abbr Return the smallest item in an iterable or the smallest of two or morearguments.
alias min
    min(${1:iterable}, ${2:key})
    # Return the smallest item in an iterable or the smallest of two or morearguments.
    # https://docs.python.org/2/library/functions.html
snippet next iterator_default
abbr Retrieve the next item from the iterator by calling itsnext() method.  If default is given, it is returned if theiterator is exhausted, othe
alias next
    next(${1:iterator}, ${2:default})
    # Retrieve the next item from the iterator by calling itsnext() method.  If default is given, it is returned if theiterator is exhausted, othe
    # https://docs.python.org/2/library/functions.html
snippet object 
abbr Return a new featureless object.  object is a base for all new styleclasses.  It has the methods that are common to all instances of new sty
alias object
    object()
    # Return a new featureless object.  object is a base for all new styleclasses.  It has the methods that are common to all instances of new sty
    # https://docs.python.org/2/library/functions.html
snippet oct x
abbr Convert an integer number (of any size) to an octal string.  The result is avalid Python expression.
alias oct
    oct(${1:x})
    # Convert an integer number (of any size) to an octal string.  The result is avalid Python expression.
    # https://docs.python.org/2/library/functions.html
snippet open name_mode_buffering
abbr Open a file, returning an object of the file type described insection File Objects.  If the file cannot be opened,IOError is raised.  When o
alias open
    open(${1:name}, ${2:mode}, ${3:buffering})
    # Open a file, returning an object of the file type described insection File Objects.  If the file cannot be opened,IOError is raised.  When o
    # https://docs.python.org/2/library/functions.html
snippet ord c
abbr Given a string of length one, return an integer representing the Unicode codepoint of the character when the argument is a unicode object, o
alias ord
    ord(${1:c})
    # Given a string of length one, return an integer representing the Unicode codepoint of the character when the argument is a unicode object, o
    # https://docs.python.org/2/library/functions.html
snippet pow x_y_z
abbr Return x to the power y; if z is present, return x to the power y,modulo z (computed more efficiently than pow(x, y) % z). The two-argumentf
alias pow
    pow(${1:x}, ${2:y}, ${3:z})
    # Return x to the power y; if z is present, return x to the power y,modulo z (computed more efficiently than pow(x, y) % z). The two-argumentf
    # https://docs.python.org/2/library/functions.html
snippet print *objects_sep=' '_end='\n'_file=sys.stdout
abbr Print objects to the stream file, separated by sep and followed byend.  sep, end and file, if present, must be given as keywordarguments.
alias print
    print(${1:*objects}, ${2:sep=' '}, ${3:end='\n'}, ${4:file=sys.stdout})
    # Print objects to the stream file, separated by sep and followed byend.  sep, end and file, if present, must be given as keywordarguments.
    # https://docs.python.org/2/library/functions.html
snippet property fget_fset_fdel_doc
abbr Return a property attribute for new-style classes (classes thatderive from object).
alias property
    property(${1:fget}, ${2:fset}, ${3:fdel}, ${4:doc})
    # Return a property attribute for new-style classes (classes thatderive from object).
    # https://docs.python.org/2/library/functions.html
snippet range stop
abbr This is a versatile function to create lists containing arithmetic progressions.It is most often used in for loops.  The arguments must be p
alias range
    range(${1:stop})
    # This is a versatile function to create lists containing arithmetic progressions.It is most often used in for loops.  The arguments must be p
    # https://docs.python.org/2/library/functions.html
snippet raw_input prompt
abbr If the prompt argument is present, it is written to standard output without atrailing newline.  The function then reads a line from input, c
alias raw_input
    raw_input(${1:prompt})
    # If the prompt argument is present, it is written to standard output without atrailing newline.  The function then reads a line from input, c
    # https://docs.python.org/2/library/functions.html
snippet reduce function_iterable_initializer
abbr Apply function of two arguments cumulatively to the items of iterable, fromleft to right, so as to reduce the iterable to a single value.  F
alias reduce
    reduce(${1:function}, ${2:iterable}, ${3:initializer})
    # Apply function of two arguments cumulatively to the items of iterable, fromleft to right, so as to reduce the iterable to a single value.  F
    # https://docs.python.org/2/library/functions.html
snippet reload module
abbr Reload a previously imported module.  The argument must be a module object, soit must have been successfully imported before.  This is usefu
alias reload
    reload(${1:module})
    # Reload a previously imported module.  The argument must be a module object, soit must have been successfully imported before.  This is usefu
    # https://docs.python.org/2/library/functions.html
snippet repr object
abbr Return a string containing a printable representation of an object.  This isthe same value yielded by conversions (reverse quotes).  It is s
alias repr
    repr(${1:object})
    # Return a string containing a printable representation of an object.  This isthe same value yielded by conversions (reverse quotes).  It is s
    # https://docs.python.org/2/library/functions.html
snippet reversed seq
abbr Return a reverse iterator.  seq must be an object which hasa __reversed__() method or supports the sequence protocol (the__len__() method an
alias reversed
    reversed(${1:seq})
    # Return a reverse iterator.  seq must be an object which hasa __reversed__() method or supports the sequence protocol (the__len__() method an
    # https://docs.python.org/2/library/functions.html
snippet round number_ndigits
abbr Return the floating point value number rounded to ndigits digits afterthe decimal point.  If ndigits is omitted, it defaults to zero. The re
alias round
    round(${1:number}, ${2:ndigits})
    # Return the floating point value number rounded to ndigits digits afterthe decimal point.  If ndigits is omitted, it defaults to zero. The re
    # https://docs.python.org/2/library/functions.html
snippet setattr object_name_value
abbr This is the counterpart of getattr().  The arguments are an object, astring and an arbitrary value.  The string may name an existing attribu
alias setattr
    setattr(${1:object}, ${2:name}, ${3:value})
    # This is the counterpart of getattr().  The arguments are an object, astring and an arbitrary value.  The string may name an existing attribu
    # https://docs.python.org/2/library/functions.html
snippet slice stop
abbr Return a slice object representing the set of indices specified byrange(start, stop, step).  The start and step arguments default toNone.  S
alias slice
    slice(${1:stop})
    # Return a slice object representing the set of indices specified byrange(start, stop, step).  The start and step arguments default toNone.  S
    # https://docs.python.org/2/library/functions.html
snippet sorted iterable_cmp_key_reverse
abbr Return a new sorted list from the items in iterable.
alias sorted
    sorted(${1:iterable}, ${2:cmp}, ${3:key}, ${4:reverse})
    # Return a new sorted list from the items in iterable.
    # https://docs.python.org/2/library/functions.html
snippet staticmethod function
abbr Return a static method for function.
alias staticmethod
    staticmethod(${1:function})
    # Return a static method for function.
    # https://docs.python.org/2/library/functions.html
snippet str object=''
abbr Return a string containing a nicely printable representation of an object.  Forstrings, this returns the string itself.  The difference with
alias str
    str(${1:object=''})
    # Return a string containing a nicely printable representation of an object.  Forstrings, this returns the string itself.  The difference with
    # https://docs.python.org/2/library/functions.html
snippet sum iterable_start
abbr Sums start and the items of an iterable from left to right and returns thetotal.  start defaults to 0. The iterable‘s items are normally num
alias sum
    sum(${1:iterable}, ${2:start})
    # Sums start and the items of an iterable from left to right and returns thetotal.  start defaults to 0. The iterable‘s items are normally num
    # https://docs.python.org/2/library/functions.html
snippet super type_object-or-type
abbr Return a proxy object that delegates method calls to a parent or siblingclass of type.  This is useful for accessing inherited methods that 
alias super
    super(${1:type}, ${2:object-or-type})
    # Return a proxy object that delegates method calls to a parent or siblingclass of type.  This is useful for accessing inherited methods that 
    # https://docs.python.org/2/library/functions.html
snippet tuple iterable
abbr Return a tuple whose items are the same and in the same order as iterable‘sitems.  iterable may be a sequence, a container that supports ite
alias tuple
    tuple(${1:iterable})
    # Return a tuple whose items are the same and in the same order as iterable‘sitems.  iterable may be a sequence, a container that supports ite
    # https://docs.python.org/2/library/functions.html
snippet type object
abbr With one argument, return the type of an object.  The return value is atype object.  The isinstance() built-in function is recommended forte
alias type
    type(${1:object})
    # With one argument, return the type of an object.  The return value is atype object.  The isinstance() built-in function is recommended forte
    # https://docs.python.org/2/library/functions.html
snippet unichr i
abbr Return the Unicode string of one character whose Unicode code is the integeri.  For example, unichr(97) returns the string u'a'.  This is th
alias unichr
    unichr(${1:i})
    # Return the Unicode string of one character whose Unicode code is the integeri.  For example, unichr(97) returns the string u'a'.  This is th
    # https://docs.python.org/2/library/functions.html
snippet unicode object=''
abbr Return the Unicode string version of object using one of the following modes:
alias unicode
    unicode(${1:object=''})
    # Return the Unicode string version of object using one of the following modes:
    # https://docs.python.org/2/library/functions.html
snippet vars object
abbr Return the __dict__ attribute for a module, class, instance,or any other object with a __dict__ attribute.
alias vars
    vars(${1:object})
    # Return the __dict__ attribute for a module, class, instance,or any other object with a __dict__ attribute.
    # https://docs.python.org/2/library/functions.html
snippet xrange stop
abbr This function is very similar to range(), but returns an xrangeobjectinstead of a list.  This is an opaque sequence type which yields the sa
alias xrange
    xrange(${1:stop})
    # This function is very similar to range(), but returns an xrangeobjectinstead of a list.  This is an opaque sequence type which yields the sa
    # https://docs.python.org/2/library/functions.html
snippet zip iterable_...
abbr This function returns a list of tuples, where the i-th tuple contains thei-th element from each of the argument sequences or iterables. The 
alias zip
    zip(${1:iterable}, ${2:...})
    # This function returns a list of tuples, where the i-th tuple contains thei-th element from each of the argument sequences or iterables. The 
    # https://docs.python.org/2/library/functions.html
snippet __import__ name_globals_locals_fromlist_level
abbr This function is invoked by the import statement.  It can bereplaced (by importing the __builtin__ module and assigning to__builtin__.__impo
alias __import__
    __import__(${1:name}, ${2:globals}, ${3:locals}, ${4:fromlist}, ${5:level})
    # This function is invoked by the import statement.  It can bereplaced (by importing the __builtin__ module and assigning to__builtin__.__impo
    # https://docs.python.org/2/library/functions.html
snippet apply function_args_keywords
abbr The function argument must be a callable object (a user-defined or built-infunction or method, or a class object) and the args argument must
alias apply
    apply(${1:function}, ${2:args}, ${3:keywords})
    # The function argument must be a callable object (a user-defined or built-infunction or method, or a class object) and the args argument must
    # https://docs.python.org/2/library/functions.html
snippet buffer object_offset_size
abbr The object argument must be an object that supports the buffer call interface(such as strings, arrays, and buffers).  A new buffer object wi
alias buffer
    buffer(${1:object}, ${2:offset}, ${3:size})
    # The object argument must be an object that supports the buffer call interface(such as strings, arrays, and buffers).  A new buffer object wi
    # https://docs.python.org/2/library/functions.html
snippet coerce x_y
abbr Return a tuple consisting of the two numeric arguments converted to a commontype, using the same rules as used by arithmetic operations. If 
alias coerce
    coerce(${1:x}, ${2:y})
    # Return a tuple consisting of the two numeric arguments converted to a commontype, using the same rules as used by arithmetic operations. If 
    # https://docs.python.org/2/library/functions.html
snippet intern string
abbr Enter string in the table of “interned” strings and return the interned string– which is string itself or a copy. Interning strings is usefu
alias intern
    intern(${1:string})
    # Enter string in the table of “interned” strings and return the interned string– which is string itself or a copy. Interning strings is usefu
    # https://docs.python.org/2/library/functions.html

snippet functools_cmp_to_key func
abbr Transform an old-style comparison function to a key function.  Used withtools that accept key functions (such as sorted(), min(),max(), heap
alias cmp_to_key
    functools.cmp_to_key(${1:func})
    # Transform an old-style comparison function to a key function.  Used withtools that accept key functions (such as sorted(), min(),max(), heap
    # https://docs.python.org/2/library/functools.html
snippet functools_total_ordering cls
abbr Given a class defining one or more rich comparison ordering methods, thisclass decorator supplies the rest.  This simplifies the effort invo
alias total_ordering
    functools.total_ordering(${1:cls})
    # Given a class defining one or more rich comparison ordering methods, thisclass decorator supplies the rest.  This simplifies the effort invo
    # https://docs.python.org/2/library/functools.html
snippet functools_reduce function_iterable_initializer
abbr This is the same function as reduce().  It is made available in this moduleto allow writing code more forward-compatible with Python 3.
alias reduce
    functools.reduce(${1:function}, ${2:iterable}, ${3:initializer})
    # This is the same function as reduce().  It is made available in this moduleto allow writing code more forward-compatible with Python 3.
    # https://docs.python.org/2/library/functools.html
snippet functools_partial func[,*args][, **keywords]
abbr Return a new partial object which when called will behave like funccalled with the positional arguments args and keyword arguments keywords.
alias partial
    functools.partial(${1:func[,*args][, **keywords]})
    # Return a new partial object which when called will behave like funccalled with the positional arguments args and keyword arguments keywords.
    # https://docs.python.org/2/library/functools.html
snippet functools_update_wrapper wrapper, wrapped[, assigned][, updated]
abbr Update a wrapper function to look like the wrapped function. The optionalarguments are tuples to specify which attributes of the original fu
alias update_wrapper
    functools.update_wrapper(${1:wrapper, wrapped[, assigned][, updated]})
    # Update a wrapper function to look like the wrapped function. The optionalarguments are tuples to specify which attributes of the original fu
    # https://docs.python.org/2/library/functools.html
snippet functools_wraps wrapped[, assigned][, updated]
abbr This is a convenience function for invoking partial(update_wrapper,wrapped=wrapped, assigned=assigned, updated=updated) as a function decora
alias wraps
    functools.wraps(${1:wrapped[, assigned][, updated]})
    # This is a convenience function for invoking partial(update_wrapper,wrapped=wrapped, assigned=assigned, updated=updated) as a function decora
    # https://docs.python.org/2/library/functools.html

snippet future_builtins_ascii object
abbr Returns the same as repr().  In Python 3, repr() will returnprintable Unicode characters unescaped, while ascii() will alwaysbackslash-escap
alias ascii
    future_builtins.ascii(${1:object})
    # Returns the same as repr().  In Python 3, repr() will returnprintable Unicode characters unescaped, while ascii() will alwaysbackslash-escap
    # https://docs.python.org/2/library/future_builtins.html
snippet future_builtins_filter function_iterable
abbr Works like itertools.ifilter().
alias filter
    future_builtins.filter(${1:function}, ${2:iterable})
    # Works like itertools.ifilter().
    # https://docs.python.org/2/library/future_builtins.html
snippet future_builtins_hex object
abbr Works like the built-in hex(), but instead of __hex__() it willuse the __index__() method on its argument to get an integer that isthen conv
alias hex
    future_builtins.hex(${1:object})
    # Works like the built-in hex(), but instead of __hex__() it willuse the __index__() method on its argument to get an integer that isthen conv
    # https://docs.python.org/2/library/future_builtins.html
snippet future_builtins_map function_iterable_...
abbr Works like itertools.imap().
alias map
    future_builtins.map(${1:function}, ${2:iterable}, ${3:...})
    # Works like itertools.imap().
    # https://docs.python.org/2/library/future_builtins.html
snippet future_builtins_oct object
abbr Works like the built-in oct(), but instead of __oct__() it willuse the __index__() method on its argument to get an integer that isthen conv
alias oct
    future_builtins.oct(${1:object})
    # Works like the built-in oct(), but instead of __oct__() it willuse the __index__() method on its argument to get an integer that isthen conv
    # https://docs.python.org/2/library/future_builtins.html
snippet future_builtins_zip *iterables
abbr Works like itertools.izip().
alias zip
    future_builtins.zip(${1:*iterables})
    # Works like itertools.izip().
    # https://docs.python.org/2/library/future_builtins.html

snippet gc_enable 
abbr Enable automatic garbage collection.
alias enable
    gc.enable()
    # Enable automatic garbage collection.
    # https://docs.python.org/2/library/gc.html
snippet gc_disable 
abbr Disable automatic garbage collection.
alias disable
    gc.disable()
    # Disable automatic garbage collection.
    # https://docs.python.org/2/library/gc.html
snippet gc_isenabled 
abbr Returns true if automatic collection is enabled.
alias isenabled
    gc.isenabled()
    # Returns true if automatic collection is enabled.
    # https://docs.python.org/2/library/gc.html
snippet gc_collect generation
abbr With no arguments, run a full collection.  The optional argument generationmay be an integer specifying which generation to collect (from 0 
alias collect
    gc.collect(${1:generation})
    # With no arguments, run a full collection.  The optional argument generationmay be an integer specifying which generation to collect (from 0 
    # https://docs.python.org/2/library/gc.html
snippet gc_set_debug flags
abbr Set the garbage collection debugging flags. Debugging information will bewritten to sys.stderr.  See below for a list of debugging flags whi
alias set_debug
    gc.set_debug(${1:flags})
    # Set the garbage collection debugging flags. Debugging information will bewritten to sys.stderr.  See below for a list of debugging flags whi
    # https://docs.python.org/2/library/gc.html
snippet gc_get_debug 
abbr Return the debugging flags currently set.
alias get_debug
    gc.get_debug()
    # Return the debugging flags currently set.
    # https://docs.python.org/2/library/gc.html
snippet gc_get_objects 
abbr Returns a list of all objects tracked by the collector, excluding the listreturned.
alias get_objects
    gc.get_objects()
    # Returns a list of all objects tracked by the collector, excluding the listreturned.
    # https://docs.python.org/2/library/gc.html
snippet gc_set_threshold threshold0_threshold1_threshold2
abbr Set the garbage collection thresholds (the collection frequency). Settingthreshold0 to zero disables collection.
alias set_threshold
    gc.set_threshold(${1:threshold0}, ${2:threshold1}, ${3:threshold2})
    # Set the garbage collection thresholds (the collection frequency). Settingthreshold0 to zero disables collection.
    # https://docs.python.org/2/library/gc.html
snippet gc_get_count 
abbr Return the current collection  counts as a tuple of (count0, count1,count2).
alias get_count
    gc.get_count()
    # Return the current collection  counts as a tuple of (count0, count1,count2).
    # https://docs.python.org/2/library/gc.html
snippet gc_get_threshold 
abbr Return the current collection thresholds as a tuple of (threshold0,threshold1, threshold2).
alias get_threshold
    gc.get_threshold()
    # Return the current collection thresholds as a tuple of (threshold0,threshold1, threshold2).
    # https://docs.python.org/2/library/gc.html
snippet gc_get_referrers *objs
abbr Return the list of objects that directly refer to any of objs. This functionwill only locate those containers which support garbage collecti
alias get_referrers
    gc.get_referrers(${1:*objs})
    # Return the list of objects that directly refer to any of objs. This functionwill only locate those containers which support garbage collecti
    # https://docs.python.org/2/library/gc.html
snippet gc_get_referents *objs
abbr Return a list of objects directly referred to by any of the arguments. Thereferents returned are those objects visited by the arguments’ C-l
alias get_referents
    gc.get_referents(${1:*objs})
    # Return a list of objects directly referred to by any of the arguments. Thereferents returned are those objects visited by the arguments’ C-l
    # https://docs.python.org/2/library/gc.html
snippet gc_is_tracked obj
abbr Returns True if the object is currently tracked by the garbage collector,False otherwise.  As a general rule, instances of atomic types aren
alias is_tracked
    gc.is_tracked(${1:obj})
    # Returns True if the object is currently tracked by the garbage collector,False otherwise.  As a general rule, instances of atomic types aren
    # https://docs.python.org/2/library/gc.html

snippet gdbm_open filename_flag_mode
abbr Open a gdbm database and return a gdbm object.  The filename argumentis the name of the database file.
alias open
    gdbm.open(${1:filename}, ${2:flag}, ${3:mode})
    # Open a gdbm database and return a gdbm object.  The filename argumentis the name of the database file.
    # https://docs.python.org/2/library/gdbm.html
snippet gdbm_firstkey 
abbr It’s possible to loop over every key in the database using this method  and thenextkey() method.  The traversal is ordered by gdbm‘s interna
alias firstkey
    gdbm.firstkey()
    # It’s possible to loop over every key in the database using this method  and thenextkey() method.  The traversal is ordered by gdbm‘s interna
    # https://docs.python.org/2/library/gdbm.html
snippet gdbm_nextkey key
abbr Returns the key that follows key in the traversal.  The following code printsevery key in the database db, without having to create a list i
alias nextkey
    gdbm.nextkey(${1:key})
    # Returns the key that follows key in the traversal.  The following code printsevery key in the database db, without having to create a list i
    # https://docs.python.org/2/library/gdbm.html
snippet gdbm_reorganize 
abbr If you have carried out a lot of deletions and would like to shrink the spaceused by the gdbm file, this routine will reorganize the databas
alias reorganize
    gdbm.reorganize()
    # If you have carried out a lot of deletions and would like to shrink the spaceused by the gdbm file, this routine will reorganize the databas
    # https://docs.python.org/2/library/gdbm.html
snippet gdbm_sync 
abbr When the database has been opened in fast mode, this method forces anyunwritten data to be written to the disk.
alias sync
    gdbm.sync()
    # When the database has been opened in fast mode, this method forces anyunwritten data to be written to the disk.
    # https://docs.python.org/2/library/gdbm.html
snippet gdbm_close 
abbr Close the gdbm database.
alias close
    gdbm.close()
    # Close the gdbm database.
    # https://docs.python.org/2/library/gdbm.html

snippet gensuitemodule_is_scriptable application
abbr Returns true if application, which should be passed as a pathname, appearsto be scriptable. Take the return value with a grain of salt: Inte
alias is_scriptable
    gensuitemodule.is_scriptable(${1:application})
    # Returns true if application, which should be passed as a pathname, appearsto be scriptable. Take the return value with a grain of salt: Inte
    # https://docs.python.org/2/library/gensuitemodule.html
snippet gensuitemodule_processfile application_output_basepkgname_edit_modnames_creatorsignature_dump_verbose
abbr Create a stub package for application, which should be passed as a fullpathname. For a .app bundle this is the pathname to the bundle, not t
alias processfile
    gensuitemodule.processfile(${1:application}, ${2:output}, ${3:basepkgname}, ${4:edit_modnames}, ${5:creatorsignature}, ${6:dump}, ${7:verbose})
    # Create a stub package for application, which should be passed as a fullpathname. For a .app bundle this is the pathname to the bundle, not t
    # https://docs.python.org/2/library/gensuitemodule.html
snippet gensuitemodule_processfile_fromresource application_output_basepkgname_edit_modnames_creatorsignature_dump_verbose
abbr This function does the same as processfile, except that it uses a differentmethod to get the terminology resources. It opens application as 
alias processfile_fromresource
    gensuitemodule.processfile_fromresource(${1:application}, ${2:output}, ${3:basepkgname}, ${4:edit_modnames}, ${5:creatorsignature}, ${6:dump}, ${7:verbose})
    # This function does the same as processfile, except that it uses a differentmethod to get the terminology resources. It opens application as 
    # https://docs.python.org/2/library/gensuitemodule.html

snippet getopt_getopt args_options_long_options
abbr Parses command line options and parameter list.  args is the argument list tobe parsed, without the leading reference to the running program
alias getopt
    getopt.getopt(${1:args}, ${2:options}, ${3:long_options})
    # Parses command line options and parameter list.  args is the argument list tobe parsed, without the leading reference to the running program
    # https://docs.python.org/2/library/getopt.html
snippet getopt_gnu_getopt args_options_long_options
abbr This function works like getopt(), except that GNU style scanning mode isused by default. This means that option and non-option arguments ma
alias gnu_getopt
    getopt.gnu_getopt(${1:args}, ${2:options}, ${3:long_options})
    # This function works like getopt(), except that GNU style scanning mode isused by default. This means that option and non-option arguments ma
    # https://docs.python.org/2/library/getopt.html

snippet getpass_getpass prompt_stream
abbr Prompt the user for a password without echoing.  The user is prompted using thestring prompt, which defaults to 'Password: '. On Unix, the p
alias getpass
    getpass.getpass(${1:prompt}, ${2:stream})
    # Prompt the user for a password without echoing.  The user is prompted using thestring prompt, which defaults to 'Password: '. On Unix, the p
    # https://docs.python.org/2/library/getpass.html
snippet getpass_getuser 
abbr Return the “login name” of the user. Availability: Unix, Windows.
alias getuser
    getpass.getuser()
    # Return the “login name” of the user. Availability: Unix, Windows.
    # https://docs.python.org/2/library/getpass.html

snippet gettext_bindtextdomain domain_localedir
abbr Bind the domain to the locale directory localedir.  More concretely,gettext will look for binary .mo files for the given domain usingthe pat
alias bindtextdomain
    gettext.bindtextdomain(${1:domain}, ${2:localedir})
    # Bind the domain to the locale directory localedir.  More concretely,gettext will look for binary .mo files for the given domain usingthe pat
    # https://docs.python.org/2/library/gettext.html
snippet gettext_bind_textdomain_codeset domain_codeset
abbr Bind the domain to codeset, changing the encoding of strings returned by thegettext() family of functions. If codeset is omitted, then the c
alias bind_textdomain_codeset
    gettext.bind_textdomain_codeset(${1:domain}, ${2:codeset})
    # Bind the domain to codeset, changing the encoding of strings returned by thegettext() family of functions. If codeset is omitted, then the c
    # https://docs.python.org/2/library/gettext.html
snippet gettext_textdomain domain
abbr Change or query the current global domain.  If domain is None, then thecurrent global domain is returned, otherwise the global domain is set
alias textdomain
    gettext.textdomain(${1:domain})
    # Change or query the current global domain.  If domain is None, then thecurrent global domain is returned, otherwise the global domain is set
    # https://docs.python.org/2/library/gettext.html
snippet gettext_gettext message
abbr Return the localized translation of message, based on the current globaldomain, language, and locale directory.  This function is usually al
alias gettext
    gettext.gettext(${1:message})
    # Return the localized translation of message, based on the current globaldomain, language, and locale directory.  This function is usually al
    # https://docs.python.org/2/library/gettext.html
snippet gettext_lgettext message
abbr Equivalent to gettext(), but the translation is returned in the preferredsystem encoding, if no other encoding was explicitly set withbind_t
alias lgettext
    gettext.lgettext(${1:message})
    # Equivalent to gettext(), but the translation is returned in the preferredsystem encoding, if no other encoding was explicitly set withbind_t
    # https://docs.python.org/2/library/gettext.html
snippet gettext_dgettext domain_message
abbr Like gettext(), but look the message up in the specified domain.
alias dgettext
    gettext.dgettext(${1:domain}, ${2:message})
    # Like gettext(), but look the message up in the specified domain.
    # https://docs.python.org/2/library/gettext.html
snippet gettext_ldgettext domain_message
abbr Equivalent to dgettext(), but the translation is returned in the preferredsystem encoding, if no other encoding was explicitly set withbind_
alias ldgettext
    gettext.ldgettext(${1:domain}, ${2:message})
    # Equivalent to dgettext(), but the translation is returned in the preferredsystem encoding, if no other encoding was explicitly set withbind_
    # https://docs.python.org/2/library/gettext.html
snippet gettext_ngettext singular_plural_n
abbr Like gettext(), but consider plural forms. If a translation is found,apply the plural formula to n, and return the resulting message (somela
alias ngettext
    gettext.ngettext(${1:singular}, ${2:plural}, ${3:n})
    # Like gettext(), but consider plural forms. If a translation is found,apply the plural formula to n, and return the resulting message (somela
    # https://docs.python.org/2/library/gettext.html
snippet gettext_lngettext singular_plural_n
abbr Equivalent to ngettext(), but the translation is returned in the preferredsystem encoding, if no other encoding was explicitly set withbind_
alias lngettext
    gettext.lngettext(${1:singular}, ${2:plural}, ${3:n})
    # Equivalent to ngettext(), but the translation is returned in the preferredsystem encoding, if no other encoding was explicitly set withbind_
    # https://docs.python.org/2/library/gettext.html
snippet gettext_dngettext domain_singular_plural_n
abbr Like ngettext(), but look the message up in the specified domain.
alias dngettext
    gettext.dngettext(${1:domain}, ${2:singular}, ${3:plural}, ${4:n})
    # Like ngettext(), but look the message up in the specified domain.
    # https://docs.python.org/2/library/gettext.html
snippet gettext_ldngettext domain_singular_plural_n
abbr Equivalent to dngettext(), but the translation is returned in thepreferred system encoding, if no other encoding was explicitly set withbind
alias ldngettext
    gettext.ldngettext(${1:domain}, ${2:singular}, ${3:plural}, ${4:n})
    # Equivalent to dngettext(), but the translation is returned in thepreferred system encoding, if no other encoding was explicitly set withbind
    # https://docs.python.org/2/library/gettext.html
snippet gettext_find domain_localedir_languages_all
abbr This function implements the standard .mo file search algorithm.  Ittakes a domain, identical to what textdomain() takes.  Optionallocaledir
alias find
    gettext.find(${1:domain}, ${2:localedir}, ${3:languages}, ${4:all})
    # This function implements the standard .mo file search algorithm.  Ittakes a domain, identical to what textdomain() takes.  Optionallocaledir
    # https://docs.python.org/2/library/gettext.html
snippet gettext_translation domain_localedir_languages_class__fallback_codeset
abbr Return a Translations instance based on the domain, localedir, andlanguages, which are first passed to find() to get a list of theassociated
alias translation
    gettext.translation(${1:domain}, ${2:localedir}, ${3:languages}, ${4:class_}, ${5:fallback}, ${6:codeset})
    # Return a Translations instance based on the domain, localedir, andlanguages, which are first passed to find() to get a list of theassociated
    # https://docs.python.org/2/library/gettext.html
snippet gettext_install domain_localedir_unicode_codeset_names
abbr This installs the function _() in Python’s builtins namespace, based ondomain, localedir, and codeset which are passed to the functiontransl
alias install
    gettext.install(${1:domain}, ${2:localedir}, ${3:unicode}, ${4:codeset}, ${5:names})
    # This installs the function _() in Python’s builtins namespace, based ondomain, localedir, and codeset which are passed to the functiontransl
    # https://docs.python.org/2/library/gettext.html

snippet gl_varray argument
abbr Equivalent to but faster than a number of v3d() calls. The argument is alist (or tuple) of points. Each point must be a tuple of coordinates
alias varray
    gl.varray(${1:argument})
    # Equivalent to but faster than a number of v3d() calls. The argument is alist (or tuple) of points. Each point must be a tuple of coordinates
    # https://docs.python.org/2/library/gl.html
snippet gl_nvarray 
abbr Equivalent to but faster than a number of n3f and v3f calls. Theargument is an array (list or tuple) of pairs of normals and points. Each pa
alias nvarray
    gl.nvarray()
    # Equivalent to but faster than a number of n3f and v3f calls. Theargument is an array (list or tuple) of pairs of normals and points. Each pa
    # https://docs.python.org/2/library/gl.html
snippet gl_vnarray 
abbr Similar to  nvarray() but the pairs have the point first and the normalsecond.
alias vnarray
    gl.vnarray()
    # Similar to  nvarray() but the pairs have the point first and the normalsecond.
    # https://docs.python.org/2/library/gl.html
snippet gl_nurbssurface s_k_t_k_ctl_s_ord_t_ord_type
abbr Defines a nurbs surface. The dimensions of ctl[][] are computed as follows:[len(s_k) - s_ord], [len(t_k) - t_ord].
alias nurbssurface
    gl.nurbssurface(${1:s_k}, ${2:t_k}, ${3:ctl}, ${4:s_ord}, ${5:t_ord}, ${6:type})
    # Defines a nurbs surface. The dimensions of ctl[][] are computed as follows:[len(s_k) - s_ord], [len(t_k) - t_ord].
    # https://docs.python.org/2/library/gl.html
snippet gl_nurbscurve knots_ctlpoints_order_type
abbr Defines a nurbs curve. The length of ctlpoints is len(knots) - order.
alias nurbscurve
    gl.nurbscurve(${1:knots}, ${2:ctlpoints}, ${3:order}, ${4:type})
    # Defines a nurbs curve. The length of ctlpoints is len(knots) - order.
    # https://docs.python.org/2/library/gl.html
snippet gl_pwlcurve points_type
abbr Defines a piecewise-linear curve. points is a list of points. type must beN_ST.
alias pwlcurve
    gl.pwlcurve(${1:points}, ${2:type})
    # Defines a piecewise-linear curve. points is a list of points. type must beN_ST.
    # https://docs.python.org/2/library/gl.html
snippet gl_pick n
abbr The only argument to these functions specifies the desired size of the pick orselect buffer.
alias pick
    gl.pick(${1:n})
    # The only argument to these functions specifies the desired size of the pick orselect buffer.
    # https://docs.python.org/2/library/gl.html
snippet gl_select n
abbr The only argument to these functions specifies the desired size of the pick orselect buffer.
alias select
    gl.select(${1:n})
    # The only argument to these functions specifies the desired size of the pick orselect buffer.
    # https://docs.python.org/2/library/gl.html
snippet gl_endpick 
abbr These functions have no arguments. They return a list of integers representingthe used part of the pick/select buffer. No method is provided
alias endpick
    gl.endpick()
    # These functions have no arguments. They return a list of integers representingthe used part of the pick/select buffer. No method is provided
    # https://docs.python.org/2/library/gl.html
snippet gl_endselect 
abbr These functions have no arguments. They return a list of integers representingthe used part of the pick/select buffer. No method is provided
alias endselect
    gl.endselect()
    # These functions have no arguments. They return a list of integers representingthe used part of the pick/select buffer. No method is provided
    # https://docs.python.org/2/library/gl.html

snippet glob_glob pathname
abbr Return a possibly-empty list of path names that match pathname, which must bea string containing a path specification. pathname can be eithe
alias glob
    glob.glob(${1:pathname})
    # Return a possibly-empty list of path names that match pathname, which must bea string containing a path specification. pathname can be eithe
    # https://docs.python.org/2/library/glob.html
snippet glob_iglob pathname
abbr Return an iterator which yields the same values as glob()without actually storing them all simultaneously.
alias iglob
    glob.iglob(${1:pathname})
    # Return an iterator which yields the same values as glob()without actually storing them all simultaneously.
    # https://docs.python.org/2/library/glob.html

snippet grp_getgrgid gid
abbr Return the group database entry for the given numeric group ID. KeyErroris raised if the entry asked for cannot be found.
alias getgrgid
    grp.getgrgid(${1:gid})
    # Return the group database entry for the given numeric group ID. KeyErroris raised if the entry asked for cannot be found.
    # https://docs.python.org/2/library/grp.html
snippet grp_getgrnam name
abbr Return the group database entry for the given group name. KeyError israised if the entry asked for cannot be found.
alias getgrnam
    grp.getgrnam(${1:name})
    # Return the group database entry for the given group name. KeyError israised if the entry asked for cannot be found.
    # https://docs.python.org/2/library/grp.html
snippet grp_getgrall 
abbr Return a list of all available group entries, in arbitrary order.
alias getgrall
    grp.getgrall()
    # Return a list of all available group entries, in arbitrary order.
    # https://docs.python.org/2/library/grp.html

snippet gzip_open filename_mode_compresslevel
abbr This is a shorthand for GzipFile(filename, mode, compresslevel).The filename argument is required; mode defaults to 'rb' andcompresslevel de
alias open
    gzip.open(${1:filename}, ${2:mode}, ${3:compresslevel})
    # This is a shorthand for GzipFile(filename, mode, compresslevel).The filename argument is required; mode defaults to 'rb' andcompresslevel de
    # https://docs.python.org/2/library/gzip.html

snippet hashlib_pbkdf2_hmac name_password_salt_rounds_dklen=None
abbr The function provides PKCS#5 password-based key derivation function 2. Ituses HMAC as pseudorandom function.
alias pbkdf2_hmac
    hashlib.pbkdf2_hmac(${1:name}, ${2:password}, ${3:salt}, ${4:rounds}, ${5:dklen=None})
    # The function provides PKCS#5 password-based key derivation function 2. Ituses HMAC as pseudorandom function.
    # https://docs.python.org/2/library/hashlib.html

snippet heapq_heappush heap_item
abbr Push the value item onto the heap, maintaining the heap invariant.
alias heappush
    heapq.heappush(${1:heap}, ${2:item})
    # Push the value item onto the heap, maintaining the heap invariant.
    # https://docs.python.org/2/library/heapq.html
snippet heapq_heappop heap
abbr Pop and return the smallest item from the heap, maintaining the heapinvariant.  If the heap is empty, IndexError is raised.
alias heappop
    heapq.heappop(${1:heap})
    # Pop and return the smallest item from the heap, maintaining the heapinvariant.  If the heap is empty, IndexError is raised.
    # https://docs.python.org/2/library/heapq.html
snippet heapq_heappushpop heap_item
abbr Push item on the heap, then pop and return the smallest item from theheap.  The combined action runs more efficiently than heappush()followe
alias heappushpop
    heapq.heappushpop(${1:heap}, ${2:item})
    # Push item on the heap, then pop and return the smallest item from theheap.  The combined action runs more efficiently than heappush()followe
    # https://docs.python.org/2/library/heapq.html
snippet heapq_heapify x
abbr Transform list x into a heap, in-place, in linear time.
alias heapify
    heapq.heapify(${1:x})
    # Transform list x into a heap, in-place, in linear time.
    # https://docs.python.org/2/library/heapq.html
snippet heapq_heapreplace heap_item
abbr Pop and return the smallest item from the heap, and also push the new item.The heap size doesn’t change. If the heap is empty, IndexError is
alias heapreplace
    heapq.heapreplace(${1:heap}, ${2:item})
    # Pop and return the smallest item from the heap, and also push the new item.The heap size doesn’t change. If the heap is empty, IndexError is
    # https://docs.python.org/2/library/heapq.html
snippet heapq_merge *iterables
abbr Merge multiple sorted inputs into a single sorted output (for example, mergetimestamped entries from multiple log files).  Returns an iterat
alias merge
    heapq.merge(${1:*iterables})
    # Merge multiple sorted inputs into a single sorted output (for example, mergetimestamped entries from multiple log files).  Returns an iterat
    # https://docs.python.org/2/library/heapq.html
snippet heapq_nlargest n_iterable_key
abbr Return a list with the n largest elements from the dataset defined byiterable.  key, if provided, specifies a function of one argument that 
alias nlargest
    heapq.nlargest(${1:n}, ${2:iterable}, ${3:key})
    # Return a list with the n largest elements from the dataset defined byiterable.  key, if provided, specifies a function of one argument that 
    # https://docs.python.org/2/library/heapq.html
snippet heapq_nsmallest n_iterable_key
abbr Return a list with the n smallest elements from the dataset defined byiterable.  key, if provided, specifies a function of one argument that
alias nsmallest
    heapq.nsmallest(${1:n}, ${2:iterable}, ${3:key})
    # Return a list with the n smallest elements from the dataset defined byiterable.  key, if provided, specifies a function of one argument that
    # https://docs.python.org/2/library/heapq.html

snippet hmac_new key_msg_digestmod
abbr Return a new hmac object.  If msg is present, the method call update(msg)is made. digestmod is the digest constructor or module for the HMAC
alias new
    hmac.new(${1:key}, ${2:msg}, ${3:digestmod})
    # Return a new hmac object.  If msg is present, the method call update(msg)is made. digestmod is the digest constructor or module for the HMAC
    # https://docs.python.org/2/library/hmac.html
snippet hmac_compare_digest a_b
abbr Return a == b.  This function uses an approach designed to preventtiming analysis by avoiding content-based short circuiting behaviour,makin
alias compare_digest
    hmac.compare_digest(${1:a}, ${2:b})
    # Return a == b.  This function uses an approach designed to preventtiming analysis by avoiding content-based short circuiting behaviour,makin
    # https://docs.python.org/2/library/hmac.html

snippet hotshot_stats_load filename
abbr Load hotshot data from filename. Returns an instance of thepstats.Stats class.
alias load
    hotshot.stats.load(${1:filename})
    # Load hotshot data from filename. Returns an instance of thepstats.Stats class.
    # https://docs.python.org/2/library/hotshot.html









snippet ic_launchurl url_hint
abbr These functions are “shortcuts” to the methods of the same name, describedbelow.
alias launchurl
    ic.launchurl(${1:url}, ${2:hint})
    # These functions are “shortcuts” to the methods of the same name, describedbelow.
    # https://docs.python.org/2/library/ic.html
snippet ic_parseurl data_start_end_hint
abbr These functions are “shortcuts” to the methods of the same name, describedbelow.
alias parseurl
    ic.parseurl(${1:data}, ${2:start}, ${3:end}, ${4:hint})
    # These functions are “shortcuts” to the methods of the same name, describedbelow.
    # https://docs.python.org/2/library/ic.html
snippet ic_mapfile file
abbr These functions are “shortcuts” to the methods of the same name, describedbelow.
alias mapfile
    ic.mapfile(${1:file})
    # These functions are “shortcuts” to the methods of the same name, describedbelow.
    # https://docs.python.org/2/library/ic.html
snippet ic_maptypecreator type_creator_filename
abbr These functions are “shortcuts” to the methods of the same name, describedbelow.
alias maptypecreator
    ic.maptypecreator(${1:type}, ${2:creator}, ${3:filename})
    # These functions are “shortcuts” to the methods of the same name, describedbelow.
    # https://docs.python.org/2/library/ic.html
snippet ic_settypecreator file
abbr These functions are “shortcuts” to the methods of the same name, describedbelow.
alias settypecreator
    ic.settypecreator(${1:file})
    # These functions are “shortcuts” to the methods of the same name, describedbelow.
    # https://docs.python.org/2/library/ic.html



snippet imageop_crop image_psize_width_height_x0_y0_x1_y1
abbr Return the selected part of image, which should be width by height in sizeand consist of pixels of psize bytes. x0, y0, x1 and y1 are like t
alias crop
    imageop.crop(${1:image}, ${2:psize}, ${3:width}, ${4:height}, ${5:x0}, ${6:y0}, ${7:x1}, ${8:y1})
    # Return the selected part of image, which should be width by height in sizeand consist of pixels of psize bytes. x0, y0, x1 and y1 are like t
    # https://docs.python.org/2/library/imageop.html
snippet imageop_scale image_psize_width_height_newwidth_newheight
abbr Return image scaled to size newwidth by newheight. No interpolation isdone, scaling is done by simple-minded pixel duplication or removal.  
alias scale
    imageop.scale(${1:image}, ${2:psize}, ${3:width}, ${4:height}, ${5:newwidth}, ${6:newheight})
    # Return image scaled to size newwidth by newheight. No interpolation isdone, scaling is done by simple-minded pixel duplication or removal.  
    # https://docs.python.org/2/library/imageop.html
snippet imageop_tovideo image_psize_width_height
abbr Run a vertical low-pass filter over an image.  It does so by computing eachdestination pixel as the average of two vertically-aligned source
alias tovideo
    imageop.tovideo(${1:image}, ${2:psize}, ${3:width}, ${4:height})
    # Run a vertical low-pass filter over an image.  It does so by computing eachdestination pixel as the average of two vertically-aligned source
    # https://docs.python.org/2/library/imageop.html
snippet imageop_grey2mono image_width_height_threshold
abbr Convert a 8-bit deep greyscale image to a 1-bit deep image by thresholding allthe pixels.  The resulting image is tightly packed and is prob
alias grey2mono
    imageop.grey2mono(${1:image}, ${2:width}, ${3:height}, ${4:threshold})
    # Convert a 8-bit deep greyscale image to a 1-bit deep image by thresholding allthe pixels.  The resulting image is tightly packed and is prob
    # https://docs.python.org/2/library/imageop.html
snippet imageop_dither2mono image_width_height
abbr Convert an 8-bit greyscale image to a 1-bit monochrome image using a(simple-minded) dithering algorithm.
alias dither2mono
    imageop.dither2mono(${1:image}, ${2:width}, ${3:height})
    # Convert an 8-bit greyscale image to a 1-bit monochrome image using a(simple-minded) dithering algorithm.
    # https://docs.python.org/2/library/imageop.html
snippet imageop_mono2grey image_width_height_p0_p1
abbr Convert a 1-bit monochrome image to an 8 bit greyscale or color image. Allpixels that are zero-valued on input get value p0 on output and al
alias mono2grey
    imageop.mono2grey(${1:image}, ${2:width}, ${3:height}, ${4:p0}, ${5:p1})
    # Convert a 1-bit monochrome image to an 8 bit greyscale or color image. Allpixels that are zero-valued on input get value p0 on output and al
    # https://docs.python.org/2/library/imageop.html
snippet imageop_grey2grey4 image_width_height
abbr Convert an 8-bit greyscale image to a 4-bit greyscale image without dithering.
alias grey2grey4
    imageop.grey2grey4(${1:image}, ${2:width}, ${3:height})
    # Convert an 8-bit greyscale image to a 4-bit greyscale image without dithering.
    # https://docs.python.org/2/library/imageop.html
snippet imageop_grey2grey2 image_width_height
abbr Convert an 8-bit greyscale image to a 2-bit greyscale image without dithering.
alias grey2grey2
    imageop.grey2grey2(${1:image}, ${2:width}, ${3:height})
    # Convert an 8-bit greyscale image to a 2-bit greyscale image without dithering.
    # https://docs.python.org/2/library/imageop.html
snippet imageop_dither2grey2 image_width_height
abbr Convert an 8-bit greyscale image to a 2-bit greyscale image with dithering.  Asfor dither2mono(), the dithering algorithm is currently very 
alias dither2grey2
    imageop.dither2grey2(${1:image}, ${2:width}, ${3:height})
    # Convert an 8-bit greyscale image to a 2-bit greyscale image with dithering.  Asfor dither2mono(), the dithering algorithm is currently very 
    # https://docs.python.org/2/library/imageop.html
snippet imageop_grey42grey image_width_height
abbr Convert a 4-bit greyscale image to an 8-bit greyscale image.
alias grey42grey
    imageop.grey42grey(${1:image}, ${2:width}, ${3:height})
    # Convert a 4-bit greyscale image to an 8-bit greyscale image.
    # https://docs.python.org/2/library/imageop.html
snippet imageop_grey22grey image_width_height
abbr Convert a 2-bit greyscale image to an 8-bit greyscale image.
alias grey22grey
    imageop.grey22grey(${1:image}, ${2:width}, ${3:height})
    # Convert a 2-bit greyscale image to an 8-bit greyscale image.
    # https://docs.python.org/2/library/imageop.html

snippet imaplib_Internaldate2tuple datestr
abbr Parse an IMAP4 INTERNALDATE string and return corresponding localtime.  The return value is a time.struct_time instance orNone if the string
alias Internaldate2tuple
    imaplib.Internaldate2tuple(${1:datestr})
    # Parse an IMAP4 INTERNALDATE string and return corresponding localtime.  The return value is a time.struct_time instance orNone if the string
    # https://docs.python.org/2/library/imaplib.html
snippet imaplib_Int2AP num
abbr Converts an integer into a string representation using characters from the set[A .. P].
alias Int2AP
    imaplib.Int2AP(${1:num})
    # Converts an integer into a string representation using characters from the set[A .. P].
    # https://docs.python.org/2/library/imaplib.html
snippet imaplib_ParseFlags flagstr
abbr Converts an IMAP4 FLAGS response to a tuple of individual flags.
alias ParseFlags
    imaplib.ParseFlags(${1:flagstr})
    # Converts an IMAP4 FLAGS response to a tuple of individual flags.
    # https://docs.python.org/2/library/imaplib.html
snippet imaplib_Time2Internaldate date_time
abbr Convert date_time to an IMAP4 INTERNALDATE representation.  Thereturn value is a string in the form: "DD-Mmm-YYYY HH:MM:SS+HHMM" (including 
alias Time2Internaldate
    imaplib.Time2Internaldate(${1:date_time})
    # Convert date_time to an IMAP4 INTERNALDATE representation.  Thereturn value is a string in the form: "DD-Mmm-YYYY HH:MM:SS+HHMM" (including 
    # https://docs.python.org/2/library/imaplib.html

snippet imgfile_getsizes file
abbr This function returns a tuple (x, y, z) where x and y are the size ofthe image in pixels and z is the number of bytes per pixel. Only 3 byte
alias getsizes
    imgfile.getsizes(${1:file})
    # This function returns a tuple (x, y, z) where x and y are the size ofthe image in pixels and z is the number of bytes per pixel. Only 3 byte
    # https://docs.python.org/2/library/imgfile.html
snippet imgfile_read file
abbr This function reads and decodes the image on the specified file, and returns itas a Python string. The string has either 1 byte greyscale pi
alias read
    imgfile.read(${1:file})
    # This function reads and decodes the image on the specified file, and returns itas a Python string. The string has either 1 byte greyscale pi
    # https://docs.python.org/2/library/imgfile.html
snippet imgfile_readscaled file_x_y_filter_blur
abbr This function is identical to read but it returns an image that is scaled to thegiven x and y sizes. If the filter and blur parameters are o
alias readscaled
    imgfile.readscaled(${1:file}, ${2:x}, ${3:y}, ${4:filter}, ${5:blur})
    # This function is identical to read but it returns an image that is scaled to thegiven x and y sizes. If the filter and blur parameters are o
    # https://docs.python.org/2/library/imgfile.html
snippet imgfile_ttob flag
abbr This function sets a global flag which defines whether the scan lines of theimage are read or written from bottom to top (flag is zero, comp
alias ttob
    imgfile.ttob(${1:flag})
    # This function sets a global flag which defines whether the scan lines of theimage are read or written from bottom to top (flag is zero, comp
    # https://docs.python.org/2/library/imgfile.html
snippet imgfile_write file_data_x_y_z
abbr This function writes the RGB or greyscale data in data to image file file.x and y give the size of the image, z is 1 for 1 byte greyscale im
alias write
    imgfile.write(${1:file}, ${2:data}, ${3:x}, ${4:y}, ${5:z})
    # This function writes the RGB or greyscale data in data to image file file.x and y give the size of the image, z is 1 for 1 byte greyscale im
    # https://docs.python.org/2/library/imgfile.html

snippet imghdr_what filename_h
abbr Tests the image data contained in the file named by filename, and returns astring describing the image type.  If optional h is provided, the
alias what
    imghdr.what(${1:filename}, ${2:h})
    # Tests the image data contained in the file named by filename, and returns astring describing the image type.  If optional h is provided, the
    # https://docs.python.org/2/library/imghdr.html

snippet imp_get_magic 
abbr Return the magic string value used to recognize byte-compiled code files(.pyc files).  (This value may be different for each Python version.
alias get_magic
    imp.get_magic()
    # Return the magic string value used to recognize byte-compiled code files(.pyc files).  (This value may be different for each Python version.
    # https://docs.python.org/2/library/imp.html
snippet imp_get_suffixes 
abbr Return a list of 3-element tuples, each describing a particular type ofmodule. Each triple has the form (suffix, mode, type), where suffix i
alias get_suffixes
    imp.get_suffixes()
    # Return a list of 3-element tuples, each describing a particular type ofmodule. Each triple has the form (suffix, mode, type), where suffix i
    # https://docs.python.org/2/library/imp.html
snippet imp_find_module name_path
abbr Try to find the module name.  If path is omitted or None, the list ofdirectory names given by sys.path is searched, but first a few specialp
alias find_module
    imp.find_module(${1:name}, ${2:path})
    # Try to find the module name.  If path is omitted or None, the list ofdirectory names given by sys.path is searched, but first a few specialp
    # https://docs.python.org/2/library/imp.html
snippet imp_load_module name_file_pathname_description
abbr Load a module that was previously found by find_module() (or by anotherwise conducted search yielding compatible results).  This function do
alias load_module
    imp.load_module(${1:name}, ${2:file}, ${3:pathname}, ${4:description})
    # Load a module that was previously found by find_module() (or by anotherwise conducted search yielding compatible results).  This function do
    # https://docs.python.org/2/library/imp.html
snippet imp_new_module name
abbr Return a new empty module object called name.  This object is not insertedin sys.modules.
alias new_module
    imp.new_module(${1:name})
    # Return a new empty module object called name.  This object is not insertedin sys.modules.
    # https://docs.python.org/2/library/imp.html
snippet imp_lock_held 
abbr Return True if the import lock is currently held, else False. Onplatforms without threads, always return False.
alias lock_held
    imp.lock_held()
    # Return True if the import lock is currently held, else False. Onplatforms without threads, always return False.
    # https://docs.python.org/2/library/imp.html
snippet imp_acquire_lock 
abbr Acquire the interpreter’s import lock for the current thread.  This lock shouldbe used by import hooks to ensure thread-safety when importin
alias acquire_lock
    imp.acquire_lock()
    # Acquire the interpreter’s import lock for the current thread.  This lock shouldbe used by import hooks to ensure thread-safety when importin
    # https://docs.python.org/2/library/imp.html
snippet imp_release_lock 
abbr Release the interpreter’s import lock. On platforms without threads, thisfunction does nothing.
alias release_lock
    imp.release_lock()
    # Release the interpreter’s import lock. On platforms without threads, thisfunction does nothing.
    # https://docs.python.org/2/library/imp.html
snippet imp_init_builtin name
abbr Initialize the built-in module called name and return its module object alongwith storing it in sys.modules.  If the module was already init
alias init_builtin
    imp.init_builtin(${1:name})
    # Initialize the built-in module called name and return its module object alongwith storing it in sys.modules.  If the module was already init
    # https://docs.python.org/2/library/imp.html
snippet imp_init_frozen name
abbr Initialize the frozen module called name and return its module object.  Ifthe module was already initialized, it will be initialized again. 
alias init_frozen
    imp.init_frozen(${1:name})
    # Initialize the frozen module called name and return its module object.  Ifthe module was already initialized, it will be initialized again. 
    # https://docs.python.org/2/library/imp.html
snippet imp_is_builtin name
abbr Return 1 if there is a built-in module called name which can beinitialized again.  Return -1 if there is a built-in module called namewhich 
alias is_builtin
    imp.is_builtin(${1:name})
    # Return 1 if there is a built-in module called name which can beinitialized again.  Return -1 if there is a built-in module called namewhich 
    # https://docs.python.org/2/library/imp.html
snippet imp_is_frozen name
abbr Return True if there is a frozen module (see init_frozen()) calledname, or False if there is no such module.
alias is_frozen
    imp.is_frozen(${1:name})
    # Return True if there is a frozen module (see init_frozen()) calledname, or False if there is no such module.
    # https://docs.python.org/2/library/imp.html
snippet imp_load_compiled name_pathname_file
abbr Load and initialize a module implemented as a byte-compiled code file and returnits module object.  If the module was already initialized, i
alias load_compiled
    imp.load_compiled(${1:name}, ${2:pathname}, ${3:file})
    # Load and initialize a module implemented as a byte-compiled code file and returnits module object.  If the module was already initialized, i
    # https://docs.python.org/2/library/imp.html
snippet imp_load_dynamic name_pathname_file
abbr Load and initialize a module implemented as a dynamically loadable sharedlibrary and return its module object.  If the module was already in
alias load_dynamic
    imp.load_dynamic(${1:name}, ${2:pathname}, ${3:file})
    # Load and initialize a module implemented as a dynamically loadable sharedlibrary and return its module object.  If the module was already in
    # https://docs.python.org/2/library/imp.html
snippet imp_load_source name_pathname_file
abbr Load and initialize a module implemented as a Python source file and return itsmodule object.  If the module was already initialized, it wil
alias load_source
    imp.load_source(${1:name}, ${2:pathname}, ${3:file})
    # Load and initialize a module implemented as a Python source file and return itsmodule object.  If the module was already initialized, it wil
    # https://docs.python.org/2/library/imp.html

snippet importlib_import_module name_package=None
abbr Import a module. The name argument specifies what module toimport in absolute or relative terms(e.g. either pkg.mod or ..mod). If the name i
alias import_module
    importlib.import_module(${1:name}, ${2:package=None})
    # Import a module. The name argument specifies what module toimport in absolute or relative terms(e.g. either pkg.mod or ..mod). If the name i
    # https://docs.python.org/2/library/importlib.html

snippet imputil_py_suffix_importer filename_finfo_fqname
abbr Undocumented.
alias py_suffix_importer
    imputil.py_suffix_importer(${1:filename}, ${2:finfo}, ${3:fqname})
    # Undocumented.
    # https://docs.python.org/2/library/imputil.html



snippet inspect_getmembers object_predicate
abbr Return all the members of an object in a list of (name, value) pairs sorted byname.  If the optional predicate argument is supplied, only me
alias getmembers
    inspect.getmembers(${1:object}, ${2:predicate})
    # Return all the members of an object in a list of (name, value) pairs sorted byname.  If the optional predicate argument is supplied, only me
    # https://docs.python.org/2/library/inspect.html
snippet inspect_getmoduleinfo path
abbr Return a tuple of values that describe how Python will interpret the fileidentified by path if it is a module, or None if it would not beide
alias getmoduleinfo
    inspect.getmoduleinfo(${1:path})
    # Return a tuple of values that describe how Python will interpret the fileidentified by path if it is a module, or None if it would not beide
    # https://docs.python.org/2/library/inspect.html
snippet inspect_getmodulename path
abbr Return the name of the module named by the file path, without including thenames of enclosing packages.  This uses the same algorithm as the
alias getmodulename
    inspect.getmodulename(${1:path})
    # Return the name of the module named by the file path, without including thenames of enclosing packages.  This uses the same algorithm as the
    # https://docs.python.org/2/library/inspect.html
snippet inspect_ismodule object
abbr Return true if the object is a module.
alias ismodule
    inspect.ismodule(${1:object})
    # Return true if the object is a module.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_isclass object
abbr Return true if the object is a class, whether built-in or created in Pythoncode.
alias isclass
    inspect.isclass(${1:object})
    # Return true if the object is a class, whether built-in or created in Pythoncode.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_ismethod object
abbr Return true if the object is a bound method written in Python.
alias ismethod
    inspect.ismethod(${1:object})
    # Return true if the object is a bound method written in Python.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_isfunction object
abbr Return true if the object is a Python function, which includes functionscreated by a lambda expression.
alias isfunction
    inspect.isfunction(${1:object})
    # Return true if the object is a Python function, which includes functionscreated by a lambda expression.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_isgeneratorfunction object
abbr Return true if the object is a Python generator function.
alias isgeneratorfunction
    inspect.isgeneratorfunction(${1:object})
    # Return true if the object is a Python generator function.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_isgenerator object
abbr Return true if the object is a generator.
alias isgenerator
    inspect.isgenerator(${1:object})
    # Return true if the object is a generator.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_istraceback object
abbr Return true if the object is a traceback.
alias istraceback
    inspect.istraceback(${1:object})
    # Return true if the object is a traceback.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_isframe object
abbr Return true if the object is a frame.
alias isframe
    inspect.isframe(${1:object})
    # Return true if the object is a frame.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_iscode object
abbr Return true if the object is a code.
alias iscode
    inspect.iscode(${1:object})
    # Return true if the object is a code.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_isbuiltin object
abbr Return true if the object is a built-in function or a bound built-in method.
alias isbuiltin
    inspect.isbuiltin(${1:object})
    # Return true if the object is a built-in function or a bound built-in method.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_isroutine object
abbr Return true if the object is a user-defined or built-in function or method.
alias isroutine
    inspect.isroutine(${1:object})
    # Return true if the object is a user-defined or built-in function or method.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_isabstract object
abbr Return true if the object is an abstract base class.
alias isabstract
    inspect.isabstract(${1:object})
    # Return true if the object is an abstract base class.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_ismethoddescriptor object
abbr Return true if the object is a method descriptor, but not ifismethod(), isclass(), isfunction() or isbuiltin()are true.
alias ismethoddescriptor
    inspect.ismethoddescriptor(${1:object})
    # Return true if the object is a method descriptor, but not ifismethod(), isclass(), isfunction() or isbuiltin()are true.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_isdatadescriptor object
abbr Return true if the object is a data descriptor.
alias isdatadescriptor
    inspect.isdatadescriptor(${1:object})
    # Return true if the object is a data descriptor.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_isgetsetdescriptor object
abbr Return true if the object is a getset descriptor.
alias isgetsetdescriptor
    inspect.isgetsetdescriptor(${1:object})
    # Return true if the object is a getset descriptor.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_ismemberdescriptor object
abbr Return true if the object is a member descriptor.
alias ismemberdescriptor
    inspect.ismemberdescriptor(${1:object})
    # Return true if the object is a member descriptor.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_getdoc object
abbr Get the documentation string for an object, cleaned up with cleandoc().
alias getdoc
    inspect.getdoc(${1:object})
    # Get the documentation string for an object, cleaned up with cleandoc().
    # https://docs.python.org/2/library/inspect.html
snippet inspect_getcomments object
abbr Return in a single string any lines of comments immediately preceding theobject’s source code (for a class, function, or method), or at the 
alias getcomments
    inspect.getcomments(${1:object})
    # Return in a single string any lines of comments immediately preceding theobject’s source code (for a class, function, or method), or at the 
    # https://docs.python.org/2/library/inspect.html
snippet inspect_getfile object
abbr Return the name of the (text or binary) file in which an object was defined.This will fail with a TypeError if the object is a built-in modu
alias getfile
    inspect.getfile(${1:object})
    # Return the name of the (text or binary) file in which an object was defined.This will fail with a TypeError if the object is a built-in modu
    # https://docs.python.org/2/library/inspect.html
snippet inspect_getmodule object
abbr Try to guess which module an object was defined in.
alias getmodule
    inspect.getmodule(${1:object})
    # Try to guess which module an object was defined in.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_getsourcefile object
abbr Return the name of the Python source file in which an object was defined.  Thiswill fail with a TypeError if the object is a built-in module
alias getsourcefile
    inspect.getsourcefile(${1:object})
    # Return the name of the Python source file in which an object was defined.  Thiswill fail with a TypeError if the object is a built-in module
    # https://docs.python.org/2/library/inspect.html
snippet inspect_getsourcelines object
abbr Return a list of source lines and starting line number for an object. Theargument may be a module, class, method, function, traceback, frame
alias getsourcelines
    inspect.getsourcelines(${1:object})
    # Return a list of source lines and starting line number for an object. Theargument may be a module, class, method, function, traceback, frame
    # https://docs.python.org/2/library/inspect.html
snippet inspect_getsource object
abbr Return the text of the source code for an object. The argument may be a module,class, method, function, traceback, frame, or code object.  T
alias getsource
    inspect.getsource(${1:object})
    # Return the text of the source code for an object. The argument may be a module,class, method, function, traceback, frame, or code object.  T
    # https://docs.python.org/2/library/inspect.html
snippet inspect_cleandoc doc
abbr Clean up indentation from docstrings that are indented to line up with blocksof code.  Any whitespace that can be uniformly removed from the
alias cleandoc
    inspect.cleandoc(${1:doc})
    # Clean up indentation from docstrings that are indented to line up with blocksof code.  Any whitespace that can be uniformly removed from the
    # https://docs.python.org/2/library/inspect.html
snippet inspect_getclasstree classes_unique
abbr Arrange the given list of classes into a hierarchy of nested lists. Where anested list appears, it contains classes derived from the class w
alias getclasstree
    inspect.getclasstree(${1:classes}, ${2:unique})
    # Arrange the given list of classes into a hierarchy of nested lists. Where anested list appears, it contains classes derived from the class w
    # https://docs.python.org/2/library/inspect.html
snippet inspect_getargspec func
abbr Get the names and default values of a Python function’s arguments. A tuple offour things is returned: (args, varargs, keywords, defaults). a
alias getargspec
    inspect.getargspec(${1:func})
    # Get the names and default values of a Python function’s arguments. A tuple offour things is returned: (args, varargs, keywords, defaults). a
    # https://docs.python.org/2/library/inspect.html
snippet inspect_getargvalues frame
abbr Get information about arguments passed into a particular frame. A tuple offour things is returned: (args, varargs, keywords, locals). args i
alias getargvalues
    inspect.getargvalues(${1:frame})
    # Get information about arguments passed into a particular frame. A tuple offour things is returned: (args, varargs, keywords, locals). args i
    # https://docs.python.org/2/library/inspect.html
snippet inspect_formatargspec args_varargs_varkw_defaults_formatarg_formatvarargs_formatvarkw_formatvalue_join
abbr Format a pretty argument spec from the four values returned bygetargspec().  The format* arguments are the corresponding optionalformatting 
alias formatargspec
    inspect.formatargspec(${1:args}, ${2:varargs}, ${3:varkw}, ${4:defaults}, ${5:formatarg}, ${6:formatvarargs}, ${7:formatvarkw}, ${8:formatvalue}, ${9:join})
    # Format a pretty argument spec from the four values returned bygetargspec().  The format* arguments are the corresponding optionalformatting 
    # https://docs.python.org/2/library/inspect.html
snippet inspect_formatargvalues args_varargs_varkw_locals_formatarg_formatvarargs_formatvarkw_formatvalue_join
abbr Format a pretty argument spec from the four values returned bygetargvalues().  The format* arguments are the corresponding optionalformattin
alias formatargvalues
    inspect.formatargvalues(${1:args}, ${2:varargs}, ${3:varkw}, ${4:locals}, ${5:formatarg}, ${6:formatvarargs}, ${7:formatvarkw}, ${8:formatvalue}, ${9:join})
    # Format a pretty argument spec from the four values returned bygetargvalues().  The format* arguments are the corresponding optionalformattin
    # https://docs.python.org/2/library/inspect.html
snippet inspect_getmro cls
abbr Return a tuple of class cls’s base classes, including cls, in method resolutionorder.  No class appears more than once in this tuple. Note t
alias getmro
    inspect.getmro(${1:cls})
    # Return a tuple of class cls’s base classes, including cls, in method resolutionorder.  No class appears more than once in this tuple. Note t
    # https://docs.python.org/2/library/inspect.html
snippet inspect_getcallargs func[, *args][, **kwds]
abbr Bind the args and kwds to the argument names of the Python function ormethod func, as if it was called with them. For bound methods, bind al
alias getcallargs
    inspect.getcallargs(${1:func[, *args][, **kwds]})
    # Bind the args and kwds to the argument names of the Python function ormethod func, as if it was called with them. For bound methods, bind al
    # https://docs.python.org/2/library/inspect.html
snippet inspect_getframeinfo frame_context
abbr Get information about a frame or traceback object.  A 5-tuple is returned, thelast five elements of the frame’s frame record.
alias getframeinfo
    inspect.getframeinfo(${1:frame}, ${2:context})
    # Get information about a frame or traceback object.  A 5-tuple is returned, thelast five elements of the frame’s frame record.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_getouterframes frame_context
abbr Get a list of frame records for a frame and all outer frames.  These framesrepresent the calls that lead to the creation of frame. The first
alias getouterframes
    inspect.getouterframes(${1:frame}, ${2:context})
    # Get a list of frame records for a frame and all outer frames.  These framesrepresent the calls that lead to the creation of frame. The first
    # https://docs.python.org/2/library/inspect.html
snippet inspect_getinnerframes traceback_context
abbr Get a list of frame records for a traceback’s frame and all inner frames.  Theseframes represent calls made as a consequence of frame.  The 
alias getinnerframes
    inspect.getinnerframes(${1:traceback}, ${2:context})
    # Get a list of frame records for a traceback’s frame and all inner frames.  Theseframes represent calls made as a consequence of frame.  The 
    # https://docs.python.org/2/library/inspect.html
snippet inspect_currentframe 
abbr Return the frame object for the caller’s stack frame.
alias currentframe
    inspect.currentframe()
    # Return the frame object for the caller’s stack frame.
    # https://docs.python.org/2/library/inspect.html
snippet inspect_stack context
abbr Return a list of frame records for the caller’s stack.  The first entry in thereturned list represents the caller; the last entry represents
alias stack
    inspect.stack(${1:context})
    # Return a list of frame records for the caller’s stack.  The first entry in thereturned list represents the caller; the last entry represents
    # https://docs.python.org/2/library/inspect.html
snippet inspect_trace context
abbr Return a list of frame records for the stack between the current frame and theframe in which an exception currently being handled was raised
alias trace
    inspect.trace(${1:context})
    # Return a list of frame records for the stack between the current frame and theframe in which an exception currently being handled was raised
    # https://docs.python.org/2/library/inspect.html





snippet io_open file_mode='r'_buffering=-1_encoding=None_errors=None_newline=None_closefd=True
abbr Open file and return a corresponding stream.  If the file cannot be opened,an IOError is raised.
alias open
    io.open(${1:file}, ${2:mode='r'}, ${3:buffering=-1}, ${4:encoding=None}, ${5:errors=None}, ${6:newline=None}, ${7:closefd=True})
    # Open file and return a corresponding stream.  If the file cannot be opened,an IOError is raised.
    # https://docs.python.org/2/library/io.html



snippet itertools_chain *iterables
abbr Make an iterator that returns elements from the first iterable until it isexhausted, then proceeds to the next iterable, until all of the it
alias chain
    itertools.chain(${1:*iterables})
    # Make an iterator that returns elements from the first iterable until it isexhausted, then proceeds to the next iterable, until all of the it
    # https://docs.python.org/2/library/itertools.html
snippet itertools_combinations iterable_r
abbr Return r length subsequences of elements from the input iterable.
alias combinations
    itertools.combinations(${1:iterable}, ${2:r})
    # Return r length subsequences of elements from the input iterable.
    # https://docs.python.org/2/library/itertools.html
snippet itertools_combinations_with_replacement iterable_r
abbr Return r length subsequences of elements from the input iterableallowing individual elements to be repeated more than once.
alias combinations_with_replacement
    itertools.combinations_with_replacement(${1:iterable}, ${2:r})
    # Return r length subsequences of elements from the input iterableallowing individual elements to be repeated more than once.
    # https://docs.python.org/2/library/itertools.html
snippet itertools_compress data_selectors
abbr Make an iterator that filters elements from data returning only those thathave a corresponding element in selectors that evaluates to True.S
alias compress
    itertools.compress(${1:data}, ${2:selectors})
    # Make an iterator that filters elements from data returning only those thathave a corresponding element in selectors that evaluates to True.S
    # https://docs.python.org/2/library/itertools.html
snippet itertools_count start=0_step=1
abbr Make an iterator that returns evenly spaced values starting with n. Oftenused as an argument to imap() to generate consecutive data points.A
alias count
    itertools.count(${1:start=0}, ${2:step=1})
    # Make an iterator that returns evenly spaced values starting with n. Oftenused as an argument to imap() to generate consecutive data points.A
    # https://docs.python.org/2/library/itertools.html
snippet itertools_cycle iterable
abbr Make an iterator returning elements from the iterable and saving a copy of each.When the iterable is exhausted, return elements from the sav
alias cycle
    itertools.cycle(${1:iterable})
    # Make an iterator returning elements from the iterable and saving a copy of each.When the iterable is exhausted, return elements from the sav
    # https://docs.python.org/2/library/itertools.html
snippet itertools_dropwhile predicate_iterable
abbr Make an iterator that drops elements from the iterable as long as the predicateis true; afterwards, returns every element.  Note, the iterat
alias dropwhile
    itertools.dropwhile(${1:predicate}, ${2:iterable})
    # Make an iterator that drops elements from the iterable as long as the predicateis true; afterwards, returns every element.  Note, the iterat
    # https://docs.python.org/2/library/itertools.html
snippet itertools_groupby iterable_key
abbr Make an iterator that returns consecutive keys and groups from the iterable.The key is a function computing a key value for each element.  I
alias groupby
    itertools.groupby(${1:iterable}, ${2:key})
    # Make an iterator that returns consecutive keys and groups from the iterable.The key is a function computing a key value for each element.  I
    # https://docs.python.org/2/library/itertools.html
snippet itertools_ifilter predicate_iterable
abbr Make an iterator that filters elements from iterable returning only those forwhich the predicate is True. If predicate is None, return the i
alias ifilter
    itertools.ifilter(${1:predicate}, ${2:iterable})
    # Make an iterator that filters elements from iterable returning only those forwhich the predicate is True. If predicate is None, return the i
    # https://docs.python.org/2/library/itertools.html
snippet itertools_ifilterfalse predicate_iterable
abbr Make an iterator that filters elements from iterable returning only those forwhich the predicate is False. If predicate is None, return the 
alias ifilterfalse
    itertools.ifilterfalse(${1:predicate}, ${2:iterable})
    # Make an iterator that filters elements from iterable returning only those forwhich the predicate is False. If predicate is None, return the 
    # https://docs.python.org/2/library/itertools.html
snippet itertools_imap function_*iterables
abbr Make an iterator that computes the function using arguments from each of theiterables.  If function is set to None, then imap() returns thea
alias imap
    itertools.imap(${1:function}, ${2:*iterables})
    # Make an iterator that computes the function using arguments from each of theiterables.  If function is set to None, then imap() returns thea
    # https://docs.python.org/2/library/itertools.html
snippet itertools_islice iterable_stop
abbr Make an iterator that returns selected elements from the iterable. If start isnon-zero, then elements from the iterable are skipped until st
alias islice
    itertools.islice(${1:iterable}, ${2:stop})
    # Make an iterator that returns selected elements from the iterable. If start isnon-zero, then elements from the iterable are skipped until st
    # https://docs.python.org/2/library/itertools.html
snippet itertools_izip *iterables
abbr Make an iterator that aggregates elements from each of the iterables. Likezip() except that it returns an iterator instead of a list.  Used 
alias izip
    itertools.izip(${1:*iterables})
    # Make an iterator that aggregates elements from each of the iterables. Likezip() except that it returns an iterator instead of a list.  Used 
    # https://docs.python.org/2/library/itertools.html
snippet itertools_izip_longest *iterables_fillvalue
abbr Make an iterator that aggregates elements from each of the iterables. If theiterables are of uneven length, missing values are filled-in wit
alias izip_longest
    itertools.izip_longest(${1:*iterables}, ${2:fillvalue})
    # Make an iterator that aggregates elements from each of the iterables. If theiterables are of uneven length, missing values are filled-in wit
    # https://docs.python.org/2/library/itertools.html
snippet itertools_permutations iterable_r
abbr Return successive r length permutations of elements in the iterable.
alias permutations
    itertools.permutations(${1:iterable}, ${2:r})
    # Return successive r length permutations of elements in the iterable.
    # https://docs.python.org/2/library/itertools.html
snippet itertools_product *iterables_repeat
abbr Cartesian product of input iterables.
alias product
    itertools.product(${1:*iterables}, ${2:repeat})
    # Cartesian product of input iterables.
    # https://docs.python.org/2/library/itertools.html
snippet itertools_repeat object_times
abbr Make an iterator that returns object over and over again. Runs indefinitelyunless the times argument is specified. Used as argument to imap(
alias repeat
    itertools.repeat(${1:object}, ${2:times})
    # Make an iterator that returns object over and over again. Runs indefinitelyunless the times argument is specified. Used as argument to imap(
    # https://docs.python.org/2/library/itertools.html
snippet itertools_starmap function_iterable
abbr Make an iterator that computes the function using arguments obtained fromthe iterable.  Used instead of imap() when argument parameters are 
alias starmap
    itertools.starmap(${1:function}, ${2:iterable})
    # Make an iterator that computes the function using arguments obtained fromthe iterable.  Used instead of imap() when argument parameters are 
    # https://docs.python.org/2/library/itertools.html
snippet itertools_takewhile predicate_iterable
abbr Make an iterator that returns elements from the iterable as long as thepredicate is true.  Equivalent to:
alias takewhile
    itertools.takewhile(${1:predicate}, ${2:iterable})
    # Make an iterator that returns elements from the iterable as long as thepredicate is true.  Equivalent to:
    # https://docs.python.org/2/library/itertools.html
snippet itertools_tee iterable_n=2
abbr Return n independent iterators from a single iterable.  Equivalent to:
alias tee
    itertools.tee(${1:iterable}, ${2:n=2})
    # Return n independent iterators from a single iterable.  Equivalent to:
    # https://docs.python.org/2/library/itertools.html

snippet jpeg_compress data_w_h_b
abbr Treat data as a pixmap of width w and height h, with b bytes per pixel.The data is in SGI GL order, so the first pixel is in the lower-left 
alias compress
    jpeg.compress(${1:data}, ${2:w}, ${3:h}, ${4:b})
    # Treat data as a pixmap of width w and height h, with b bytes per pixel.The data is in SGI GL order, so the first pixel is in the lower-left 
    # https://docs.python.org/2/library/jpeg.html
snippet jpeg_decompress data
abbr Data is a string containing a picture in JFIF format. It returns a tuple(data, width, height, bytesperpixel).  Again, the data is suitable t
alias decompress
    jpeg.decompress(${1:data})
    # Data is a string containing a picture in JFIF format. It returns a tuple(data, width, height, bytesperpixel).  Again, the data is suitable t
    # https://docs.python.org/2/library/jpeg.html
snippet jpeg_setoption name_value
abbr Set various options.  Subsequent compress() and decompress() callswill use these options.  The following options are available:
alias setoption
    jpeg.setoption(${1:name}, ${2:value})
    # Set various options.  Subsequent compress() and decompress() callswill use these options.  The following options are available:
    # https://docs.python.org/2/library/jpeg.html

snippet json_dump obj_fp_skipkeys=False_ensure_ascii=True_check_circular=True_allow_nan=True_cls=None_indent=None_separators=None_encoding="utf-8"_default=None_sort_keys=False_**kw
abbr Serialize obj as a JSON formatted stream to fp (a .write()-supportingfile-like object) using this conversion table.
alias dump
    json.dump(${1:obj}, ${2:fp}, ${3:skipkeys=False}, ${4:ensure_ascii=True}, ${5:check_circular=True}, ${6:allow_nan=True}, ${7:cls=None}, ${8:indent=None}, ${9:separators=None}, ${10:encoding="utf-8"}, ${11:default=None}, ${12:sort_keys=False}, ${13:**kw})
    # Serialize obj as a JSON formatted stream to fp (a .write()-supportingfile-like object) using this conversion table.
    # https://docs.python.org/2/library/json.html
snippet json_dumps obj_skipkeys=False_ensure_ascii=True_check_circular=True_allow_nan=True_cls=None_indent=None_separators=None_encoding="utf-8"_default=None_sort_keys=False_**kw
abbr Serialize obj to a JSON formatted str using this conversiontable.  If ensure_ascii is False, the result maycontain non-ASCII characters and 
alias dumps
    json.dumps(${1:obj}, ${2:skipkeys=False}, ${3:ensure_ascii=True}, ${4:check_circular=True}, ${5:allow_nan=True}, ${6:cls=None}, ${7:indent=None}, ${8:separators=None}, ${9:encoding="utf-8"}, ${10:default=None}, ${11:sort_keys=False}, ${12:**kw})
    # Serialize obj to a JSON formatted str using this conversiontable.  If ensure_ascii is False, the result maycontain non-ASCII characters and 
    # https://docs.python.org/2/library/json.html
snippet json_load fp_encoding_cls_object_hook_parse_float_parse_int_parse_constant_object_pairs_hook_**kw
abbr Deserialize fp (a .read()-supporting file-like objectcontaining a JSON document) to a Python object using this conversiontable.
alias load
    json.load(${1:fp}, ${2:encoding}, ${3:cls}, ${4:object_hook}, ${5:parse_float}, ${6:parse_int}, ${7:parse_constant}, ${8:object_pairs_hook}, ${9:**kw})
    # Deserialize fp (a .read()-supporting file-like objectcontaining a JSON document) to a Python object using this conversiontable.
    # https://docs.python.org/2/library/json.html
snippet json_loads s_encoding_cls_object_hook_parse_float_parse_int_parse_constant_object_pairs_hook_**kw
abbr Deserialize s (a str or unicode instance containing a JSONdocument) to a Python object using this conversion table.
alias loads
    json.loads(${1:s}, ${2:encoding}, ${3:cls}, ${4:object_hook}, ${5:parse_float}, ${6:parse_int}, ${7:parse_constant}, ${8:object_pairs_hook}, ${9:**kw})
    # Deserialize s (a str or unicode instance containing a JSONdocument) to a Python object using this conversion table.
    # https://docs.python.org/2/library/json.html

snippet keyword_iskeyword s
abbr Return true if s is a Python keyword.
alias iskeyword
    keyword.iskeyword(${1:s})
    # Return true if s is a Python keyword.
    # https://docs.python.org/2/library/keyword.html



snippet linecache_getline filename_lineno_module_globals
abbr Get line lineno from file named filename. This function will never raise anexception — it will return '' on errors (the terminating newline 
alias getline
    linecache.getline(${1:filename}, ${2:lineno}, ${3:module_globals})
    # Get line lineno from file named filename. This function will never raise anexception — it will return '' on errors (the terminating newline 
    # https://docs.python.org/2/library/linecache.html
snippet linecache_clearcache 
abbr Clear the cache.  Use this function if you no longer need lines from filespreviously read using getline().
alias clearcache
    linecache.clearcache()
    # Clear the cache.  Use this function if you no longer need lines from filespreviously read using getline().
    # https://docs.python.org/2/library/linecache.html
snippet linecache_checkcache filename
abbr Check the cache for validity.  Use this function if files in the cache  may havechanged on disk, and you require the updated version.  If fi
alias checkcache
    linecache.checkcache(${1:filename})
    # Check the cache for validity.  Use this function if files in the cache  may havechanged on disk, and you require the updated version.  If fi
    # https://docs.python.org/2/library/linecache.html

snippet locale_setlocale category_locale
abbr If locale is given and not None, setlocale() modifies the localesetting for the category. The available categories are listed in the datades
alias setlocale
    locale.setlocale(${1:category}, ${2:locale})
    # If locale is given and not None, setlocale() modifies the localesetting for the category. The available categories are listed in the datades
    # https://docs.python.org/2/library/locale.html
snippet locale_localeconv 
abbr Returns the database of the local conventions as a dictionary. This dictionaryhas the following strings as keys:
alias localeconv
    locale.localeconv()
    # Returns the database of the local conventions as a dictionary. This dictionaryhas the following strings as keys:
    # https://docs.python.org/2/library/locale.html
snippet locale_nl_langinfo option
abbr Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
alias nl_langinfo
    locale.nl_langinfo(${1:option})
    # Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
    # https://docs.python.org/2/library/locale.html
snippet locale_CODESET 
abbr Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
alias CODESET
    locale.CODESET()
    # Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
    # https://docs.python.org/2/library/locale.html
snippet locale_D_T_FMT 
abbr Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
alias D_T_FMT
    locale.D_T_FMT()
    # Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
    # https://docs.python.org/2/library/locale.html
snippet locale_D_FMT 
abbr Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
alias D_FMT
    locale.D_FMT()
    # Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
    # https://docs.python.org/2/library/locale.html
snippet locale_T_FMT 
abbr Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
alias T_FMT
    locale.T_FMT()
    # Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
    # https://docs.python.org/2/library/locale.html
snippet locale_T_FMT_AMPM 
abbr Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
alias T_FMT_AMPM
    locale.T_FMT_AMPM()
    # Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
    # https://docs.python.org/2/library/locale.html
snippet locale_RADIXCHAR 
abbr Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
alias RADIXCHAR
    locale.RADIXCHAR()
    # Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
    # https://docs.python.org/2/library/locale.html
snippet locale_THOUSEP 
abbr Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
alias THOUSEP
    locale.THOUSEP()
    # Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
    # https://docs.python.org/2/library/locale.html
snippet locale_YESEXPR 
abbr Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
alias YESEXPR
    locale.YESEXPR()
    # Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
    # https://docs.python.org/2/library/locale.html
snippet locale_NOEXPR 
abbr Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
alias NOEXPR
    locale.NOEXPR()
    # Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
    # https://docs.python.org/2/library/locale.html
snippet locale_CRNCYSTR 
abbr Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
alias CRNCYSTR
    locale.CRNCYSTR()
    # Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
    # https://docs.python.org/2/library/locale.html
snippet locale_ERA 
abbr Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
alias ERA
    locale.ERA()
    # Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
    # https://docs.python.org/2/library/locale.html
snippet locale_ERA_D_T_FMT 
abbr Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
alias ERA_D_T_FMT
    locale.ERA_D_T_FMT()
    # Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
    # https://docs.python.org/2/library/locale.html
snippet locale_ERA_D_FMT 
abbr Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
alias ERA_D_FMT
    locale.ERA_D_FMT()
    # Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
    # https://docs.python.org/2/library/locale.html
snippet locale_ERA_T_FMT 
abbr Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
alias ERA_T_FMT
    locale.ERA_T_FMT()
    # Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
    # https://docs.python.org/2/library/locale.html
snippet locale_ALT_DIGITS 
abbr Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
alias ALT_DIGITS
    locale.ALT_DIGITS()
    # Return some locale-specific information as a string.  This function is notavailable on all systems, and the set of possible options might al
    # https://docs.python.org/2/library/locale.html
snippet locale_getdefaultlocale envvars
abbr Tries to determine the default locale settings and returns them as a tuple ofthe form (language code, encoding).
alias getdefaultlocale
    locale.getdefaultlocale(${1:envvars})
    # Tries to determine the default locale settings and returns them as a tuple ofthe form (language code, encoding).
    # https://docs.python.org/2/library/locale.html
snippet locale_getlocale category
abbr Returns the current setting for the given locale category as sequence containinglanguage code, encoding. category may be one of the LC_* val
alias getlocale
    locale.getlocale(${1:category})
    # Returns the current setting for the given locale category as sequence containinglanguage code, encoding. category may be one of the LC_* val
    # https://docs.python.org/2/library/locale.html
snippet locale_getpreferredencoding do_setlocale
abbr Return the encoding used for text data, according to user preferences.  Userpreferences are expressed differently on different systems, and 
alias getpreferredencoding
    locale.getpreferredencoding(${1:do_setlocale})
    # Return the encoding used for text data, according to user preferences.  Userpreferences are expressed differently on different systems, and 
    # https://docs.python.org/2/library/locale.html
snippet locale_normalize localename
abbr Returns a normalized locale code for the given locale name.  The returned localecode is formatted for use with setlocale().  If normalizatio
alias normalize
    locale.normalize(${1:localename})
    # Returns a normalized locale code for the given locale name.  The returned localecode is formatted for use with setlocale().  If normalizatio
    # https://docs.python.org/2/library/locale.html
snippet locale_resetlocale category
abbr Sets the locale for category to the default setting.
alias resetlocale
    locale.resetlocale(${1:category})
    # Sets the locale for category to the default setting.
    # https://docs.python.org/2/library/locale.html
snippet locale_strcoll string1_string2
abbr Compares two strings according to the current LC_COLLATE setting. Asany other compare function, returns a negative, or a positive value, or 
alias strcoll
    locale.strcoll(${1:string1}, ${2:string2})
    # Compares two strings according to the current LC_COLLATE setting. Asany other compare function, returns a negative, or a positive value, or 
    # https://docs.python.org/2/library/locale.html
snippet locale_strxfrm string
abbr Transforms a string to one that can be used for the built-in functioncmp(), and still returns locale-aware results.  This function can be us
alias strxfrm
    locale.strxfrm(${1:string})
    # Transforms a string to one that can be used for the built-in functioncmp(), and still returns locale-aware results.  This function can be us
    # https://docs.python.org/2/library/locale.html
snippet locale_format format_val_grouping_monetary
abbr Formats a number val according to the current LC_NUMERIC setting.The format follows the conventions of the % operator.  For floating pointva
alias format
    locale.format(${1:format}, ${2:val}, ${3:grouping}, ${4:monetary})
    # Formats a number val according to the current LC_NUMERIC setting.The format follows the conventions of the % operator.  For floating pointva
    # https://docs.python.org/2/library/locale.html
snippet locale_format_string format_val_grouping
abbr Processes formatting specifiers as in format % val, but takes the currentlocale settings into account.
alias format_string
    locale.format_string(${1:format}, ${2:val}, ${3:grouping})
    # Processes formatting specifiers as in format % val, but takes the currentlocale settings into account.
    # https://docs.python.org/2/library/locale.html
snippet locale_currency val_symbol_grouping_international
abbr Formats a number val according to the current LC_MONETARY settings.
alias currency
    locale.currency(${1:val}, ${2:symbol}, ${3:grouping}, ${4:international})
    # Formats a number val according to the current LC_MONETARY settings.
    # https://docs.python.org/2/library/locale.html
snippet locale_str float
abbr Formats a floating point number using the same format as the built-in functionstr(float), but takes the decimal point into account.
alias str
    locale.str(${1:float})
    # Formats a floating point number using the same format as the built-in functionstr(float), but takes the decimal point into account.
    # https://docs.python.org/2/library/locale.html
snippet locale_atof string
abbr Converts a string to a floating point number, following the LC_NUMERICsettings.
alias atof
    locale.atof(${1:string})
    # Converts a string to a floating point number, following the LC_NUMERICsettings.
    # https://docs.python.org/2/library/locale.html
snippet locale_atoi string
abbr Converts a string to an integer, following the LC_NUMERIC conventions.
alias atoi
    locale.atoi(${1:string})
    # Converts a string to an integer, following the LC_NUMERIC conventions.
    # https://docs.python.org/2/library/locale.html

snippet logging_config_dictConfig config
abbr New in version 2.7.
alias dictConfig
    logging.config.dictConfig(${1:config})
    # New in version 2.7.
    # https://docs.python.org/2/library/logging.config.html
snippet logging_config_fileConfig fname_defaults=None_disable_existing_loggers=True
abbr Reads the logging configuration from a configparser-format filenamed fname. The format of the file should be as described inConfiguration fi
alias fileConfig
    logging.config.fileConfig(${1:fname}, ${2:defaults=None}, ${3:disable_existing_loggers=True})
    # Reads the logging configuration from a configparser-format filenamed fname. The format of the file should be as described inConfiguration fi
    # https://docs.python.org/2/library/logging.config.html
snippet logging_config_listen port=DEFAULT_LOGGING_CONFIG_PORT
abbr Starts up a socket server on the specified port, and listens for newconfigurations. If no port is specified, the module’s defaultDEFAULT_LOG
alias listen
    logging.config.listen(${1:port=DEFAULT_LOGGING_CONFIG_PORT})
    # Starts up a socket server on the specified port, and listens for newconfigurations. If no port is specified, the module’s defaultDEFAULT_LOG
    # https://docs.python.org/2/library/logging.config.html
snippet logging_config_stopListening 
abbr Stops the listening server which was created with a call to listen().This is typically called before calling join() on the return value from
alias stopListening
    logging.config.stopListening()
    # Stops the listening server which was created with a call to listen().This is typically called before calling join() on the return value from
    # https://docs.python.org/2/library/logging.config.html



snippet logging_getLogger name
abbr Return a logger with the specified name or, if no name is specified, return alogger which is the root logger of the hierarchy. If specified,
alias getLogger
    logging.getLogger(${1:name})
    # Return a logger with the specified name or, if no name is specified, return alogger which is the root logger of the hierarchy. If specified,
    # https://docs.python.org/2/library/logging.html
snippet logging_getLoggerClass 
abbr Return either the standard Logger class, or the last class passed tosetLoggerClass(). This function may be called from within a new classdef
alias getLoggerClass
    logging.getLoggerClass()
    # Return either the standard Logger class, or the last class passed tosetLoggerClass(). This function may be called from within a new classdef
    # https://docs.python.org/2/library/logging.html
snippet logging_debug msg_*args_**kwargs
abbr Logs a message with level DEBUG on the root logger. The msg is themessage format string, and the args are the arguments which are merged int
alias debug
    logging.debug(${1:msg}, ${2:*args}, ${3:**kwargs})
    # Logs a message with level DEBUG on the root logger. The msg is themessage format string, and the args are the arguments which are merged int
    # https://docs.python.org/2/library/logging.html
snippet logging_info msg_*args_**kwargs
abbr Logs a message with level INFO on the root logger. The arguments areinterpreted as for debug().
alias info
    logging.info(${1:msg}, ${2:*args}, ${3:**kwargs})
    # Logs a message with level INFO on the root logger. The arguments areinterpreted as for debug().
    # https://docs.python.org/2/library/logging.html
snippet logging_warning msg_*args_**kwargs
abbr Logs a message with level WARNING on the root logger. The arguments areinterpreted as for debug().
alias warning
    logging.warning(${1:msg}, ${2:*args}, ${3:**kwargs})
    # Logs a message with level WARNING on the root logger. The arguments areinterpreted as for debug().
    # https://docs.python.org/2/library/logging.html
snippet logging_error msg_*args_**kwargs
abbr Logs a message with level ERROR on the root logger. The arguments areinterpreted as for debug().
alias error
    logging.error(${1:msg}, ${2:*args}, ${3:**kwargs})
    # Logs a message with level ERROR on the root logger. The arguments areinterpreted as for debug().
    # https://docs.python.org/2/library/logging.html
snippet logging_critical msg_*args_**kwargs
abbr Logs a message with level CRITICAL on the root logger. The argumentsare interpreted as for debug().
alias critical
    logging.critical(${1:msg}, ${2:*args}, ${3:**kwargs})
    # Logs a message with level CRITICAL on the root logger. The argumentsare interpreted as for debug().
    # https://docs.python.org/2/library/logging.html
snippet logging_exception msg_*args_**kwargs
abbr Logs a message with level ERROR on the root logger. The arguments areinterpreted as for debug(). Exception info is added to the loggingmessa
alias exception
    logging.exception(${1:msg}, ${2:*args}, ${3:**kwargs})
    # Logs a message with level ERROR on the root logger. The arguments areinterpreted as for debug(). Exception info is added to the loggingmessa
    # https://docs.python.org/2/library/logging.html
snippet logging_log level_msg_*args_**kwargs
abbr Logs a message with level level on the root logger. The other arguments areinterpreted as for debug().
alias log
    logging.log(${1:level}, ${2:msg}, ${3:*args}, ${4:**kwargs})
    # Logs a message with level level on the root logger. The other arguments areinterpreted as for debug().
    # https://docs.python.org/2/library/logging.html
snippet logging_disable lvl
abbr Provides an overriding level lvl for all loggers which takes precedence overthe logger’s own level. When the need arises to temporarily thro
alias disable
    logging.disable(${1:lvl})
    # Provides an overriding level lvl for all loggers which takes precedence overthe logger’s own level. When the need arises to temporarily thro
    # https://docs.python.org/2/library/logging.html
snippet logging_addLevelName lvl_levelName
abbr Associates level lvl with text levelName in an internal dictionary, which isused to map numeric levels to a textual representation, for exam
alias addLevelName
    logging.addLevelName(${1:lvl}, ${2:levelName})
    # Associates level lvl with text levelName in an internal dictionary, which isused to map numeric levels to a textual representation, for exam
    # https://docs.python.org/2/library/logging.html
snippet logging_getLevelName lvl
abbr Returns the textual representation of logging level lvl. If the level is oneof the predefined levels CRITICAL, ERROR, WARNING,INFO or DEBUG 
alias getLevelName
    logging.getLevelName(${1:lvl})
    # Returns the textual representation of logging level lvl. If the level is oneof the predefined levels CRITICAL, ERROR, WARNING,INFO or DEBUG 
    # https://docs.python.org/2/library/logging.html
snippet logging_makeLogRecord attrdict
abbr Creates and returns a new LogRecord instance whose attributes aredefined by attrdict. This function is useful for taking a pickledLogRecord 
alias makeLogRecord
    logging.makeLogRecord(${1:attrdict})
    # Creates and returns a new LogRecord instance whose attributes aredefined by attrdict. This function is useful for taking a pickledLogRecord 
    # https://docs.python.org/2/library/logging.html
snippet logging_basicConfig **kwargs
abbr Does basic configuration for the logging system by creating aStreamHandler with a default Formatter and adding it to theroot logger. The fun
alias basicConfig
    logging.basicConfig(${1:**kwargs})
    # Does basic configuration for the logging system by creating aStreamHandler with a default Formatter and adding it to theroot logger. The fun
    # https://docs.python.org/2/library/logging.html
snippet logging_shutdown 
abbr Informs the logging system to perform an orderly shutdown by flushing andclosing all handlers. This should be called at application exit and
alias shutdown
    logging.shutdown()
    # Informs the logging system to perform an orderly shutdown by flushing andclosing all handlers. This should be called at application exit and
    # https://docs.python.org/2/library/logging.html
snippet logging_setLoggerClass klass
abbr Tells the logging system to use the class klass when instantiating a logger.The class should define __init__() such that only a name argumen
alias setLoggerClass
    logging.setLoggerClass(${1:klass})
    # Tells the logging system to use the class klass when instantiating a logger.The class should define __init__() such that only a name argumen
    # https://docs.python.org/2/library/logging.html
snippet logging_captureWarnings capture
abbr This function is used to turn the capture of warnings by logging on andoff.
alias captureWarnings
    logging.captureWarnings(${1:capture})
    # This function is used to turn the capture of warnings by logging on andoff.
    # https://docs.python.org/2/library/logging.html



snippet MacOS_GetErrorString errno
abbr Return the textual description of MacOS error code errno.
alias GetErrorString
    MacOS.GetErrorString(${1:errno})
    # Return the textual description of MacOS error code errno.
    # https://docs.python.org/2/library/macos.html
snippet MacOS_DebugStr message_object
abbr On Mac OS X the string is simply printed to stderr (on older Mac OS systems moreelaborate functionality was available), but it provides a co
alias DebugStr
    MacOS.DebugStr(${1:message}, ${2:object})
    # On Mac OS X the string is simply printed to stderr (on older Mac OS systems moreelaborate functionality was available), but it provides a co
    # https://docs.python.org/2/library/macos.html
snippet MacOS_SysBeep 
abbr Ring the bell.
alias SysBeep
    MacOS.SysBeep()
    # Ring the bell.
    # https://docs.python.org/2/library/macos.html
snippet MacOS_GetTicks 
abbr Get the number of clock ticks (1/60th of a second) since system boot.
alias GetTicks
    MacOS.GetTicks()
    # Get the number of clock ticks (1/60th of a second) since system boot.
    # https://docs.python.org/2/library/macos.html
snippet MacOS_GetCreatorAndType file
abbr Return the file creator and file type as two four-character strings. The fileparameter can be a pathname or an FSSpec or  FSRef object.
alias GetCreatorAndType
    MacOS.GetCreatorAndType(${1:file})
    # Return the file creator and file type as two four-character strings. The fileparameter can be a pathname or an FSSpec or  FSRef object.
    # https://docs.python.org/2/library/macos.html
snippet MacOS_SetCreatorAndType file_creator_type
abbr Set the file creator and file type. The file parameter can be a pathname or anFSSpec or  FSRef object. creator and type must be four charact
alias SetCreatorAndType
    MacOS.SetCreatorAndType(${1:file}, ${2:creator}, ${3:type})
    # Set the file creator and file type. The file parameter can be a pathname or anFSSpec or  FSRef object. creator and type must be four charact
    # https://docs.python.org/2/library/macos.html
snippet MacOS_openrf name_mode
abbr Open the resource fork of a file. Arguments are the same as for the built-infunction open(). The object returned has file-like semantics, bu
alias openrf
    MacOS.openrf(${1:name}, ${2:mode})
    # Open the resource fork of a file. Arguments are the same as for the built-infunction open(). The object returned has file-like semantics, bu
    # https://docs.python.org/2/library/macos.html
snippet MacOS_WMAvailable 
abbr Checks whether the current process has access to the window manager. The methodwill return False if the window manager is not available, for
alias WMAvailable
    MacOS.WMAvailable()
    # Checks whether the current process has access to the window manager. The methodwill return False if the window manager is not available, for
    # https://docs.python.org/2/library/macos.html
snippet MacOS_splash resourceid
abbr Opens a splash screen by resource id. Use resourceid 0 to closethe splash screen.
alias splash
    MacOS.splash(${1:resourceid})
    # Opens a splash screen by resource id. Use resourceid 0 to closethe splash screen.
    # https://docs.python.org/2/library/macos.html



snippet macostools_copy src_dst_createpath_copytimes
abbr Copy file src to dst.  If createpath is non-zero the folders leading todst are created if necessary. The method copies data and resource for
alias copy
    macostools.copy(${1:src}, ${2:dst}, ${3:createpath}, ${4:copytimes})
    # Copy file src to dst.  If createpath is non-zero the folders leading todst are created if necessary. The method copies data and resource for
    # https://docs.python.org/2/library/macostools.html
snippet macostools_copytree src_dst
abbr Recursively copy a file tree from src to dst, creating folders as needed.src and dst should be specified as pathnames.
alias copytree
    macostools.copytree(${1:src}, ${2:dst})
    # Recursively copy a file tree from src to dst, creating folders as needed.src and dst should be specified as pathnames.
    # https://docs.python.org/2/library/macostools.html
snippet macostools_mkalias src_dst
abbr Create a finder alias dst pointing to src.
alias mkalias
    macostools.mkalias(${1:src}, ${2:dst})
    # Create a finder alias dst pointing to src.
    # https://docs.python.org/2/library/macostools.html
snippet macostools_touched dst
abbr Tell the finder that some bits of finder-information such as creator or type forfile dst has changed. The file can be specified by pathname 
alias touched
    macostools.touched(${1:dst})
    # Tell the finder that some bits of finder-information such as creator or type forfile dst has changed. The file can be specified by pathname 
    # https://docs.python.org/2/library/macostools.html
snippet findertools_launch file
abbr Tell the finder to launch file. What launching means depends on the file:applications are started, folders are opened and documents are open
alias launch
    findertools.launch(${1:file})
    # Tell the finder to launch file. What launching means depends on the file:applications are started, folders are opened and documents are open
    # https://docs.python.org/2/library/macostools.html
snippet findertools_Print file
abbr Tell the finder to print a file. The behaviour is identical to selecting thefile and using the print command in the finder’s file menu.
alias Print
    findertools.Print(${1:file})
    # Tell the finder to print a file. The behaviour is identical to selecting thefile and using the print command in the finder’s file menu.
    # https://docs.python.org/2/library/macostools.html
snippet findertools_copy file_destdir
abbr Tell the finder to copy a file or folder file to folder destdir. Thefunction returns an Alias object pointing to the new file.
alias copy
    findertools.copy(${1:file}, ${2:destdir})
    # Tell the finder to copy a file or folder file to folder destdir. Thefunction returns an Alias object pointing to the new file.
    # https://docs.python.org/2/library/macostools.html
snippet findertools_move file_destdir
abbr Tell the finder to move a file or folder file to folder destdir. Thefunction returns an Alias object pointing to the new file.
alias move
    findertools.move(${1:file}, ${2:destdir})
    # Tell the finder to move a file or folder file to folder destdir. Thefunction returns an Alias object pointing to the new file.
    # https://docs.python.org/2/library/macostools.html
snippet findertools_sleep 
abbr Tell the finder to put the Macintosh to sleep, if your machine supports it.
alias sleep
    findertools.sleep()
    # Tell the finder to put the Macintosh to sleep, if your machine supports it.
    # https://docs.python.org/2/library/macostools.html
snippet findertools_restart 
abbr Tell the finder to perform an orderly restart of the machine.
alias restart
    findertools.restart()
    # Tell the finder to perform an orderly restart of the machine.
    # https://docs.python.org/2/library/macostools.html
snippet findertools_shutdown 
abbr Tell the finder to perform an orderly shutdown of the machine.
alias shutdown
    findertools.shutdown()
    # Tell the finder to perform an orderly shutdown of the machine.
    # https://docs.python.org/2/library/macostools.html





snippet mailcap_findmatch caps_MIMEtype_key_filename_plist
abbr Return a 2-tuple; the first element is a string containing the command line tobe executed (which can be passed to os.system()), and the seco
alias findmatch
    mailcap.findmatch(${1:caps}, ${2:MIMEtype}, ${3:key}, ${4:filename}, ${5:plist})
    # Return a 2-tuple; the first element is a string containing the command line tobe executed (which can be passed to os.system()), and the seco
    # https://docs.python.org/2/library/mailcap.html
snippet mailcap_getcaps 
abbr Returns a dictionary mapping MIME types to a list of mailcap file entries. Thisdictionary must be passed to the findmatch() function.  An en
alias getcaps
    mailcap.getcaps()
    # Returns a dictionary mapping MIME types to a list of mailcap file entries. Thisdictionary must be passed to the findmatch() function.  An en
    # https://docs.python.org/2/library/mailcap.html



snippet marshal_dump value_file_version
abbr Write the value on the open file.  The value must be a supported type.  Thefile must be a open file object such as sys.stdout or returned by
alias dump
    marshal.dump(${1:value}, ${2:file}, ${3:version})
    # Write the value on the open file.  The value must be a supported type.  Thefile must be a open file object such as sys.stdout or returned by
    # https://docs.python.org/2/library/marshal.html
snippet marshal_load file
abbr Read one value from the open file and return it.  If no valid value is read(e.g. because the data has a different Python version’s incompati
alias load
    marshal.load(${1:file})
    # Read one value from the open file and return it.  If no valid value is read(e.g. because the data has a different Python version’s incompati
    # https://docs.python.org/2/library/marshal.html
snippet marshal_dumps value_version
abbr Return the string that would be written to a file by dump(value, file).  Thevalue must be a supported type.  Raise a ValueError exception if
alias dumps
    marshal.dumps(${1:value}, ${2:version})
    # Return the string that would be written to a file by dump(value, file).  Thevalue must be a supported type.  Raise a ValueError exception if
    # https://docs.python.org/2/library/marshal.html
snippet marshal_loads string
abbr Convert the string to a value.  If no valid value is found, raiseEOFError, ValueError or TypeError.  Extra characters in thestring are ignor
alias loads
    marshal.loads(${1:string})
    # Convert the string to a value.  If no valid value is found, raiseEOFError, ValueError or TypeError.  Extra characters in thestring are ignor
    # https://docs.python.org/2/library/marshal.html

snippet math_ceil x
abbr Return the ceiling of x as a float, the smallest integer value greater than orequal to x.
alias ceil
    math.ceil(${1:x})
    # Return the ceiling of x as a float, the smallest integer value greater than orequal to x.
    # https://docs.python.org/2/library/math.html
snippet math_copysign x_y
abbr Return x with the sign of y.  On a platform that supportssigned zeros, copysign(1.0, -0.0) returns -1.0.
alias copysign
    math.copysign(${1:x}, ${2:y})
    # Return x with the sign of y.  On a platform that supportssigned zeros, copysign(1.0, -0.0) returns -1.0.
    # https://docs.python.org/2/library/math.html
snippet math_fabs x
abbr Return the absolute value of x.
alias fabs
    math.fabs(${1:x})
    # Return the absolute value of x.
    # https://docs.python.org/2/library/math.html
snippet math_factorial x
abbr Return x factorial.  Raises ValueError if x is not integral oris negative.
alias factorial
    math.factorial(${1:x})
    # Return x factorial.  Raises ValueError if x is not integral oris negative.
    # https://docs.python.org/2/library/math.html
snippet math_floor x
abbr Return the floor of x as a float, the largest integer value less than or equalto x.
alias floor
    math.floor(${1:x})
    # Return the floor of x as a float, the largest integer value less than or equalto x.
    # https://docs.python.org/2/library/math.html
snippet math_fmod x_y
abbr Return fmod(x, y), as defined by the platform C library. Note that thePython expression x % y may not return the same result.  The intent of
alias fmod
    math.fmod(${1:x}, ${2:y})
    # Return fmod(x, y), as defined by the platform C library. Note that thePython expression x % y may not return the same result.  The intent of
    # https://docs.python.org/2/library/math.html
snippet math_frexp x
abbr Return the mantissa and exponent of x as the pair (m, e).  m is a floatand e is an integer such that x == m * 2**e exactly. If x is zero,ret
alias frexp
    math.frexp(${1:x})
    # Return the mantissa and exponent of x as the pair (m, e).  m is a floatand e is an integer such that x == m * 2**e exactly. If x is zero,ret
    # https://docs.python.org/2/library/math.html
snippet math_fsum iterable
abbr Return an accurate floating point sum of values in the iterable.  Avoidsloss of precision by tracking multiple intermediate partial sums:
alias fsum
    math.fsum(${1:iterable})
    # Return an accurate floating point sum of values in the iterable.  Avoidsloss of precision by tracking multiple intermediate partial sums:
    # https://docs.python.org/2/library/math.html
snippet math_isinf x
abbr Check if the float x is positive or negative infinity.
alias isinf
    math.isinf(${1:x})
    # Check if the float x is positive or negative infinity.
    # https://docs.python.org/2/library/math.html
snippet math_isnan x
abbr Check if the float x is a NaN (not a number).  For more informationon NaNs, see the IEEE 754 standards.
alias isnan
    math.isnan(${1:x})
    # Check if the float x is a NaN (not a number).  For more informationon NaNs, see the IEEE 754 standards.
    # https://docs.python.org/2/library/math.html
snippet math_ldexp x_i
abbr Return x * (2**i).  This is essentially the inverse of functionfrexp().
alias ldexp
    math.ldexp(${1:x}, ${2:i})
    # Return x * (2**i).  This is essentially the inverse of functionfrexp().
    # https://docs.python.org/2/library/math.html
snippet math_modf x
abbr Return the fractional and integer parts of x.  Both results carry the signof x and are floats.
alias modf
    math.modf(${1:x})
    # Return the fractional and integer parts of x.  Both results carry the signof x and are floats.
    # https://docs.python.org/2/library/math.html
snippet math_trunc x
abbr Return the Real value x truncated to anIntegral (usually a long integer).  Uses the__trunc__ method.
alias trunc
    math.trunc(${1:x})
    # Return the Real value x truncated to anIntegral (usually a long integer).  Uses the__trunc__ method.
    # https://docs.python.org/2/library/math.html
snippet math_exp x
abbr Return e**x.
alias exp
    math.exp(${1:x})
    # Return e**x.
    # https://docs.python.org/2/library/math.html
snippet math_expm1 x
abbr Return e**x - 1.  For small floats x, the subtraction inexp(x) - 1 can result in a significant loss of precision; theexpm1() function provid
alias expm1
    math.expm1(${1:x})
    # Return e**x - 1.  For small floats x, the subtraction inexp(x) - 1 can result in a significant loss of precision; theexpm1() function provid
    # https://docs.python.org/2/library/math.html
snippet math_log x_base
abbr With one argument, return the natural logarithm of x (to base e).
alias log
    math.log(${1:x}, ${2:base})
    # With one argument, return the natural logarithm of x (to base e).
    # https://docs.python.org/2/library/math.html
snippet math_log1p x
abbr Return the natural logarithm of 1+x (base e). Theresult is calculated in a way which is accurate for x near zero.
alias log1p
    math.log1p(${1:x})
    # Return the natural logarithm of 1+x (base e). Theresult is calculated in a way which is accurate for x near zero.
    # https://docs.python.org/2/library/math.html
snippet math_log10 x
abbr Return the base-10 logarithm of x.  This is usually more accuratethan log(x, 10).
alias log10
    math.log10(${1:x})
    # Return the base-10 logarithm of x.  This is usually more accuratethan log(x, 10).
    # https://docs.python.org/2/library/math.html
snippet math_pow x_y
abbr Return x raised to the power y.  Exceptional cases followAnnex ‘F’ of the C99 standard as far as possible.  In particular,pow(1.0, x) and po
alias pow
    math.pow(${1:x}, ${2:y})
    # Return x raised to the power y.  Exceptional cases followAnnex ‘F’ of the C99 standard as far as possible.  In particular,pow(1.0, x) and po
    # https://docs.python.org/2/library/math.html
snippet math_sqrt x
abbr Return the square root of x.
alias sqrt
    math.sqrt(${1:x})
    # Return the square root of x.
    # https://docs.python.org/2/library/math.html
snippet math_acos x
abbr Return the arc cosine of x, in radians.
alias acos
    math.acos(${1:x})
    # Return the arc cosine of x, in radians.
    # https://docs.python.org/2/library/math.html
snippet math_asin x
abbr Return the arc sine of x, in radians.
alias asin
    math.asin(${1:x})
    # Return the arc sine of x, in radians.
    # https://docs.python.org/2/library/math.html
snippet math_atan x
abbr Return the arc tangent of x, in radians.
alias atan
    math.atan(${1:x})
    # Return the arc tangent of x, in radians.
    # https://docs.python.org/2/library/math.html
snippet math_atan2 y_x
abbr Return atan(y / x), in radians. The result is between -pi and pi.The vector in the plane from the origin to point (x, y) makes this anglewit
alias atan2
    math.atan2(${1:y}, ${2:x})
    # Return atan(y / x), in radians. The result is between -pi and pi.The vector in the plane from the origin to point (x, y) makes this anglewit
    # https://docs.python.org/2/library/math.html
snippet math_cos x
abbr Return the cosine of x radians.
alias cos
    math.cos(${1:x})
    # Return the cosine of x radians.
    # https://docs.python.org/2/library/math.html
snippet math_hypot x_y
abbr Return the Euclidean norm, sqrt(x*x + y*y). This is the length of the vectorfrom the origin to point (x, y).
alias hypot
    math.hypot(${1:x}, ${2:y})
    # Return the Euclidean norm, sqrt(x*x + y*y). This is the length of the vectorfrom the origin to point (x, y).
    # https://docs.python.org/2/library/math.html
snippet math_sin x
abbr Return the sine of x radians.
alias sin
    math.sin(${1:x})
    # Return the sine of x radians.
    # https://docs.python.org/2/library/math.html
snippet math_tan x
abbr Return the tangent of x radians.
alias tan
    math.tan(${1:x})
    # Return the tangent of x radians.
    # https://docs.python.org/2/library/math.html
snippet math_degrees x
abbr Converts angle x from radians to degrees.
alias degrees
    math.degrees(${1:x})
    # Converts angle x from radians to degrees.
    # https://docs.python.org/2/library/math.html
snippet math_radians x
abbr Converts angle x from degrees to radians.
alias radians
    math.radians(${1:x})
    # Converts angle x from degrees to radians.
    # https://docs.python.org/2/library/math.html
snippet math_acosh x
abbr Return the inverse hyperbolic cosine of x.
alias acosh
    math.acosh(${1:x})
    # Return the inverse hyperbolic cosine of x.
    # https://docs.python.org/2/library/math.html
snippet math_asinh x
abbr Return the inverse hyperbolic sine of x.
alias asinh
    math.asinh(${1:x})
    # Return the inverse hyperbolic sine of x.
    # https://docs.python.org/2/library/math.html
snippet math_atanh x
abbr Return the inverse hyperbolic tangent of x.
alias atanh
    math.atanh(${1:x})
    # Return the inverse hyperbolic tangent of x.
    # https://docs.python.org/2/library/math.html
snippet math_cosh x
abbr Return the hyperbolic cosine of x.
alias cosh
    math.cosh(${1:x})
    # Return the hyperbolic cosine of x.
    # https://docs.python.org/2/library/math.html
snippet math_sinh x
abbr Return the hyperbolic sine of x.
alias sinh
    math.sinh(${1:x})
    # Return the hyperbolic sine of x.
    # https://docs.python.org/2/library/math.html
snippet math_tanh x
abbr Return the hyperbolic tangent of x.
alias tanh
    math.tanh(${1:x})
    # Return the hyperbolic tangent of x.
    # https://docs.python.org/2/library/math.html
snippet math_erf x
abbr Return the error function at x.
alias erf
    math.erf(${1:x})
    # Return the error function at x.
    # https://docs.python.org/2/library/math.html
snippet math_erfc x
abbr Return the complementary error function at x.
alias erfc
    math.erfc(${1:x})
    # Return the complementary error function at x.
    # https://docs.python.org/2/library/math.html
snippet math_gamma x
abbr Return the Gamma function at x.
alias gamma
    math.gamma(${1:x})
    # Return the Gamma function at x.
    # https://docs.python.org/2/library/math.html
snippet math_lgamma x
abbr Return the natural logarithm of the absolute value of the Gammafunction at x.
alias lgamma
    math.lgamma(${1:x})
    # Return the natural logarithm of the absolute value of the Gammafunction at x.
    # https://docs.python.org/2/library/math.html

snippet md5_new arg
abbr Return a new md5 object.  If arg is present, the method call update(arg)is made.
alias new
    md5.new(${1:arg})
    # Return a new md5 object.  If arg is present, the method call update(arg)is made.
    # https://docs.python.org/2/library/md5.html
snippet md5_md5 arg
abbr For backward compatibility reasons, this is an alternative name for thenew() function.
alias md5
    md5.md5(${1:arg})
    # For backward compatibility reasons, this is an alternative name for thenew() function.
    # https://docs.python.org/2/library/md5.html



snippet mimetools_choose_boundary 
abbr Return a unique string that has a high likelihood of being usable as a partboundary.  The string has the form 'hostipaddr.uid.pid.timestamp.
alias choose_boundary
    mimetools.choose_boundary()
    # Return a unique string that has a high likelihood of being usable as a partboundary.  The string has the form 'hostipaddr.uid.pid.timestamp.
    # https://docs.python.org/2/library/mimetools.html
snippet mimetools_decode input_output_encoding
abbr Read data encoded using the allowed MIME encoding from open file objectinput and write the decoded data to open file object output.  Valid v
alias decode
    mimetools.decode(${1:input}, ${2:output}, ${3:encoding})
    # Read data encoded using the allowed MIME encoding from open file objectinput and write the decoded data to open file object output.  Valid v
    # https://docs.python.org/2/library/mimetools.html
snippet mimetools_encode input_output_encoding
abbr Read data from open file object input and write it encoded using the allowedMIME encoding to open file object output. Valid values for encod
alias encode
    mimetools.encode(${1:input}, ${2:output}, ${3:encoding})
    # Read data from open file object input and write it encoded using the allowedMIME encoding to open file object output. Valid values for encod
    # https://docs.python.org/2/library/mimetools.html
snippet mimetools_copyliteral input_output
abbr Read lines from open file input until EOF and write them to open fileoutput.
alias copyliteral
    mimetools.copyliteral(${1:input}, ${2:output})
    # Read lines from open file input until EOF and write them to open fileoutput.
    # https://docs.python.org/2/library/mimetools.html
snippet mimetools_copybinary input_output
abbr Read blocks until EOF from open file input and write them to open fileoutput.  The block size is currently fixed at 8192.
alias copybinary
    mimetools.copybinary(${1:input}, ${2:output})
    # Read blocks until EOF from open file input and write them to open fileoutput.  The block size is currently fixed at 8192.
    # https://docs.python.org/2/library/mimetools.html

snippet mimetypes_guess_type url_strict=True
abbr Guess the type of a file based on its filename or URL, given by url.  Thereturn value is a tuple (type, encoding) where type is None if thet
alias guess_type
    mimetypes.guess_type(${1:url}, ${2:strict=True})
    # Guess the type of a file based on its filename or URL, given by url.  Thereturn value is a tuple (type, encoding) where type is None if thet
    # https://docs.python.org/2/library/mimetypes.html
snippet mimetypes_guess_all_extensions type_strict=True
abbr Guess the extensions for a file based on its MIME type, given by type. Thereturn value is a list of strings giving all possible filename ext
alias guess_all_extensions
    mimetypes.guess_all_extensions(${1:type}, ${2:strict=True})
    # Guess the extensions for a file based on its MIME type, given by type. Thereturn value is a list of strings giving all possible filename ext
    # https://docs.python.org/2/library/mimetypes.html
snippet mimetypes_guess_extension type_strict=True
abbr Guess the extension for a file based on its MIME type, given by type. Thereturn value is a string giving a filename extension, including the
alias guess_extension
    mimetypes.guess_extension(${1:type}, ${2:strict=True})
    # Guess the extension for a file based on its MIME type, given by type. Thereturn value is a string giving a filename extension, including the
    # https://docs.python.org/2/library/mimetypes.html
snippet mimetypes_init files=None
abbr Initialize the internal data structures.  If given, files must be a sequenceof file names which should be used to augment the default type m
alias init
    mimetypes.init(${1:files=None})
    # Initialize the internal data structures.  If given, files must be a sequenceof file names which should be used to augment the default type m
    # https://docs.python.org/2/library/mimetypes.html
snippet mimetypes_read_mime_types filename
abbr Load the type map given in the file filename, if it exists.  The type map isreturned as a dictionary mapping filename extensions, including 
alias read_mime_types
    mimetypes.read_mime_types(${1:filename})
    # Load the type map given in the file filename, if it exists.  The type map isreturned as a dictionary mapping filename extensions, including 
    # https://docs.python.org/2/library/mimetypes.html
snippet mimetypes_add_type type_ext_strict=True
abbr Add a mapping from the MIME type type to the extension ext. When theextension is already known, the new type will replace the old one. When 
alias add_type
    mimetypes.add_type(${1:type}, ${2:ext}, ${3:strict=True})
    # Add a mapping from the MIME type type to the extension ext. When theextension is already known, the new type will replace the old one. When 
    # https://docs.python.org/2/library/mimetypes.html



snippet mimify_mimify infile_outfile
abbr Copy the message in infile to outfile, converting parts to quoted-printableand adding MIME mail headers when necessary. infile and outfile c
alias mimify
    mimify.mimify(${1:infile}, ${2:outfile})
    # Copy the message in infile to outfile, converting parts to quoted-printableand adding MIME mail headers when necessary. infile and outfile c
    # https://docs.python.org/2/library/mimify.html
snippet mimify_unmimify infile_outfile_decode_base64
abbr Copy the message in infile to outfile, decoding all quoted-printable parts.infile and outfile can be file objects (actually, any object that
alias unmimify
    mimify.unmimify(${1:infile}, ${2:outfile}, ${3:decode_base64})
    # Copy the message in infile to outfile, decoding all quoted-printable parts.infile and outfile can be file objects (actually, any object that
    # https://docs.python.org/2/library/mimify.html
snippet mimify_mime_decode_header line
abbr Return a decoded version of the encoded header line in line. This onlysupports the ISO 8859-1 charset (Latin-1).
alias mime_decode_header
    mimify.mime_decode_header(${1:line})
    # Return a decoded version of the encoded header line in line. This onlysupports the ISO 8859-1 charset (Latin-1).
    # https://docs.python.org/2/library/mimify.html
snippet mimify_mime_encode_header line
abbr Return a MIME-encoded version of the header line in line.
alias mime_encode_header
    mimify.mime_encode_header(${1:line})
    # Return a MIME-encoded version of the header line in line.
    # https://docs.python.org/2/library/mimify.html









snippet modulefinder_AddPackagePath pkg_name_path
abbr Record that the package named pkg_name can be found in the specified path.
alias AddPackagePath
    modulefinder.AddPackagePath(${1:pkg_name}, ${2:path})
    # Record that the package named pkg_name can be found in the specified path.
    # https://docs.python.org/2/library/modulefinder.html
snippet modulefinder_ReplacePackage oldname_newname
abbr Allows specifying that the module named oldname is in fact the package namednewname.  The most common usage would be  to handle how the _xml
alias ReplacePackage
    modulefinder.ReplacePackage(${1:oldname}, ${2:newname})
    # Allows specifying that the module named oldname is in fact the package namednewname.  The most common usage would be  to handle how the _xml
    # https://docs.python.org/2/library/modulefinder.html



snippet msilib_FCICreate cabname_files
abbr Create a new CAB file named cabname. files must be a list of tuples, eachcontaining the name of the file on disk, and the name of the file i
alias FCICreate
    msilib.FCICreate(${1:cabname}, ${2:files})
    # Create a new CAB file named cabname. files must be a list of tuples, eachcontaining the name of the file on disk, and the name of the file i
    # https://docs.python.org/2/library/msilib.html
snippet msilib_UuidCreate 
abbr Return the string representation of a new unique identifier. This wraps theWindows API functions UuidCreate() and UuidToString().
alias UuidCreate
    msilib.UuidCreate()
    # Return the string representation of a new unique identifier. This wraps theWindows API functions UuidCreate() and UuidToString().
    # https://docs.python.org/2/library/msilib.html
snippet msilib_OpenDatabase path_persist
abbr Return a new database object by calling MsiOpenDatabase.   path is the filename of the MSI file; persist can be one of the constantsMSIDBOPE
alias OpenDatabase
    msilib.OpenDatabase(${1:path}, ${2:persist})
    # Return a new database object by calling MsiOpenDatabase.   path is the filename of the MSI file; persist can be one of the constantsMSIDBOPE
    # https://docs.python.org/2/library/msilib.html
snippet msilib_CreateRecord count
abbr Return a new record object by calling MSICreateRecord(). count is thenumber of fields of the record.
alias CreateRecord
    msilib.CreateRecord(${1:count})
    # Return a new record object by calling MSICreateRecord(). count is thenumber of fields of the record.
    # https://docs.python.org/2/library/msilib.html
snippet msilib_init_database name_schema_ProductName_ProductCode_ProductVersion_Manufacturer
abbr Create and return a new database name, initialize it with schema, and setthe properties ProductName, ProductCode, ProductVersion, andManufac
alias init_database
    msilib.init_database(${1:name}, ${2:schema}, ${3:ProductName}, ${4:ProductCode}, ${5:ProductVersion}, ${6:Manufacturer})
    # Create and return a new database name, initialize it with schema, and setthe properties ProductName, ProductCode, ProductVersion, andManufac
    # https://docs.python.org/2/library/msilib.html
snippet msilib_add_data database_table_records
abbr Add all records to the table named table in database.
alias add_data
    msilib.add_data(${1:database}, ${2:table}, ${3:records})
    # Add all records to the table named table in database.
    # https://docs.python.org/2/library/msilib.html
snippet msilib_add_tables database_module
abbr Add all table content from module to database. module must contain anattribute tables listing all tables for which content should be added, 
alias add_tables
    msilib.add_tables(${1:database}, ${2:module})
    # Add all table content from module to database. module must contain anattribute tables listing all tables for which content should be added, 
    # https://docs.python.org/2/library/msilib.html
snippet msilib_add_stream database_name_path
abbr Add the file path into the _Stream table of database, with the streamname name.
alias add_stream
    msilib.add_stream(${1:database}, ${2:name}, ${3:path})
    # Add the file path into the _Stream table of database, with the streamname name.
    # https://docs.python.org/2/library/msilib.html
snippet msilib_gen_uuid 
abbr Return a new UUID, in the format that MSI typically requires (i.e. in curlybraces, and with all hexdigits in upper-case).
alias gen_uuid
    msilib.gen_uuid()
    # Return a new UUID, in the format that MSI typically requires (i.e. in curlybraces, and with all hexdigits in upper-case).
    # https://docs.python.org/2/library/msilib.html

snippet msvcrt_locking fd_mode_nbytes
abbr Lock part of a file based on file descriptor fd from the C runtime.  RaisesIOError on failure.  The locked region of the file extends from t
alias locking
    msvcrt.locking(${1:fd}, ${2:mode}, ${3:nbytes})
    # Lock part of a file based on file descriptor fd from the C runtime.  RaisesIOError on failure.  The locked region of the file extends from t
    # https://docs.python.org/2/library/msvcrt.html
snippet msvcrt_setmode fd_flags
abbr Set the line-end translation mode for the file descriptor fd. To set it totext mode, flags should be os.O_TEXT; for binary, it should beos.O
alias setmode
    msvcrt.setmode(${1:fd}, ${2:flags})
    # Set the line-end translation mode for the file descriptor fd. To set it totext mode, flags should be os.O_TEXT; for binary, it should beos.O
    # https://docs.python.org/2/library/msvcrt.html
snippet msvcrt_open_osfhandle handle_flags
abbr Create a C runtime file descriptor from the file handle handle.  The flagsparameter should be a bitwise OR of os.O_APPEND, os.O_RDONLY,and o
alias open_osfhandle
    msvcrt.open_osfhandle(${1:handle}, ${2:flags})
    # Create a C runtime file descriptor from the file handle handle.  The flagsparameter should be a bitwise OR of os.O_APPEND, os.O_RDONLY,and o
    # https://docs.python.org/2/library/msvcrt.html
snippet msvcrt_get_osfhandle fd
abbr Return the file handle for the file descriptor fd.  Raises IOError iffd is not recognized.
alias get_osfhandle
    msvcrt.get_osfhandle(${1:fd})
    # Return the file handle for the file descriptor fd.  Raises IOError iffd is not recognized.
    # https://docs.python.org/2/library/msvcrt.html
snippet msvcrt_kbhit 
abbr Return true if a keypress is waiting to be read.
alias kbhit
    msvcrt.kbhit()
    # Return true if a keypress is waiting to be read.
    # https://docs.python.org/2/library/msvcrt.html
snippet msvcrt_getch 
abbr Read a keypress and return the resulting character.  Nothing is echoed to theconsole.  This call will block if a keypress is not already ava
alias getch
    msvcrt.getch()
    # Read a keypress and return the resulting character.  Nothing is echoed to theconsole.  This call will block if a keypress is not already ava
    # https://docs.python.org/2/library/msvcrt.html
snippet msvcrt_getwch 
abbr Wide char variant of getch(), returning a Unicode value.
alias getwch
    msvcrt.getwch()
    # Wide char variant of getch(), returning a Unicode value.
    # https://docs.python.org/2/library/msvcrt.html
snippet msvcrt_getche 
abbr Similar to getch(), but the keypress will be echoed if it  represents aprintable character.
alias getche
    msvcrt.getche()
    # Similar to getch(), but the keypress will be echoed if it  represents aprintable character.
    # https://docs.python.org/2/library/msvcrt.html
snippet msvcrt_getwche 
abbr Wide char variant of getche(), returning a Unicode value.
alias getwche
    msvcrt.getwche()
    # Wide char variant of getche(), returning a Unicode value.
    # https://docs.python.org/2/library/msvcrt.html
snippet msvcrt_putch char
abbr Print the character char to the console without buffering.
alias putch
    msvcrt.putch(${1:char})
    # Print the character char to the console without buffering.
    # https://docs.python.org/2/library/msvcrt.html
snippet msvcrt_putwch unicode_char
abbr Wide char variant of putch(), accepting a Unicode value.
alias putwch
    msvcrt.putwch(${1:unicode_char})
    # Wide char variant of putch(), accepting a Unicode value.
    # https://docs.python.org/2/library/msvcrt.html
snippet msvcrt_ungetch char
abbr Cause the character char to be “pushed back” into the console buffer; it willbe the next character read by getch() or getche().
alias ungetch
    msvcrt.ungetch(${1:char})
    # Cause the character char to be “pushed back” into the console buffer; it willbe the next character read by getch() or getche().
    # https://docs.python.org/2/library/msvcrt.html
snippet msvcrt_ungetwch unicode_char
abbr Wide char variant of ungetch(), accepting a Unicode value.
alias ungetwch
    msvcrt.ungetwch(${1:unicode_char})
    # Wide char variant of ungetch(), accepting a Unicode value.
    # https://docs.python.org/2/library/msvcrt.html
snippet msvcrt_heapmin 
abbr Force the malloc() heap to clean itself up and return unused blocks tothe operating system.  On failure, this raises IOError.
alias heapmin
    msvcrt.heapmin()
    # Force the malloc() heap to clean itself up and return unused blocks tothe operating system.  On failure, this raises IOError.
    # https://docs.python.org/2/library/msvcrt.html



snippet multiprocessing_Pipe duplex
abbr Returns a pair (conn1, conn2) of Connection objects representingthe ends of a pipe.
alias Pipe
    multiprocessing.Pipe(${1:duplex})
    # Returns a pair (conn1, conn2) of Connection objects representingthe ends of a pipe.
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_active_children 
abbr Return list of all live children of the current process.
alias active_children
    multiprocessing.active_children()
    # Return list of all live children of the current process.
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_cpu_count 
abbr Return the number of CPUs in the system.  May raiseNotImplementedError.
alias cpu_count
    multiprocessing.cpu_count()
    # Return the number of CPUs in the system.  May raiseNotImplementedError.
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_current_process 
abbr Return the Process object corresponding to the current process.
alias current_process
    multiprocessing.current_process()
    # Return the Process object corresponding to the current process.
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_freeze_support 
abbr Add support for when a program which uses multiprocessing has beenfrozen to produce a Windows executable.  (Has been tested with py2exe,PyIn
alias freeze_support
    multiprocessing.freeze_support()
    # Add support for when a program which uses multiprocessing has beenfrozen to produce a Windows executable.  (Has been tested with py2exe,PyIn
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_set_executable 
abbr Sets the path of the Python interpreter to use when starting a child process.(By default sys.executable is used).  Embedders will probably n
alias set_executable
    multiprocessing.set_executable()
    # Sets the path of the Python interpreter to use when starting a child process.(By default sys.executable is used).  Embedders will probably n
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_Value typecode_or_type_*args_lock
abbr Return a ctypes object allocated from shared memory.  By default thereturn value is actually a synchronized wrapper for the object.
alias Value
    multiprocessing.Value(${1:typecode_or_type}, ${2:*args}, ${3:lock})
    # Return a ctypes object allocated from shared memory.  By default thereturn value is actually a synchronized wrapper for the object.
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_Array typecode_or_type_size_or_initializer_*_lock=True
abbr Return a ctypes array allocated from shared memory.  By default the returnvalue is actually a synchronized wrapper for the array.
alias Array
    multiprocessing.Array(${1:typecode_or_type}, ${2:size_or_initializer}, ${3:*}, ${4:lock=True})
    # Return a ctypes array allocated from shared memory.  By default the returnvalue is actually a synchronized wrapper for the array.
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_sharedctypes_RawArray typecode_or_type_size_or_initializer
abbr Return a ctypes array allocated from shared memory.
alias RawArray
    multiprocessing.sharedctypes.RawArray(${1:typecode_or_type}, ${2:size_or_initializer})
    # Return a ctypes array allocated from shared memory.
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_sharedctypes_RawValue typecode_or_type_*args
abbr Return a ctypes object allocated from shared memory.
alias RawValue
    multiprocessing.sharedctypes.RawValue(${1:typecode_or_type}, ${2:*args})
    # Return a ctypes object allocated from shared memory.
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_sharedctypes_Array typecode_or_type_size_or_initializer_*args_lock
abbr The same as RawArray() except that depending on the value of lock aprocess-safe synchronization wrapper may be returned instead of a raw cty
alias Array
    multiprocessing.sharedctypes.Array(${1:typecode_or_type}, ${2:size_or_initializer}, ${3:*args}, ${4:lock})
    # The same as RawArray() except that depending on the value of lock aprocess-safe synchronization wrapper may be returned instead of a raw cty
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_sharedctypes_Value typecode_or_type_*args_lock
abbr The same as RawValue() except that depending on the value of lock aprocess-safe synchronization wrapper may be returned instead of a raw cty
alias Value
    multiprocessing.sharedctypes.Value(${1:typecode_or_type}, ${2:*args}, ${3:lock})
    # The same as RawValue() except that depending on the value of lock aprocess-safe synchronization wrapper may be returned instead of a raw cty
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_sharedctypes_copy obj
abbr Return a ctypes object allocated from shared memory which is a copy of thectypes object obj.
alias copy
    multiprocessing.sharedctypes.copy(${1:obj})
    # Return a ctypes object allocated from shared memory which is a copy of thectypes object obj.
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_sharedctypes_synchronized obj_lock
abbr Return a process-safe wrapper object for a ctypes object which uses lock tosynchronize access.  If lock is None (the default) then amultipro
alias synchronized
    multiprocessing.sharedctypes.synchronized(${1:obj}, ${2:lock})
    # Return a process-safe wrapper object for a ctypes object which uses lock tosynchronize access.  If lock is None (the default) then amultipro
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_Manager 
abbr Returns a started SyncManager object whichcan be used for sharing objects between processes.  The returned managerobject corresponds to a sp
alias Manager
    multiprocessing.Manager()
    # Returns a started SyncManager object whichcan be used for sharing objects between processes.  The returned managerobject corresponds to a sp
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_connection_deliver_challenge connection_authkey
abbr Send a randomly generated message to the other end of the connection and waitfor a reply.
alias deliver_challenge
    multiprocessing.connection.deliver_challenge(${1:connection}, ${2:authkey})
    # Send a randomly generated message to the other end of the connection and waitfor a reply.
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_connection_answer_challenge connection_authkey
abbr Receive a message, calculate the digest of the message using authkey as thekey, and then send the digest back.
alias answer_challenge
    multiprocessing.connection.answer_challenge(${1:connection}, ${2:authkey})
    # Receive a message, calculate the digest of the message using authkey as thekey, and then send the digest back.
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_connection_Client address_family_authenticate_authkey
abbr Attempt to set up a connection to the listener which is using addressaddress, returning a Connection.
alias Client
    multiprocessing.connection.Client(${1:address}, ${2:family}, ${3:authenticate}, ${4:authkey})
    # Attempt to set up a connection to the listener which is using addressaddress, returning a Connection.
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_get_logger 
abbr Returns the logger used by multiprocessing.  If necessary, a new onewill be created.
alias get_logger
    multiprocessing.get_logger()
    # Returns the logger used by multiprocessing.  If necessary, a new onewill be created.
    # https://docs.python.org/2/library/multiprocessing.html
snippet multiprocessing_log_to_stderr 
abbr This function performs a call to get_logger() but in addition toreturning the logger created by get_logger, it adds a handler which sendsout
alias log_to_stderr
    multiprocessing.log_to_stderr()
    # This function performs a call to get_logger() but in addition toreturning the logger created by get_logger, it adds a handler which sendsout
    # https://docs.python.org/2/library/multiprocessing.html







snippet new_instance class_dict
abbr This function creates an instance of class with dictionary dict withoutcalling the __init__() constructor.  If dict is omitted or None, anew
alias instance
    new.instance(${1:class}, ${2:dict})
    # This function creates an instance of class with dictionary dict withoutcalling the __init__() constructor.  If dict is omitted or None, anew
    # https://docs.python.org/2/library/new.html
snippet new_instancemethod function_instance_class
abbr This function will return a method object, bound to instance, or unbound ifinstance is None.  function must be callable.
alias instancemethod
    new.instancemethod(${1:function}, ${2:instance}, ${3:class})
    # This function will return a method object, bound to instance, or unbound ifinstance is None.  function must be callable.
    # https://docs.python.org/2/library/new.html
snippet new_function code_globals_name_argdefs_closure
abbr Returns a (Python) function with the given code and globals. If name is given,it must be a string or None.  If it is a string, the function 
alias function
    new.function(${1:code}, ${2:globals}, ${3:name}, ${4:argdefs}, ${5:closure})
    # Returns a (Python) function with the given code and globals. If name is given,it must be a string or None.  If it is a string, the function 
    # https://docs.python.org/2/library/new.html
snippet new_code argcount_nlocals_stacksize_flags_codestring_constants_names_varnames_filename_name_firstlineno_lnotab
abbr This function is an interface to the PyCode_New() C function.
alias code
    new.code(${1:argcount}, ${2:nlocals}, ${3:stacksize}, ${4:flags}, ${5:codestring}, ${6:constants}, ${7:names}, ${8:varnames}, ${9:filename}, ${10:name}, ${11:firstlineno}, ${12:lnotab})
    # This function is an interface to the PyCode_New() C function.
    # https://docs.python.org/2/library/new.html
snippet new_module name_doc
abbr This function returns a new module object with name name. name must be astring. The optional doc argument can have any type.
alias module
    new.module(${1:name}, ${2:doc})
    # This function returns a new module object with name name. name must be astring. The optional doc argument can have any type.
    # https://docs.python.org/2/library/new.html
snippet new_classobj name_baseclasses_dict
abbr This function returns a new class object, with name name, derived frombaseclasses (which should be a tuple of classes) and with namespace di
alias classobj
    new.classobj(${1:name}, ${2:baseclasses}, ${3:dict})
    # This function returns a new class object, with name name, derived frombaseclasses (which should be a tuple of classes) and with namespace di
    # https://docs.python.org/2/library/new.html

snippet nis_match key_mapname_domain=default_domain
abbr Return the match for key in map mapname, or raise an error(nis.error) if there is none. Both should be strings, key is 8-bitclean. Return va
alias match
    nis.match(${1:key}, ${2:mapname}, ${3:domain=default_domain})
    # Return the match for key in map mapname, or raise an error(nis.error) if there is none. Both should be strings, key is 8-bitclean. Return va
    # https://docs.python.org/2/library/nis.html
snippet nis_cat mapname_domain=default_domain
abbr Return a dictionary mapping key to value such that match(key,mapname)==value. Note that both keys and values of the dictionary arearbitrary 
alias cat
    nis.cat(${1:mapname}, ${2:domain=default_domain})
    # Return a dictionary mapping key to value such that match(key,mapname)==value. Note that both keys and values of the dictionary arearbitrary 
    # https://docs.python.org/2/library/nis.html
snippet nis_maps domain=default_domain
abbr Return a list of all valid maps.
alias maps
    nis.maps(${1:domain=default_domain})
    # Return a list of all valid maps.
    # https://docs.python.org/2/library/nis.html
snippet nis_get_default_domain 
abbr Return the system default NIS domain.
alias get_default_domain
    nis.get_default_domain()
    # Return the system default NIS domain.
    # https://docs.python.org/2/library/nis.html







snippet operator_lt a_b
abbr Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
alias lt
    operator.lt(${1:a}, ${2:b})
    # Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
    # https://docs.python.org/2/library/operator.html
snippet operator_le a_b
abbr Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
alias le
    operator.le(${1:a}, ${2:b})
    # Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
    # https://docs.python.org/2/library/operator.html
snippet operator_eq a_b
abbr Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
alias eq
    operator.eq(${1:a}, ${2:b})
    # Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
    # https://docs.python.org/2/library/operator.html
snippet operator_ne a_b
abbr Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
alias ne
    operator.ne(${1:a}, ${2:b})
    # Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
    # https://docs.python.org/2/library/operator.html
snippet operator_ge a_b
abbr Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
alias ge
    operator.ge(${1:a}, ${2:b})
    # Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
    # https://docs.python.org/2/library/operator.html
snippet operator_gt a_b
abbr Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
alias gt
    operator.gt(${1:a}, ${2:b})
    # Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
    # https://docs.python.org/2/library/operator.html
snippet operator___lt__ a_b
abbr Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
alias __lt__
    operator.__lt__(${1:a}, ${2:b})
    # Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
    # https://docs.python.org/2/library/operator.html
snippet operator___le__ a_b
abbr Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
alias __le__
    operator.__le__(${1:a}, ${2:b})
    # Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
    # https://docs.python.org/2/library/operator.html
snippet operator___eq__ a_b
abbr Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
alias __eq__
    operator.__eq__(${1:a}, ${2:b})
    # Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
    # https://docs.python.org/2/library/operator.html
snippet operator___ne__ a_b
abbr Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
alias __ne__
    operator.__ne__(${1:a}, ${2:b})
    # Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
    # https://docs.python.org/2/library/operator.html
snippet operator___ge__ a_b
abbr Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
alias __ge__
    operator.__ge__(${1:a}, ${2:b})
    # Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
    # https://docs.python.org/2/library/operator.html
snippet operator___gt__ a_b
abbr Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
alias __gt__
    operator.__gt__(${1:a}, ${2:b})
    # Perform “rich comparisons” between a and b. Specifically, lt(a, b) isequivalent to a < b, le(a, b) is equivalent to a <= b, eq(a,b) is equiv
    # https://docs.python.org/2/library/operator.html
snippet operator_not_ obj
abbr Return the outcome of not obj.  (Note that there is no__not__() method for object instances; only the interpreter core definesthis operation
alias not_
    operator.not_(${1:obj})
    # Return the outcome of not obj.  (Note that there is no__not__() method for object instances; only the interpreter core definesthis operation
    # https://docs.python.org/2/library/operator.html
snippet operator___not__ obj
abbr Return the outcome of not obj.  (Note that there is no__not__() method for object instances; only the interpreter core definesthis operation
alias __not__
    operator.__not__(${1:obj})
    # Return the outcome of not obj.  (Note that there is no__not__() method for object instances; only the interpreter core definesthis operation
    # https://docs.python.org/2/library/operator.html
snippet operator_truth obj
abbr Return True if obj is true, and False otherwise.  This isequivalent to using the bool constructor.
alias truth
    operator.truth(${1:obj})
    # Return True if obj is true, and False otherwise.  This isequivalent to using the bool constructor.
    # https://docs.python.org/2/library/operator.html
snippet operator_is_ a_b
abbr Return a is b.  Tests object identity.
alias is_
    operator.is_(${1:a}, ${2:b})
    # Return a is b.  Tests object identity.
    # https://docs.python.org/2/library/operator.html
snippet operator_is_not a_b
abbr Return a is not b.  Tests object identity.
alias is_not
    operator.is_not(${1:a}, ${2:b})
    # Return a is not b.  Tests object identity.
    # https://docs.python.org/2/library/operator.html
snippet operator_abs obj
abbr Return the absolute value of obj.
alias abs
    operator.abs(${1:obj})
    # Return the absolute value of obj.
    # https://docs.python.org/2/library/operator.html
snippet operator___abs__ obj
abbr Return the absolute value of obj.
alias __abs__
    operator.__abs__(${1:obj})
    # Return the absolute value of obj.
    # https://docs.python.org/2/library/operator.html
snippet operator_add a_b
abbr Return a + b, for a and b numbers.
alias add
    operator.add(${1:a}, ${2:b})
    # Return a + b, for a and b numbers.
    # https://docs.python.org/2/library/operator.html
snippet operator___add__ a_b
abbr Return a + b, for a and b numbers.
alias __add__
    operator.__add__(${1:a}, ${2:b})
    # Return a + b, for a and b numbers.
    # https://docs.python.org/2/library/operator.html
snippet operator_and_ a_b
abbr Return the bitwise and of a and b.
alias and_
    operator.and_(${1:a}, ${2:b})
    # Return the bitwise and of a and b.
    # https://docs.python.org/2/library/operator.html
snippet operator___and__ a_b
abbr Return the bitwise and of a and b.
alias __and__
    operator.__and__(${1:a}, ${2:b})
    # Return the bitwise and of a and b.
    # https://docs.python.org/2/library/operator.html
snippet operator_div a_b
abbr Return a / b when __future__.division is not in effect.  This isalso known as “classic” division.
alias div
    operator.div(${1:a}, ${2:b})
    # Return a / b when __future__.division is not in effect.  This isalso known as “classic” division.
    # https://docs.python.org/2/library/operator.html
snippet operator___div__ a_b
abbr Return a / b when __future__.division is not in effect.  This isalso known as “classic” division.
alias __div__
    operator.__div__(${1:a}, ${2:b})
    # Return a / b when __future__.division is not in effect.  This isalso known as “classic” division.
    # https://docs.python.org/2/library/operator.html
snippet operator_floordiv a_b
abbr Return a // b.
alias floordiv
    operator.floordiv(${1:a}, ${2:b})
    # Return a // b.
    # https://docs.python.org/2/library/operator.html
snippet operator___floordiv__ a_b
abbr Return a // b.
alias __floordiv__
    operator.__floordiv__(${1:a}, ${2:b})
    # Return a // b.
    # https://docs.python.org/2/library/operator.html
snippet operator_index a
abbr Return a converted to an integer.  Equivalent to a.__index__().
alias index
    operator.index(${1:a})
    # Return a converted to an integer.  Equivalent to a.__index__().
    # https://docs.python.org/2/library/operator.html
snippet operator___index__ a
abbr Return a converted to an integer.  Equivalent to a.__index__().
alias __index__
    operator.__index__(${1:a})
    # Return a converted to an integer.  Equivalent to a.__index__().
    # https://docs.python.org/2/library/operator.html
snippet operator_inv obj
abbr Return the bitwise inverse of the number obj.  This is equivalent to ~obj.
alias inv
    operator.inv(${1:obj})
    # Return the bitwise inverse of the number obj.  This is equivalent to ~obj.
    # https://docs.python.org/2/library/operator.html
snippet operator_invert obj
abbr Return the bitwise inverse of the number obj.  This is equivalent to ~obj.
alias invert
    operator.invert(${1:obj})
    # Return the bitwise inverse of the number obj.  This is equivalent to ~obj.
    # https://docs.python.org/2/library/operator.html
snippet operator___inv__ obj
abbr Return the bitwise inverse of the number obj.  This is equivalent to ~obj.
alias __inv__
    operator.__inv__(${1:obj})
    # Return the bitwise inverse of the number obj.  This is equivalent to ~obj.
    # https://docs.python.org/2/library/operator.html
snippet operator___invert__ obj
abbr Return the bitwise inverse of the number obj.  This is equivalent to ~obj.
alias __invert__
    operator.__invert__(${1:obj})
    # Return the bitwise inverse of the number obj.  This is equivalent to ~obj.
    # https://docs.python.org/2/library/operator.html
snippet operator_lshift a_b
abbr Return a shifted left by b.
alias lshift
    operator.lshift(${1:a}, ${2:b})
    # Return a shifted left by b.
    # https://docs.python.org/2/library/operator.html
snippet operator___lshift__ a_b
abbr Return a shifted left by b.
alias __lshift__
    operator.__lshift__(${1:a}, ${2:b})
    # Return a shifted left by b.
    # https://docs.python.org/2/library/operator.html
snippet operator_mod a_b
abbr Return a % b.
alias mod
    operator.mod(${1:a}, ${2:b})
    # Return a % b.
    # https://docs.python.org/2/library/operator.html
snippet operator___mod__ a_b
abbr Return a % b.
alias __mod__
    operator.__mod__(${1:a}, ${2:b})
    # Return a % b.
    # https://docs.python.org/2/library/operator.html
snippet operator_mul a_b
abbr Return a * b, for a and b numbers.
alias mul
    operator.mul(${1:a}, ${2:b})
    # Return a * b, for a and b numbers.
    # https://docs.python.org/2/library/operator.html
snippet operator___mul__ a_b
abbr Return a * b, for a and b numbers.
alias __mul__
    operator.__mul__(${1:a}, ${2:b})
    # Return a * b, for a and b numbers.
    # https://docs.python.org/2/library/operator.html
snippet operator_neg obj
abbr Return obj negated (-obj).
alias neg
    operator.neg(${1:obj})
    # Return obj negated (-obj).
    # https://docs.python.org/2/library/operator.html
snippet operator___neg__ obj
abbr Return obj negated (-obj).
alias __neg__
    operator.__neg__(${1:obj})
    # Return obj negated (-obj).
    # https://docs.python.org/2/library/operator.html
snippet operator_or_ a_b
abbr Return the bitwise or of a and b.
alias or_
    operator.or_(${1:a}, ${2:b})
    # Return the bitwise or of a and b.
    # https://docs.python.org/2/library/operator.html
snippet operator___or__ a_b
abbr Return the bitwise or of a and b.
alias __or__
    operator.__or__(${1:a}, ${2:b})
    # Return the bitwise or of a and b.
    # https://docs.python.org/2/library/operator.html
snippet operator_pos obj
abbr Return obj positive (+obj).
alias pos
    operator.pos(${1:obj})
    # Return obj positive (+obj).
    # https://docs.python.org/2/library/operator.html
snippet operator___pos__ obj
abbr Return obj positive (+obj).
alias __pos__
    operator.__pos__(${1:obj})
    # Return obj positive (+obj).
    # https://docs.python.org/2/library/operator.html
snippet operator_pow a_b
abbr Return a ** b, for a and b numbers.
alias pow
    operator.pow(${1:a}, ${2:b})
    # Return a ** b, for a and b numbers.
    # https://docs.python.org/2/library/operator.html
snippet operator___pow__ a_b
abbr Return a ** b, for a and b numbers.
alias __pow__
    operator.__pow__(${1:a}, ${2:b})
    # Return a ** b, for a and b numbers.
    # https://docs.python.org/2/library/operator.html
snippet operator_rshift a_b
abbr Return a shifted right by b.
alias rshift
    operator.rshift(${1:a}, ${2:b})
    # Return a shifted right by b.
    # https://docs.python.org/2/library/operator.html
snippet operator___rshift__ a_b
abbr Return a shifted right by b.
alias __rshift__
    operator.__rshift__(${1:a}, ${2:b})
    # Return a shifted right by b.
    # https://docs.python.org/2/library/operator.html
snippet operator_sub a_b
abbr Return a - b.
alias sub
    operator.sub(${1:a}, ${2:b})
    # Return a - b.
    # https://docs.python.org/2/library/operator.html
snippet operator___sub__ a_b
abbr Return a - b.
alias __sub__
    operator.__sub__(${1:a}, ${2:b})
    # Return a - b.
    # https://docs.python.org/2/library/operator.html
snippet operator_truediv a_b
abbr Return a / b when __future__.division is in effect.  This is alsoknown as “true” division.
alias truediv
    operator.truediv(${1:a}, ${2:b})
    # Return a / b when __future__.division is in effect.  This is alsoknown as “true” division.
    # https://docs.python.org/2/library/operator.html
snippet operator___truediv__ a_b
abbr Return a / b when __future__.division is in effect.  This is alsoknown as “true” division.
alias __truediv__
    operator.__truediv__(${1:a}, ${2:b})
    # Return a / b when __future__.division is in effect.  This is alsoknown as “true” division.
    # https://docs.python.org/2/library/operator.html
snippet operator_xor a_b
abbr Return the bitwise exclusive or of a and b.
alias xor
    operator.xor(${1:a}, ${2:b})
    # Return the bitwise exclusive or of a and b.
    # https://docs.python.org/2/library/operator.html
snippet operator___xor__ a_b
abbr Return the bitwise exclusive or of a and b.
alias __xor__
    operator.__xor__(${1:a}, ${2:b})
    # Return the bitwise exclusive or of a and b.
    # https://docs.python.org/2/library/operator.html
snippet operator_concat a_b
abbr Return a + b for a and b sequences.
alias concat
    operator.concat(${1:a}, ${2:b})
    # Return a + b for a and b sequences.
    # https://docs.python.org/2/library/operator.html
snippet operator___concat__ a_b
abbr Return a + b for a and b sequences.
alias __concat__
    operator.__concat__(${1:a}, ${2:b})
    # Return a + b for a and b sequences.
    # https://docs.python.org/2/library/operator.html
snippet operator_contains a_b
abbr Return the outcome of the test b in a. Note the reversed operands.
alias contains
    operator.contains(${1:a}, ${2:b})
    # Return the outcome of the test b in a. Note the reversed operands.
    # https://docs.python.org/2/library/operator.html
snippet operator___contains__ a_b
abbr Return the outcome of the test b in a. Note the reversed operands.
alias __contains__
    operator.__contains__(${1:a}, ${2:b})
    # Return the outcome of the test b in a. Note the reversed operands.
    # https://docs.python.org/2/library/operator.html
snippet operator_countOf a_b
abbr Return the number of occurrences of b in a.
alias countOf
    operator.countOf(${1:a}, ${2:b})
    # Return the number of occurrences of b in a.
    # https://docs.python.org/2/library/operator.html
snippet operator_delitem a_b
abbr Remove the value of a at index b.
alias delitem
    operator.delitem(${1:a}, ${2:b})
    # Remove the value of a at index b.
    # https://docs.python.org/2/library/operator.html
snippet operator___delitem__ a_b
abbr Remove the value of a at index b.
alias __delitem__
    operator.__delitem__(${1:a}, ${2:b})
    # Remove the value of a at index b.
    # https://docs.python.org/2/library/operator.html
snippet operator_delslice a_b_c
abbr Delete the slice of a from index b to index c-1.
alias delslice
    operator.delslice(${1:a}, ${2:b}, ${3:c})
    # Delete the slice of a from index b to index c-1.
    # https://docs.python.org/2/library/operator.html
snippet operator___delslice__ a_b_c
abbr Delete the slice of a from index b to index c-1.
alias __delslice__
    operator.__delslice__(${1:a}, ${2:b}, ${3:c})
    # Delete the slice of a from index b to index c-1.
    # https://docs.python.org/2/library/operator.html
snippet operator_getitem a_b
abbr Return the value of a at index b.
alias getitem
    operator.getitem(${1:a}, ${2:b})
    # Return the value of a at index b.
    # https://docs.python.org/2/library/operator.html
snippet operator___getitem__ a_b
abbr Return the value of a at index b.
alias __getitem__
    operator.__getitem__(${1:a}, ${2:b})
    # Return the value of a at index b.
    # https://docs.python.org/2/library/operator.html
snippet operator_getslice a_b_c
abbr Return the slice of a from index b to index c-1.
alias getslice
    operator.getslice(${1:a}, ${2:b}, ${3:c})
    # Return the slice of a from index b to index c-1.
    # https://docs.python.org/2/library/operator.html
snippet operator___getslice__ a_b_c
abbr Return the slice of a from index b to index c-1.
alias __getslice__
    operator.__getslice__(${1:a}, ${2:b}, ${3:c})
    # Return the slice of a from index b to index c-1.
    # https://docs.python.org/2/library/operator.html
snippet operator_indexOf a_b
abbr Return the index of the first of occurrence of b in a.
alias indexOf
    operator.indexOf(${1:a}, ${2:b})
    # Return the index of the first of occurrence of b in a.
    # https://docs.python.org/2/library/operator.html
snippet operator_repeat a_b
abbr Deprecated since version 2.7: Use __mul__() instead.
alias repeat
    operator.repeat(${1:a}, ${2:b})
    # Deprecated since version 2.7: Use __mul__() instead.
    # https://docs.python.org/2/library/operator.html
snippet operator___repeat__ a_b
abbr Deprecated since version 2.7: Use __mul__() instead.
alias __repeat__
    operator.__repeat__(${1:a}, ${2:b})
    # Deprecated since version 2.7: Use __mul__() instead.
    # https://docs.python.org/2/library/operator.html
snippet operator_sequenceIncludes ...
abbr Deprecated since version 2.0: Use contains() instead.
alias sequenceIncludes
    operator.sequenceIncludes(${1:...})
    # Deprecated since version 2.0: Use contains() instead.
    # https://docs.python.org/2/library/operator.html
snippet operator_setitem a_b_c
abbr Set the value of a at index b to c.
alias setitem
    operator.setitem(${1:a}, ${2:b}, ${3:c})
    # Set the value of a at index b to c.
    # https://docs.python.org/2/library/operator.html
snippet operator___setitem__ a_b_c
abbr Set the value of a at index b to c.
alias __setitem__
    operator.__setitem__(${1:a}, ${2:b}, ${3:c})
    # Set the value of a at index b to c.
    # https://docs.python.org/2/library/operator.html
snippet operator_setslice a_b_c_v
abbr Set the slice of a from index b to index c-1 to the sequence v.
alias setslice
    operator.setslice(${1:a}, ${2:b}, ${3:c}, ${4:v})
    # Set the slice of a from index b to index c-1 to the sequence v.
    # https://docs.python.org/2/library/operator.html
snippet operator___setslice__ a_b_c_v
abbr Set the slice of a from index b to index c-1 to the sequence v.
alias __setslice__
    operator.__setslice__(${1:a}, ${2:b}, ${3:c}, ${4:v})
    # Set the slice of a from index b to index c-1 to the sequence v.
    # https://docs.python.org/2/library/operator.html
snippet operator_iadd a_b
abbr a = iadd(a, b) is equivalent to a += b.
alias iadd
    operator.iadd(${1:a}, ${2:b})
    # a = iadd(a, b) is equivalent to a += b.
    # https://docs.python.org/2/library/operator.html
snippet operator___iadd__ a_b
abbr a = iadd(a, b) is equivalent to a += b.
alias __iadd__
    operator.__iadd__(${1:a}, ${2:b})
    # a = iadd(a, b) is equivalent to a += b.
    # https://docs.python.org/2/library/operator.html
snippet operator_iand a_b
abbr a = iand(a, b) is equivalent to a &= b.
alias iand
    operator.iand(${1:a}, ${2:b})
    # a = iand(a, b) is equivalent to a &= b.
    # https://docs.python.org/2/library/operator.html
snippet operator___iand__ a_b
abbr a = iand(a, b) is equivalent to a &= b.
alias __iand__
    operator.__iand__(${1:a}, ${2:b})
    # a = iand(a, b) is equivalent to a &= b.
    # https://docs.python.org/2/library/operator.html
snippet operator_iconcat a_b
abbr a = iconcat(a, b) is equivalent to a += b for a and b sequences.
alias iconcat
    operator.iconcat(${1:a}, ${2:b})
    # a = iconcat(a, b) is equivalent to a += b for a and b sequences.
    # https://docs.python.org/2/library/operator.html
snippet operator___iconcat__ a_b
abbr a = iconcat(a, b) is equivalent to a += b for a and b sequences.
alias __iconcat__
    operator.__iconcat__(${1:a}, ${2:b})
    # a = iconcat(a, b) is equivalent to a += b for a and b sequences.
    # https://docs.python.org/2/library/operator.html
snippet operator_idiv a_b
abbr a = idiv(a, b) is equivalent to a /= b when __future__.division isnot in effect.
alias idiv
    operator.idiv(${1:a}, ${2:b})
    # a = idiv(a, b) is equivalent to a /= b when __future__.division isnot in effect.
    # https://docs.python.org/2/library/operator.html
snippet operator___idiv__ a_b
abbr a = idiv(a, b) is equivalent to a /= b when __future__.division isnot in effect.
alias __idiv__
    operator.__idiv__(${1:a}, ${2:b})
    # a = idiv(a, b) is equivalent to a /= b when __future__.division isnot in effect.
    # https://docs.python.org/2/library/operator.html
snippet operator_ifloordiv a_b
abbr a = ifloordiv(a, b) is equivalent to a //= b.
alias ifloordiv
    operator.ifloordiv(${1:a}, ${2:b})
    # a = ifloordiv(a, b) is equivalent to a //= b.
    # https://docs.python.org/2/library/operator.html
snippet operator___ifloordiv__ a_b
abbr a = ifloordiv(a, b) is equivalent to a //= b.
alias __ifloordiv__
    operator.__ifloordiv__(${1:a}, ${2:b})
    # a = ifloordiv(a, b) is equivalent to a //= b.
    # https://docs.python.org/2/library/operator.html
snippet operator_ilshift a_b
abbr a = ilshift(a, b) is equivalent to a <<= b.
alias ilshift
    operator.ilshift(${1:a}, ${2:b})
    # a = ilshift(a, b) is equivalent to a <<= b.
    # https://docs.python.org/2/library/operator.html
snippet operator___ilshift__ a_b
abbr a = ilshift(a, b) is equivalent to a <<= b.
alias __ilshift__
    operator.__ilshift__(${1:a}, ${2:b})
    # a = ilshift(a, b) is equivalent to a <<= b.
    # https://docs.python.org/2/library/operator.html
snippet operator_imod a_b
abbr a = imod(a, b) is equivalent to a %= b.
alias imod
    operator.imod(${1:a}, ${2:b})
    # a = imod(a, b) is equivalent to a %= b.
    # https://docs.python.org/2/library/operator.html
snippet operator___imod__ a_b
abbr a = imod(a, b) is equivalent to a %= b.
alias __imod__
    operator.__imod__(${1:a}, ${2:b})
    # a = imod(a, b) is equivalent to a %= b.
    # https://docs.python.org/2/library/operator.html
snippet operator_imul a_b
abbr a = imul(a, b) is equivalent to a *= b.
alias imul
    operator.imul(${1:a}, ${2:b})
    # a = imul(a, b) is equivalent to a *= b.
    # https://docs.python.org/2/library/operator.html
snippet operator___imul__ a_b
abbr a = imul(a, b) is equivalent to a *= b.
alias __imul__
    operator.__imul__(${1:a}, ${2:b})
    # a = imul(a, b) is equivalent to a *= b.
    # https://docs.python.org/2/library/operator.html
snippet operator_ior a_b
abbr a = ior(a, b) is equivalent to a |= b.
alias ior
    operator.ior(${1:a}, ${2:b})
    # a = ior(a, b) is equivalent to a |= b.
    # https://docs.python.org/2/library/operator.html
snippet operator___ior__ a_b
abbr a = ior(a, b) is equivalent to a |= b.
alias __ior__
    operator.__ior__(${1:a}, ${2:b})
    # a = ior(a, b) is equivalent to a |= b.
    # https://docs.python.org/2/library/operator.html
snippet operator_ipow a_b
abbr a = ipow(a, b) is equivalent to a **= b.
alias ipow
    operator.ipow(${1:a}, ${2:b})
    # a = ipow(a, b) is equivalent to a **= b.
    # https://docs.python.org/2/library/operator.html
snippet operator___ipow__ a_b
abbr a = ipow(a, b) is equivalent to a **= b.
alias __ipow__
    operator.__ipow__(${1:a}, ${2:b})
    # a = ipow(a, b) is equivalent to a **= b.
    # https://docs.python.org/2/library/operator.html
snippet operator_irepeat a_b
abbr Deprecated since version 2.7: Use __imul__() instead.
alias irepeat
    operator.irepeat(${1:a}, ${2:b})
    # Deprecated since version 2.7: Use __imul__() instead.
    # https://docs.python.org/2/library/operator.html
snippet operator___irepeat__ a_b
abbr Deprecated since version 2.7: Use __imul__() instead.
alias __irepeat__
    operator.__irepeat__(${1:a}, ${2:b})
    # Deprecated since version 2.7: Use __imul__() instead.
    # https://docs.python.org/2/library/operator.html
snippet operator_irshift a_b
abbr a = irshift(a, b) is equivalent to a >>= b.
alias irshift
    operator.irshift(${1:a}, ${2:b})
    # a = irshift(a, b) is equivalent to a >>= b.
    # https://docs.python.org/2/library/operator.html
snippet operator___irshift__ a_b
abbr a = irshift(a, b) is equivalent to a >>= b.
alias __irshift__
    operator.__irshift__(${1:a}, ${2:b})
    # a = irshift(a, b) is equivalent to a >>= b.
    # https://docs.python.org/2/library/operator.html
snippet operator_isub a_b
abbr a = isub(a, b) is equivalent to a -= b.
alias isub
    operator.isub(${1:a}, ${2:b})
    # a = isub(a, b) is equivalent to a -= b.
    # https://docs.python.org/2/library/operator.html
snippet operator___isub__ a_b
abbr a = isub(a, b) is equivalent to a -= b.
alias __isub__
    operator.__isub__(${1:a}, ${2:b})
    # a = isub(a, b) is equivalent to a -= b.
    # https://docs.python.org/2/library/operator.html
snippet operator_itruediv a_b
abbr a = itruediv(a, b) is equivalent to a /= b when __future__.divisionis in effect.
alias itruediv
    operator.itruediv(${1:a}, ${2:b})
    # a = itruediv(a, b) is equivalent to a /= b when __future__.divisionis in effect.
    # https://docs.python.org/2/library/operator.html
snippet operator___itruediv__ a_b
abbr a = itruediv(a, b) is equivalent to a /= b when __future__.divisionis in effect.
alias __itruediv__
    operator.__itruediv__(${1:a}, ${2:b})
    # a = itruediv(a, b) is equivalent to a /= b when __future__.divisionis in effect.
    # https://docs.python.org/2/library/operator.html
snippet operator_ixor a_b
abbr a = ixor(a, b) is equivalent to a ^= b.
alias ixor
    operator.ixor(${1:a}, ${2:b})
    # a = ixor(a, b) is equivalent to a ^= b.
    # https://docs.python.org/2/library/operator.html
snippet operator___ixor__ a_b
abbr a = ixor(a, b) is equivalent to a ^= b.
alias __ixor__
    operator.__ixor__(${1:a}, ${2:b})
    # a = ixor(a, b) is equivalent to a ^= b.
    # https://docs.python.org/2/library/operator.html
snippet operator_isCallable obj
abbr Deprecated since version 2.0: Use isinstance(x, collections.Callable) instead.
alias isCallable
    operator.isCallable(${1:obj})
    # Deprecated since version 2.0: Use isinstance(x, collections.Callable) instead.
    # https://docs.python.org/2/library/operator.html
snippet operator_isMappingType obj
abbr Deprecated since version 2.7: Use isinstance(x, collections.Mapping) instead.
alias isMappingType
    operator.isMappingType(${1:obj})
    # Deprecated since version 2.7: Use isinstance(x, collections.Mapping) instead.
    # https://docs.python.org/2/library/operator.html
snippet operator_isNumberType obj
abbr Deprecated since version 2.7: Use isinstance(x, numbers.Number) instead.
alias isNumberType
    operator.isNumberType(${1:obj})
    # Deprecated since version 2.7: Use isinstance(x, numbers.Number) instead.
    # https://docs.python.org/2/library/operator.html
snippet operator_isSequenceType obj
abbr Deprecated since version 2.7: Use isinstance(x, collections.Sequence) instead.
alias isSequenceType
    operator.isSequenceType(${1:obj})
    # Deprecated since version 2.7: Use isinstance(x, collections.Sequence) instead.
    # https://docs.python.org/2/library/operator.html
snippet operator_attrgetter attr
abbr Return a callable object that fetches attr from its operand.If more than one attribute is requested, returns a tuple of attributes.The attri
alias attrgetter
    operator.attrgetter(${1:attr})
    # Return a callable object that fetches attr from its operand.If more than one attribute is requested, returns a tuple of attributes.The attri
    # https://docs.python.org/2/library/operator.html
snippet operator_itemgetter item
abbr Return a callable object that fetches item from its operand using theoperand’s __getitem__() method.  If multiple items are specified,return
alias itemgetter
    operator.itemgetter(${1:item})
    # Return a callable object that fetches item from its operand using theoperand’s __getitem__() method.  If multiple items are specified,return
    # https://docs.python.org/2/library/operator.html
snippet operator_methodcaller name_args...
abbr Return a callable object that calls the method name on its operand.  Ifadditional arguments and/or keyword arguments are given, they will be
alias methodcaller
    operator.methodcaller(${1:name}, ${2:args...})
    # Return a callable object that calls the method name on its operand.  Ifadditional arguments and/or keyword arguments are given, they will be
    # https://docs.python.org/2/library/operator.html



snippet os_ctermid 
abbr Return the filename corresponding to the controlling terminal of the process.
alias ctermid
    os.ctermid()
    # Return the filename corresponding to the controlling terminal of the process.
    # https://docs.python.org/2/library/os.html
snippet os_getegid 
abbr Return the effective group id of the current process.  This corresponds to the“set id” bit on the file being executed in the current process
alias getegid
    os.getegid()
    # Return the effective group id of the current process.  This corresponds to the“set id” bit on the file being executed in the current process
    # https://docs.python.org/2/library/os.html
snippet os_geteuid 
abbr Return the current process’s effective user id.
alias geteuid
    os.geteuid()
    # Return the current process’s effective user id.
    # https://docs.python.org/2/library/os.html
snippet os_getgid 
abbr Return the real group id of the current process.
alias getgid
    os.getgid()
    # Return the real group id of the current process.
    # https://docs.python.org/2/library/os.html
snippet os_getgroups 
abbr Return list of supplemental group ids associated with the current process.
alias getgroups
    os.getgroups()
    # Return list of supplemental group ids associated with the current process.
    # https://docs.python.org/2/library/os.html
snippet os_initgroups username_gid
abbr Call the system initgroups() to initialize the group access list with all ofthe groups of which the specified username is a member, plus the
alias initgroups
    os.initgroups(${1:username}, ${2:gid})
    # Call the system initgroups() to initialize the group access list with all ofthe groups of which the specified username is a member, plus the
    # https://docs.python.org/2/library/os.html
snippet os_getlogin 
abbr Return the name of the user logged in on the controlling terminal of theprocess.  For most purposes, it is more useful to use the environmen
alias getlogin
    os.getlogin()
    # Return the name of the user logged in on the controlling terminal of theprocess.  For most purposes, it is more useful to use the environmen
    # https://docs.python.org/2/library/os.html
snippet os_getpgid pid
abbr Return the process group id of the process with process id pid. If pid is 0,the process group id of the current process is returned.
alias getpgid
    os.getpgid(${1:pid})
    # Return the process group id of the process with process id pid. If pid is 0,the process group id of the current process is returned.
    # https://docs.python.org/2/library/os.html
snippet os_getpgrp 
abbr Return the id of the current process group.
alias getpgrp
    os.getpgrp()
    # Return the id of the current process group.
    # https://docs.python.org/2/library/os.html
snippet os_getpid 
abbr Return the current process id.
alias getpid
    os.getpid()
    # Return the current process id.
    # https://docs.python.org/2/library/os.html
snippet os_getppid 
abbr Return the parent’s process id.
alias getppid
    os.getppid()
    # Return the parent’s process id.
    # https://docs.python.org/2/library/os.html
snippet os_getresuid 
abbr Return a tuple (ruid, euid, suid) denoting the current process’sreal, effective, and saved user ids.
alias getresuid
    os.getresuid()
    # Return a tuple (ruid, euid, suid) denoting the current process’sreal, effective, and saved user ids.
    # https://docs.python.org/2/library/os.html
snippet os_getresgid 
abbr Return a tuple (rgid, egid, sgid) denoting the current process’sreal, effective, and saved group ids.
alias getresgid
    os.getresgid()
    # Return a tuple (rgid, egid, sgid) denoting the current process’sreal, effective, and saved group ids.
    # https://docs.python.org/2/library/os.html
snippet os_getuid 
abbr Return the current process’s real user id.
alias getuid
    os.getuid()
    # Return the current process’s real user id.
    # https://docs.python.org/2/library/os.html
snippet os_getenv varname_value
abbr Return the value of the environment variable varname if it exists, or valueif it doesn’t.  value defaults to None.
alias getenv
    os.getenv(${1:varname}, ${2:value})
    # Return the value of the environment variable varname if it exists, or valueif it doesn’t.  value defaults to None.
    # https://docs.python.org/2/library/os.html
snippet os_putenv varname_value
abbr Set the environment variable named varname to the string value.  Suchchanges to the environment affect subprocesses started with os.system()
alias putenv
    os.putenv(${1:varname}, ${2:value})
    # Set the environment variable named varname to the string value.  Suchchanges to the environment affect subprocesses started with os.system()
    # https://docs.python.org/2/library/os.html
snippet os_setegid egid
abbr Set the current process’s effective group id.
alias setegid
    os.setegid(${1:egid})
    # Set the current process’s effective group id.
    # https://docs.python.org/2/library/os.html
snippet os_seteuid euid
abbr Set the current process’s effective user id.
alias seteuid
    os.seteuid(${1:euid})
    # Set the current process’s effective user id.
    # https://docs.python.org/2/library/os.html
snippet os_setgid gid
abbr Set the current process’ group id.
alias setgid
    os.setgid(${1:gid})
    # Set the current process’ group id.
    # https://docs.python.org/2/library/os.html
snippet os_setgroups groups
abbr Set the list of supplemental group ids associated with the current process togroups. groups must be a sequence, and each element must be an 
alias setgroups
    os.setgroups(${1:groups})
    # Set the list of supplemental group ids associated with the current process togroups. groups must be a sequence, and each element must be an 
    # https://docs.python.org/2/library/os.html
snippet os_setpgrp 
abbr Call the system call setpgrp() or setpgrp(0, 0)() depending onwhich version is implemented (if any).  See the Unix manual for the semantics.
alias setpgrp
    os.setpgrp()
    # Call the system call setpgrp() or setpgrp(0, 0)() depending onwhich version is implemented (if any).  See the Unix manual for the semantics.
    # https://docs.python.org/2/library/os.html
snippet os_setpgid pid_pgrp
abbr Call the system call setpgid() to set the process group id of theprocess with id pid to the process group with id pgrp.  See the Unix manual
alias setpgid
    os.setpgid(${1:pid}, ${2:pgrp})
    # Call the system call setpgid() to set the process group id of theprocess with id pid to the process group with id pgrp.  See the Unix manual
    # https://docs.python.org/2/library/os.html
snippet os_setregid rgid_egid
abbr Set the current process’s real and effective group ids.
alias setregid
    os.setregid(${1:rgid}, ${2:egid})
    # Set the current process’s real and effective group ids.
    # https://docs.python.org/2/library/os.html
snippet os_setresgid rgid_egid_sgid
abbr Set the current process’s real, effective, and saved group ids.
alias setresgid
    os.setresgid(${1:rgid}, ${2:egid}, ${3:sgid})
    # Set the current process’s real, effective, and saved group ids.
    # https://docs.python.org/2/library/os.html
snippet os_setresuid ruid_euid_suid
abbr Set the current process’s real, effective, and saved user ids.
alias setresuid
    os.setresuid(${1:ruid}, ${2:euid}, ${3:suid})
    # Set the current process’s real, effective, and saved user ids.
    # https://docs.python.org/2/library/os.html
snippet os_setreuid ruid_euid
abbr Set the current process’s real and effective user ids.
alias setreuid
    os.setreuid(${1:ruid}, ${2:euid})
    # Set the current process’s real and effective user ids.
    # https://docs.python.org/2/library/os.html
snippet os_getsid pid
abbr Call the system call getsid().  See the Unix manual for the semantics.
alias getsid
    os.getsid(${1:pid})
    # Call the system call getsid().  See the Unix manual for the semantics.
    # https://docs.python.org/2/library/os.html
snippet os_setsid 
abbr Call the system call setsid().  See the Unix manual for the semantics.
alias setsid
    os.setsid()
    # Call the system call setsid().  See the Unix manual for the semantics.
    # https://docs.python.org/2/library/os.html
snippet os_setuid uid
abbr Set the current process’s user id.
alias setuid
    os.setuid(${1:uid})
    # Set the current process’s user id.
    # https://docs.python.org/2/library/os.html
snippet os_strerror code
abbr Return the error message corresponding to the error code in code.On platforms where strerror() returns NULL when given an unknownerror numbe
alias strerror
    os.strerror(${1:code})
    # Return the error message corresponding to the error code in code.On platforms where strerror() returns NULL when given an unknownerror numbe
    # https://docs.python.org/2/library/os.html
snippet os_umask mask
abbr Set the current numeric umask and return the previous umask.
alias umask
    os.umask(${1:mask})
    # Set the current numeric umask and return the previous umask.
    # https://docs.python.org/2/library/os.html
snippet os_uname 
abbr Return a 5-tuple containing information identifying the current operatingsystem.  The tuple contains 5 strings: (sysname, nodename, release,
alias uname
    os.uname()
    # Return a 5-tuple containing information identifying the current operatingsystem.  The tuple contains 5 strings: (sysname, nodename, release,
    # https://docs.python.org/2/library/os.html
snippet os_unsetenv varname
abbr Unset (delete) the environment variable named varname. Such changes to theenvironment affect subprocesses started with os.system(), popen() 
alias unsetenv
    os.unsetenv(${1:varname})
    # Unset (delete) the environment variable named varname. Such changes to theenvironment affect subprocesses started with os.system(), popen() 
    # https://docs.python.org/2/library/os.html
snippet os_fdopen fd_mode_bufsize
abbr Return an open file object connected to the file descriptor fd.  The modeand bufsize arguments have the same meaning as the corresponding ar
alias fdopen
    os.fdopen(${1:fd}, ${2:mode}, ${3:bufsize})
    # Return an open file object connected to the file descriptor fd.  The modeand bufsize arguments have the same meaning as the corresponding ar
    # https://docs.python.org/2/library/os.html
snippet os_popen command_mode_bufsize
abbr Open a pipe to or from command.  The return value is an open file objectconnected to the pipe, which can be read or written depending on whe
alias popen
    os.popen(${1:command}, ${2:mode}, ${3:bufsize})
    # Open a pipe to or from command.  The return value is an open file objectconnected to the pipe, which can be read or written depending on whe
    # https://docs.python.org/2/library/os.html
snippet os_tmpfile 
abbr Return a new file object opened in update mode (w+b).  The file has nodirectory entries associated with it and will be automatically deleted
alias tmpfile
    os.tmpfile()
    # Return a new file object opened in update mode (w+b).  The file has nodirectory entries associated with it and will be automatically deleted
    # https://docs.python.org/2/library/os.html
snippet os_popen2 cmd_mode_bufsize
abbr Execute cmd as a sub-process and return the file objects (child_stdin,child_stdout).
alias popen2
    os.popen2(${1:cmd}, ${2:mode}, ${3:bufsize})
    # Execute cmd as a sub-process and return the file objects (child_stdin,child_stdout).
    # https://docs.python.org/2/library/os.html
snippet os_popen3 cmd_mode_bufsize
abbr Execute cmd as a sub-process and return the file objects (child_stdin,child_stdout, child_stderr).
alias popen3
    os.popen3(${1:cmd}, ${2:mode}, ${3:bufsize})
    # Execute cmd as a sub-process and return the file objects (child_stdin,child_stdout, child_stderr).
    # https://docs.python.org/2/library/os.html
snippet os_popen4 cmd_mode_bufsize
abbr Execute cmd as a sub-process and return the file objects (child_stdin,child_stdout_and_stderr).
alias popen4
    os.popen4(${1:cmd}, ${2:mode}, ${3:bufsize})
    # Execute cmd as a sub-process and return the file objects (child_stdin,child_stdout_and_stderr).
    # https://docs.python.org/2/library/os.html
snippet os_close fd
abbr Close file descriptor fd.
alias close
    os.close(${1:fd})
    # Close file descriptor fd.
    # https://docs.python.org/2/library/os.html
snippet os_closerange fd_low_fd_high
abbr Close all file descriptors from fd_low (inclusive) to fd_high (exclusive),ignoring errors. Equivalent to:
alias closerange
    os.closerange(${1:fd_low}, ${2:fd_high})
    # Close all file descriptors from fd_low (inclusive) to fd_high (exclusive),ignoring errors. Equivalent to:
    # https://docs.python.org/2/library/os.html
snippet os_dup fd
abbr Return a duplicate of file descriptor fd.
alias dup
    os.dup(${1:fd})
    # Return a duplicate of file descriptor fd.
    # https://docs.python.org/2/library/os.html
snippet os_dup2 fd_fd2
abbr Duplicate file descriptor fd to fd2, closing the latter first if necessary.
alias dup2
    os.dup2(${1:fd}, ${2:fd2})
    # Duplicate file descriptor fd to fd2, closing the latter first if necessary.
    # https://docs.python.org/2/library/os.html
snippet os_fchmod fd_mode
abbr Change the mode of the file given by fd to the numeric mode.  See the docsfor chmod() for possible values of mode.
alias fchmod
    os.fchmod(${1:fd}, ${2:mode})
    # Change the mode of the file given by fd to the numeric mode.  See the docsfor chmod() for possible values of mode.
    # https://docs.python.org/2/library/os.html
snippet os_fchown fd_uid_gid
abbr Change the owner and group id of the file given by fd to the numeric uidand gid.  To leave one of the ids unchanged, set it to -1.
alias fchown
    os.fchown(${1:fd}, ${2:uid}, ${3:gid})
    # Change the owner and group id of the file given by fd to the numeric uidand gid.  To leave one of the ids unchanged, set it to -1.
    # https://docs.python.org/2/library/os.html
snippet os_fdatasync fd
abbr Force write of file with filedescriptor fd to disk. Does not force update ofmetadata.
alias fdatasync
    os.fdatasync(${1:fd})
    # Force write of file with filedescriptor fd to disk. Does not force update ofmetadata.
    # https://docs.python.org/2/library/os.html
snippet os_fpathconf fd_name
abbr Return system configuration information relevant to an open file. namespecifies the configuration value to retrieve; it may be a string whic
alias fpathconf
    os.fpathconf(${1:fd}, ${2:name})
    # Return system configuration information relevant to an open file. namespecifies the configuration value to retrieve; it may be a string whic
    # https://docs.python.org/2/library/os.html
snippet os_fstat fd
abbr Return status for file descriptor fd, like stat().
alias fstat
    os.fstat(${1:fd})
    # Return status for file descriptor fd, like stat().
    # https://docs.python.org/2/library/os.html
snippet os_fstatvfs fd
abbr Return information about the filesystem containing the file associated with filedescriptor fd, like statvfs().
alias fstatvfs
    os.fstatvfs(${1:fd})
    # Return information about the filesystem containing the file associated with filedescriptor fd, like statvfs().
    # https://docs.python.org/2/library/os.html
snippet os_fsync fd
abbr Force write of file with filedescriptor fd to disk.  On Unix, this calls thenative fsync() function; on Windows, the MS _commit() function.
alias fsync
    os.fsync(${1:fd})
    # Force write of file with filedescriptor fd to disk.  On Unix, this calls thenative fsync() function; on Windows, the MS _commit() function.
    # https://docs.python.org/2/library/os.html
snippet os_ftruncate fd_length
abbr Truncate the file corresponding to file descriptor fd, so that it is at mostlength bytes in size.
alias ftruncate
    os.ftruncate(${1:fd}, ${2:length})
    # Truncate the file corresponding to file descriptor fd, so that it is at mostlength bytes in size.
    # https://docs.python.org/2/library/os.html
snippet os_isatty fd
abbr Return True if the file descriptor fd is open and connected to atty(-like) device, else False.
alias isatty
    os.isatty(${1:fd})
    # Return True if the file descriptor fd is open and connected to atty(-like) device, else False.
    # https://docs.python.org/2/library/os.html
snippet os_lseek fd_pos_how
abbr Set the current position of file descriptor fd to position pos, modifiedby how: SEEK_SET or 0 to set the position relative to thebeginning o
alias lseek
    os.lseek(${1:fd}, ${2:pos}, ${3:how})
    # Set the current position of file descriptor fd to position pos, modifiedby how: SEEK_SET or 0 to set the position relative to thebeginning o
    # https://docs.python.org/2/library/os.html
snippet os_open file_flags_mode
abbr Open the file file and set various flags according to flags and possibly itsmode according to mode. The default mode is 0777 (octal), and th
alias open
    os.open(${1:file}, ${2:flags}, ${3:mode})
    # Open the file file and set various flags according to flags and possibly itsmode according to mode. The default mode is 0777 (octal), and th
    # https://docs.python.org/2/library/os.html
snippet os_openpty 
abbr Open a new pseudo-terminal pair. Return a pair of file descriptors (master,slave) for the pty and the tty, respectively. For a (slightly) mo
alias openpty
    os.openpty()
    # Open a new pseudo-terminal pair. Return a pair of file descriptors (master,slave) for the pty and the tty, respectively. For a (slightly) mo
    # https://docs.python.org/2/library/os.html
snippet os_pipe 
abbr Create a pipe.  Return a pair of file descriptors (r, w) usable for readingand writing, respectively.
alias pipe
    os.pipe()
    # Create a pipe.  Return a pair of file descriptors (r, w) usable for readingand writing, respectively.
    # https://docs.python.org/2/library/os.html
snippet os_read fd_n
abbr Read at most n bytes from file descriptor fd. Return a string containing thebytes read.  If the end of the file referred to by fd has been r
alias read
    os.read(${1:fd}, ${2:n})
    # Read at most n bytes from file descriptor fd. Return a string containing thebytes read.  If the end of the file referred to by fd has been r
    # https://docs.python.org/2/library/os.html
snippet os_tcgetpgrp fd
abbr Return the process group associated with the terminal given by fd (an openfile descriptor as returned by os.open()).
alias tcgetpgrp
    os.tcgetpgrp(${1:fd})
    # Return the process group associated with the terminal given by fd (an openfile descriptor as returned by os.open()).
    # https://docs.python.org/2/library/os.html
snippet os_tcsetpgrp fd_pg
abbr Set the process group associated with the terminal given by fd (an open filedescriptor as returned by os.open()) to pg.
alias tcsetpgrp
    os.tcsetpgrp(${1:fd}, ${2:pg})
    # Set the process group associated with the terminal given by fd (an open filedescriptor as returned by os.open()) to pg.
    # https://docs.python.org/2/library/os.html
snippet os_ttyname fd
abbr Return a string which specifies the terminal device associated withfile descriptor fd.  If fd is not associated with a terminal device, anex
alias ttyname
    os.ttyname(${1:fd})
    # Return a string which specifies the terminal device associated withfile descriptor fd.  If fd is not associated with a terminal device, anex
    # https://docs.python.org/2/library/os.html
snippet os_write fd_str
abbr Write the string str to file descriptor fd. Return the number of bytesactually written.
alias write
    os.write(${1:fd}, ${2:str})
    # Write the string str to file descriptor fd. Return the number of bytesactually written.
    # https://docs.python.org/2/library/os.html
snippet os_access path_mode
abbr Use the real uid/gid to test for access to path.  Note that most operationswill use the effective uid/gid, therefore this routine can be use
alias access
    os.access(${1:path}, ${2:mode})
    # Use the real uid/gid to test for access to path.  Note that most operationswill use the effective uid/gid, therefore this routine can be use
    # https://docs.python.org/2/library/os.html
snippet os_chdir path
abbr Change the current working directory to path.
alias chdir
    os.chdir(${1:path})
    # Change the current working directory to path.
    # https://docs.python.org/2/library/os.html
snippet os_fchdir fd
abbr Change the current working directory to the directory represented by the filedescriptor fd.  The descriptor must refer to an opened director
alias fchdir
    os.fchdir(${1:fd})
    # Change the current working directory to the directory represented by the filedescriptor fd.  The descriptor must refer to an opened director
    # https://docs.python.org/2/library/os.html
snippet os_getcwd 
abbr Return a string representing the current working directory.
alias getcwd
    os.getcwd()
    # Return a string representing the current working directory.
    # https://docs.python.org/2/library/os.html
snippet os_getcwdu 
abbr Return a Unicode object representing the current working directory.
alias getcwdu
    os.getcwdu()
    # Return a Unicode object representing the current working directory.
    # https://docs.python.org/2/library/os.html
snippet os_chflags path_flags
abbr Set the flags of path to the numeric flags. flags may take a combination(bitwise OR) of the following values (as defined in the stat module)
alias chflags
    os.chflags(${1:path}, ${2:flags})
    # Set the flags of path to the numeric flags. flags may take a combination(bitwise OR) of the following values (as defined in the stat module)
    # https://docs.python.org/2/library/os.html
snippet os_chroot path
abbr Change the root directory of the current process to path. Availability:Unix.
alias chroot
    os.chroot(${1:path})
    # Change the root directory of the current process to path. Availability:Unix.
    # https://docs.python.org/2/library/os.html
snippet os_chmod path_mode
abbr Change the mode of path to the numeric mode. mode may take one of thefollowing values (as defined in the stat module) or bitwise ORedcombina
alias chmod
    os.chmod(${1:path}, ${2:mode})
    # Change the mode of path to the numeric mode. mode may take one of thefollowing values (as defined in the stat module) or bitwise ORedcombina
    # https://docs.python.org/2/library/os.html
snippet os_chown path_uid_gid
abbr Change the owner and group id of path to the numeric uid and gid. To leaveone of the ids unchanged, set it to -1.
alias chown
    os.chown(${1:path}, ${2:uid}, ${3:gid})
    # Change the owner and group id of path to the numeric uid and gid. To leaveone of the ids unchanged, set it to -1.
    # https://docs.python.org/2/library/os.html
snippet os_lchflags path_flags
abbr Set the flags of path to the numeric flags, like chflags(), but do notfollow symbolic links.
alias lchflags
    os.lchflags(${1:path}, ${2:flags})
    # Set the flags of path to the numeric flags, like chflags(), but do notfollow symbolic links.
    # https://docs.python.org/2/library/os.html
snippet os_lchmod path_mode
abbr Change the mode of path to the numeric mode. If path is a symlink, thisaffects the symlink rather than the target. See the docs for chmod()f
alias lchmod
    os.lchmod(${1:path}, ${2:mode})
    # Change the mode of path to the numeric mode. If path is a symlink, thisaffects the symlink rather than the target. See the docs for chmod()f
    # https://docs.python.org/2/library/os.html
snippet os_lchown path_uid_gid
abbr Change the owner and group id of path to the numeric uid and gid. Thisfunction will not follow symbolic links.
alias lchown
    os.lchown(${1:path}, ${2:uid}, ${3:gid})
    # Change the owner and group id of path to the numeric uid and gid. Thisfunction will not follow symbolic links.
    # https://docs.python.org/2/library/os.html
snippet os_link source_link_name
abbr Create a hard link pointing to source named link_name.
alias link
    os.link(${1:source}, ${2:link_name})
    # Create a hard link pointing to source named link_name.
    # https://docs.python.org/2/library/os.html
snippet os_listdir path
abbr Return a list containing the names of the entries in the directory given bypath.  The list is in arbitrary order.  It does not include the s
alias listdir
    os.listdir(${1:path})
    # Return a list containing the names of the entries in the directory given bypath.  The list is in arbitrary order.  It does not include the s
    # https://docs.python.org/2/library/os.html
snippet os_lstat path
abbr Perform the equivalent of an lstat() system call on the given path.Similar to stat(), but does not follow symbolic links.  Onplatforms that 
alias lstat
    os.lstat(${1:path})
    # Perform the equivalent of an lstat() system call on the given path.Similar to stat(), but does not follow symbolic links.  Onplatforms that 
    # https://docs.python.org/2/library/os.html
snippet os_mkfifo path_mode
abbr Create a FIFO (a named pipe) named path with numeric mode mode.  The defaultmode is 0666 (octal).  The current umask value is first masked o
alias mkfifo
    os.mkfifo(${1:path}, ${2:mode})
    # Create a FIFO (a named pipe) named path with numeric mode mode.  The defaultmode is 0666 (octal).  The current umask value is first masked o
    # https://docs.python.org/2/library/os.html
snippet os_mknod filename_mode=0600_device=0
abbr Create a filesystem node (file, device special file or named pipe) namedfilename. mode specifies both the permissions to use and the type of
alias mknod
    os.mknod(${1:filename}, ${2:mode=0600}, ${3:device=0})
    # Create a filesystem node (file, device special file or named pipe) namedfilename. mode specifies both the permissions to use and the type of
    # https://docs.python.org/2/library/os.html
snippet os_major device
abbr Extract the device major number from a raw device number (usually thest_dev or st_rdev field from stat).
alias major
    os.major(${1:device})
    # Extract the device major number from a raw device number (usually thest_dev or st_rdev field from stat).
    # https://docs.python.org/2/library/os.html
snippet os_minor device
abbr Extract the device minor number from a raw device number (usually thest_dev or st_rdev field from stat).
alias minor
    os.minor(${1:device})
    # Extract the device minor number from a raw device number (usually thest_dev or st_rdev field from stat).
    # https://docs.python.org/2/library/os.html
snippet os_makedev major_minor
abbr Compose a raw device number from the major and minor device numbers.
alias makedev
    os.makedev(${1:major}, ${2:minor})
    # Compose a raw device number from the major and minor device numbers.
    # https://docs.python.org/2/library/os.html
snippet os_mkdir path_mode
abbr Create a directory named path with numeric mode mode. The default mode is0777 (octal).  On some systems, mode is ignored.  Where it is used,
alias mkdir
    os.mkdir(${1:path}, ${2:mode})
    # Create a directory named path with numeric mode mode. The default mode is0777 (octal).  On some systems, mode is ignored.  Where it is used,
    # https://docs.python.org/2/library/os.html
snippet os_makedirs path_mode
abbr Recursive directory creation function.  Like mkdir(), but makes allintermediate-level directories needed to contain the leaf directory.  Rai
alias makedirs
    os.makedirs(${1:path}, ${2:mode})
    # Recursive directory creation function.  Like mkdir(), but makes allintermediate-level directories needed to contain the leaf directory.  Rai
    # https://docs.python.org/2/library/os.html
snippet os_pathconf path_name
abbr Return system configuration information relevant to a named file. namespecifies the configuration value to retrieve; it may be a string whic
alias pathconf
    os.pathconf(${1:path}, ${2:name})
    # Return system configuration information relevant to a named file. namespecifies the configuration value to retrieve; it may be a string whic
    # https://docs.python.org/2/library/os.html
snippet os_readlink path
abbr Return a string representing the path to which the symbolic link points.  Theresult may be either an absolute or relative pathname; if it is
alias readlink
    os.readlink(${1:path})
    # Return a string representing the path to which the symbolic link points.  Theresult may be either an absolute or relative pathname; if it is
    # https://docs.python.org/2/library/os.html
snippet os_remove path
abbr Remove (delete) the file path.  If path is a directory, OSError israised; see rmdir() below to remove a directory.  This is identical tothe 
alias remove
    os.remove(${1:path})
    # Remove (delete) the file path.  If path is a directory, OSError israised; see rmdir() below to remove a directory.  This is identical tothe 
    # https://docs.python.org/2/library/os.html
snippet os_removedirs path
abbr Remove directories recursively.  Works like rmdir() except that, if theleaf directory is successfully removed, removedirs()  tries tosuccess
alias removedirs
    os.removedirs(${1:path})
    # Remove directories recursively.  Works like rmdir() except that, if theleaf directory is successfully removed, removedirs()  tries tosuccess
    # https://docs.python.org/2/library/os.html
snippet os_rename src_dst
abbr Rename the file or directory src to dst.  If dst is a directory,OSError will be raised.  On Unix, if dst exists and is a file, it willbe rep
alias rename
    os.rename(${1:src}, ${2:dst})
    # Rename the file or directory src to dst.  If dst is a directory,OSError will be raised.  On Unix, if dst exists and is a file, it willbe rep
    # https://docs.python.org/2/library/os.html
snippet os_renames old_new
abbr Recursive directory or file renaming function. Works like rename(), exceptcreation of any intermediate directories needed to make the new pa
alias renames
    os.renames(${1:old}, ${2:new})
    # Recursive directory or file renaming function. Works like rename(), exceptcreation of any intermediate directories needed to make the new pa
    # https://docs.python.org/2/library/os.html
snippet os_rmdir path
abbr Remove (delete) the directory path.  Only works when the directory isempty, otherwise, OSError is raised.  In order to remove wholedirectory
alias rmdir
    os.rmdir(${1:path})
    # Remove (delete) the directory path.  Only works when the directory isempty, otherwise, OSError is raised.  In order to remove wholedirectory
    # https://docs.python.org/2/library/os.html
snippet os_stat path
abbr Perform the equivalent of a stat() system call on the given path.(This function follows symlinks; to stat a symlink use lstat().)
alias stat
    os.stat(${1:path})
    # Perform the equivalent of a stat() system call on the given path.(This function follows symlinks; to stat a symlink use lstat().)
    # https://docs.python.org/2/library/os.html
snippet os_stat_float_times newvalue
abbr Determine whether stat_result represents time stamps as float objects.If newvalue is True, future calls to stat() return floats, if it isFal
alias stat_float_times
    os.stat_float_times(${1:newvalue})
    # Determine whether stat_result represents time stamps as float objects.If newvalue is True, future calls to stat() return floats, if it isFal
    # https://docs.python.org/2/library/os.html
snippet os_statvfs path
abbr Perform a statvfs() system call on the given path.  The return value isan object whose attributes describe the filesystem on the given path,
alias statvfs
    os.statvfs(${1:path})
    # Perform a statvfs() system call on the given path.  The return value isan object whose attributes describe the filesystem on the given path,
    # https://docs.python.org/2/library/os.html
snippet os_symlink source_link_name
abbr Create a symbolic link pointing to source named link_name.
alias symlink
    os.symlink(${1:source}, ${2:link_name})
    # Create a symbolic link pointing to source named link_name.
    # https://docs.python.org/2/library/os.html
snippet os_tempnam dir_prefix
abbr Return a unique path name that is reasonable for creating a temporary file.This will be an absolute path that names a potential directory en
alias tempnam
    os.tempnam(${1:dir}, ${2:prefix})
    # Return a unique path name that is reasonable for creating a temporary file.This will be an absolute path that names a potential directory en
    # https://docs.python.org/2/library/os.html
snippet os_tmpnam 
abbr Return a unique path name that is reasonable for creating a temporary file.This will be an absolute path that names a potential directory en
alias tmpnam
    os.tmpnam()
    # Return a unique path name that is reasonable for creating a temporary file.This will be an absolute path that names a potential directory en
    # https://docs.python.org/2/library/os.html
snippet os_unlink path
abbr Remove (delete) the file path.  This is the same function asremove(); the unlink() name is its traditional Unixname.
alias unlink
    os.unlink(${1:path})
    # Remove (delete) the file path.  This is the same function asremove(); the unlink() name is its traditional Unixname.
    # https://docs.python.org/2/library/os.html
snippet os_utime path_times
abbr Set the access and modified times of the file specified by path. If timesis None, then the file’s access and modified times are set to the c
alias utime
    os.utime(${1:path}, ${2:times})
    # Set the access and modified times of the file specified by path. If timesis None, then the file’s access and modified times are set to the c
    # https://docs.python.org/2/library/os.html
snippet os_walk top_topdown=True_onerror=None_followlinks=False
abbr Generate the file names in a directory tree by walking the treeeither top-down or bottom-up. For each directory in the tree rooted at direct
alias walk
    os.walk(${1:top}, ${2:topdown=True}, ${3:onerror=None}, ${4:followlinks=False})
    # Generate the file names in a directory tree by walking the treeeither top-down or bottom-up. For each directory in the tree rooted at direct
    # https://docs.python.org/2/library/os.html
snippet os_abort 
abbr Generate a SIGABRT signal to the current process.  On Unix, the defaultbehavior is to produce a core dump; on Windows, the process immediate
alias abort
    os.abort()
    # Generate a SIGABRT signal to the current process.  On Unix, the defaultbehavior is to produce a core dump; on Windows, the process immediate
    # https://docs.python.org/2/library/os.html
snippet os_execl path_arg0_arg1_...
abbr These functions all execute a new program, replacing the current process; theydo not return.  On Unix, the new executable is loaded into the
alias execl
    os.execl(${1:path}, ${2:arg0}, ${3:arg1}, ${4:...})
    # These functions all execute a new program, replacing the current process; theydo not return.  On Unix, the new executable is loaded into the
    # https://docs.python.org/2/library/os.html
snippet os_execle path_arg0_arg1_..._env
abbr These functions all execute a new program, replacing the current process; theydo not return.  On Unix, the new executable is loaded into the
alias execle
    os.execle(${1:path}, ${2:arg0}, ${3:arg1}, ${4:...}, ${5:env})
    # These functions all execute a new program, replacing the current process; theydo not return.  On Unix, the new executable is loaded into the
    # https://docs.python.org/2/library/os.html
snippet os_execlp file_arg0_arg1_...
abbr These functions all execute a new program, replacing the current process; theydo not return.  On Unix, the new executable is loaded into the
alias execlp
    os.execlp(${1:file}, ${2:arg0}, ${3:arg1}, ${4:...})
    # These functions all execute a new program, replacing the current process; theydo not return.  On Unix, the new executable is loaded into the
    # https://docs.python.org/2/library/os.html
snippet os_execlpe file_arg0_arg1_..._env
abbr These functions all execute a new program, replacing the current process; theydo not return.  On Unix, the new executable is loaded into the
alias execlpe
    os.execlpe(${1:file}, ${2:arg0}, ${3:arg1}, ${4:...}, ${5:env})
    # These functions all execute a new program, replacing the current process; theydo not return.  On Unix, the new executable is loaded into the
    # https://docs.python.org/2/library/os.html
snippet os_execv path_args
abbr These functions all execute a new program, replacing the current process; theydo not return.  On Unix, the new executable is loaded into the
alias execv
    os.execv(${1:path}, ${2:args})
    # These functions all execute a new program, replacing the current process; theydo not return.  On Unix, the new executable is loaded into the
    # https://docs.python.org/2/library/os.html
snippet os_execve path_args_env
abbr These functions all execute a new program, replacing the current process; theydo not return.  On Unix, the new executable is loaded into the
alias execve
    os.execve(${1:path}, ${2:args}, ${3:env})
    # These functions all execute a new program, replacing the current process; theydo not return.  On Unix, the new executable is loaded into the
    # https://docs.python.org/2/library/os.html
snippet os_execvp file_args
abbr These functions all execute a new program, replacing the current process; theydo not return.  On Unix, the new executable is loaded into the
alias execvp
    os.execvp(${1:file}, ${2:args})
    # These functions all execute a new program, replacing the current process; theydo not return.  On Unix, the new executable is loaded into the
    # https://docs.python.org/2/library/os.html
snippet os_execvpe file_args_env
abbr These functions all execute a new program, replacing the current process; theydo not return.  On Unix, the new executable is loaded into the
alias execvpe
    os.execvpe(${1:file}, ${2:args}, ${3:env})
    # These functions all execute a new program, replacing the current process; theydo not return.  On Unix, the new executable is loaded into the
    # https://docs.python.org/2/library/os.html
snippet os__exit n
abbr Exit the process with status n, without calling cleanup handlers, flushingstdio buffers, etc.
alias _exit
    os._exit(${1:n})
    # Exit the process with status n, without calling cleanup handlers, flushingstdio buffers, etc.
    # https://docs.python.org/2/library/os.html
snippet os_fork 
abbr Fork a child process.  Return 0 in the child and the child’s process id in theparent.  If an error occurs OSError is raised.
alias fork
    os.fork()
    # Fork a child process.  Return 0 in the child and the child’s process id in theparent.  If an error occurs OSError is raised.
    # https://docs.python.org/2/library/os.html
snippet os_forkpty 
abbr Fork a child process, using a new pseudo-terminal as the child’s controllingterminal. Return a pair of (pid, fd), where pid is 0 in the chil
alias forkpty
    os.forkpty()
    # Fork a child process, using a new pseudo-terminal as the child’s controllingterminal. Return a pair of (pid, fd), where pid is 0 in the chil
    # https://docs.python.org/2/library/os.html
snippet os_kill pid_sig
abbr Send signal sig to the process pid.  Constants for the specific signalsavailable on the host platform are defined in the signal module.
alias kill
    os.kill(${1:pid}, ${2:sig})
    # Send signal sig to the process pid.  Constants for the specific signalsavailable on the host platform are defined in the signal module.
    # https://docs.python.org/2/library/os.html
snippet os_killpg pgid_sig
abbr Send the signal sig to the process group pgid.
alias killpg
    os.killpg(${1:pgid}, ${2:sig})
    # Send the signal sig to the process group pgid.
    # https://docs.python.org/2/library/os.html
snippet os_nice increment
abbr Add increment to the process’s “niceness”.  Return the new niceness.
alias nice
    os.nice(${1:increment})
    # Add increment to the process’s “niceness”.  Return the new niceness.
    # https://docs.python.org/2/library/os.html
snippet os_plock op
abbr Lock program segments into memory.  The value of op (defined in<sys/lock.h>) determines which segments are locked.
alias plock
    os.plock(${1:op})
    # Lock program segments into memory.  The value of op (defined in<sys/lock.h>) determines which segments are locked.
    # https://docs.python.org/2/library/os.html
snippet os_spawnl mode_path_...
abbr Execute the program path in a new process.
alias spawnl
    os.spawnl(${1:mode}, ${2:path}, ${3:...})
    # Execute the program path in a new process.
    # https://docs.python.org/2/library/os.html
snippet os_spawnle mode_path_..._env
abbr Execute the program path in a new process.
alias spawnle
    os.spawnle(${1:mode}, ${2:path}, ${3:...}, ${4:env})
    # Execute the program path in a new process.
    # https://docs.python.org/2/library/os.html
snippet os_spawnlp mode_file_...
abbr Execute the program path in a new process.
alias spawnlp
    os.spawnlp(${1:mode}, ${2:file}, ${3:...})
    # Execute the program path in a new process.
    # https://docs.python.org/2/library/os.html
snippet os_spawnlpe mode_file_..._env
abbr Execute the program path in a new process.
alias spawnlpe
    os.spawnlpe(${1:mode}, ${2:file}, ${3:...}, ${4:env})
    # Execute the program path in a new process.
    # https://docs.python.org/2/library/os.html
snippet os_spawnv mode_path_args
abbr Execute the program path in a new process.
alias spawnv
    os.spawnv(${1:mode}, ${2:path}, ${3:args})
    # Execute the program path in a new process.
    # https://docs.python.org/2/library/os.html
snippet os_spawnve mode_path_args_env
abbr Execute the program path in a new process.
alias spawnve
    os.spawnve(${1:mode}, ${2:path}, ${3:args}, ${4:env})
    # Execute the program path in a new process.
    # https://docs.python.org/2/library/os.html
snippet os_spawnvp mode_file_args
abbr Execute the program path in a new process.
alias spawnvp
    os.spawnvp(${1:mode}, ${2:file}, ${3:args})
    # Execute the program path in a new process.
    # https://docs.python.org/2/library/os.html
snippet os_spawnvpe mode_file_args_env
abbr Execute the program path in a new process.
alias spawnvpe
    os.spawnvpe(${1:mode}, ${2:file}, ${3:args}, ${4:env})
    # Execute the program path in a new process.
    # https://docs.python.org/2/library/os.html
snippet os_startfile path_operation
abbr Start a file with its associated application.
alias startfile
    os.startfile(${1:path}, ${2:operation})
    # Start a file with its associated application.
    # https://docs.python.org/2/library/os.html
snippet os_system command
abbr Execute the command (a string) in a subshell.  This is implemented by callingthe Standard C function system(), and has the same limitations.
alias system
    os.system(${1:command})
    # Execute the command (a string) in a subshell.  This is implemented by callingthe Standard C function system(), and has the same limitations.
    # https://docs.python.org/2/library/os.html
snippet os_times 
abbr Return a 5-tuple of floating point numbers indicating accumulated (processoror other) times, in seconds.  The items are: user time, system t
alias times
    os.times()
    # Return a 5-tuple of floating point numbers indicating accumulated (processoror other) times, in seconds.  The items are: user time, system t
    # https://docs.python.org/2/library/os.html
snippet os_wait 
abbr Wait for completion of a child process, and return a tuple containing its pidand exit status indication: a 16-bit number, whose low byte is 
alias wait
    os.wait()
    # Wait for completion of a child process, and return a tuple containing its pidand exit status indication: a 16-bit number, whose low byte is 
    # https://docs.python.org/2/library/os.html
snippet os_waitpid pid_options
abbr The details of this function differ on Unix and Windows.
alias waitpid
    os.waitpid(${1:pid}, ${2:options})
    # The details of this function differ on Unix and Windows.
    # https://docs.python.org/2/library/os.html
snippet os_wait3 options
abbr Similar to waitpid(), except no process id argument is given and a3-element tuple containing the child’s process id, exit status indication,
alias wait3
    os.wait3(${1:options})
    # Similar to waitpid(), except no process id argument is given and a3-element tuple containing the child’s process id, exit status indication,
    # https://docs.python.org/2/library/os.html
snippet os_wait4 pid_options
abbr Similar to waitpid(), except a 3-element tuple, containing the child’sprocess id, exit status indication, and resource usage information is 
alias wait4
    os.wait4(${1:pid}, ${2:options})
    # Similar to waitpid(), except a 3-element tuple, containing the child’sprocess id, exit status indication, and resource usage information is 
    # https://docs.python.org/2/library/os.html
snippet os_WCOREDUMP status
abbr Return True if a core dump was generated for the process, otherwisereturn False.
alias WCOREDUMP
    os.WCOREDUMP(${1:status})
    # Return True if a core dump was generated for the process, otherwisereturn False.
    # https://docs.python.org/2/library/os.html
snippet os_WIFCONTINUED status
abbr Return True if the process has been continued from a job control stop,otherwise return False.
alias WIFCONTINUED
    os.WIFCONTINUED(${1:status})
    # Return True if the process has been continued from a job control stop,otherwise return False.
    # https://docs.python.org/2/library/os.html
snippet os_WIFSTOPPED status
abbr Return True if the process has been stopped, otherwise returnFalse.
alias WIFSTOPPED
    os.WIFSTOPPED(${1:status})
    # Return True if the process has been stopped, otherwise returnFalse.
    # https://docs.python.org/2/library/os.html
snippet os_WIFSIGNALED status
abbr Return True if the process exited due to a signal, otherwise returnFalse.
alias WIFSIGNALED
    os.WIFSIGNALED(${1:status})
    # Return True if the process exited due to a signal, otherwise returnFalse.
    # https://docs.python.org/2/library/os.html
snippet os_WIFEXITED status
abbr Return True if the process exited using the exit(2) system call,otherwise return False.
alias WIFEXITED
    os.WIFEXITED(${1:status})
    # Return True if the process exited using the exit(2) system call,otherwise return False.
    # https://docs.python.org/2/library/os.html
snippet os_WEXITSTATUS status
abbr If WIFEXITED(status) is true, return the integer parameter to theexit(2) system call.  Otherwise, the return value is meaningless.
alias WEXITSTATUS
    os.WEXITSTATUS(${1:status})
    # If WIFEXITED(status) is true, return the integer parameter to theexit(2) system call.  Otherwise, the return value is meaningless.
    # https://docs.python.org/2/library/os.html
snippet os_WSTOPSIG status
abbr Return the signal which caused the process to stop.
alias WSTOPSIG
    os.WSTOPSIG(${1:status})
    # Return the signal which caused the process to stop.
    # https://docs.python.org/2/library/os.html
snippet os_WTERMSIG status
abbr Return the signal which caused the process to exit.
alias WTERMSIG
    os.WTERMSIG(${1:status})
    # Return the signal which caused the process to exit.
    # https://docs.python.org/2/library/os.html
snippet os_confstr name
abbr Return string-valued system configuration values. name specifies theconfiguration value to retrieve; it may be a string which is the name of
alias confstr
    os.confstr(${1:name})
    # Return string-valued system configuration values. name specifies theconfiguration value to retrieve; it may be a string which is the name of
    # https://docs.python.org/2/library/os.html
snippet os_getloadavg 
abbr Return the number of processes in the system run queue averaged over the last1, 5, and 15 minutes or raises OSError if the load average wasu
alias getloadavg
    os.getloadavg()
    # Return the number of processes in the system run queue averaged over the last1, 5, and 15 minutes or raises OSError if the load average wasu
    # https://docs.python.org/2/library/os.html
snippet os_sysconf name
abbr Return integer-valued system configuration values. If the configuration valuespecified by name isn’t defined, -1 is returned.  The comments 
alias sysconf
    os.sysconf(${1:name})
    # Return integer-valued system configuration values. If the configuration valuespecified by name isn’t defined, -1 is returned.  The comments 
    # https://docs.python.org/2/library/os.html
snippet os_urandom n
abbr Return a string of n random bytes suitable for cryptographic use.
alias urandom
    os.urandom(${1:n})
    # Return a string of n random bytes suitable for cryptographic use.
    # https://docs.python.org/2/library/os.html

snippet os_path_abspath path
abbr Return a normalized absolutized version of the pathname path. On mostplatforms, this is equivalent to calling the function normpath() asfoll
alias abspath
    os.path.abspath(${1:path})
    # Return a normalized absolutized version of the pathname path. On mostplatforms, this is equivalent to calling the function normpath() asfoll
    # https://docs.python.org/2/library/os.path.html
snippet os_path_basename path
abbr Return the base name of pathname path.  This is the second element of thepair returned by passing path to the function split().  Note thatth
alias basename
    os.path.basename(${1:path})
    # Return the base name of pathname path.  This is the second element of thepair returned by passing path to the function split().  Note thatth
    # https://docs.python.org/2/library/os.path.html
snippet os_path_commonprefix list
abbr Return the longest path prefix (taken character-by-character) that is a prefixof all paths in  list.  If list is empty, return the empty str
alias commonprefix
    os.path.commonprefix(${1:list})
    # Return the longest path prefix (taken character-by-character) that is a prefixof all paths in  list.  If list is empty, return the empty str
    # https://docs.python.org/2/library/os.path.html
snippet os_path_dirname path
abbr Return the directory name of pathname path.  This is the first element ofthe pair returned by passing path to the function split().
alias dirname
    os.path.dirname(${1:path})
    # Return the directory name of pathname path.  This is the first element ofthe pair returned by passing path to the function split().
    # https://docs.python.org/2/library/os.path.html
snippet os_path_exists path
abbr Return True if path refers to an existing path.  Returns False forbroken symbolic links. On some platforms, this function may return False i
alias exists
    os.path.exists(${1:path})
    # Return True if path refers to an existing path.  Returns False forbroken symbolic links. On some platforms, this function may return False i
    # https://docs.python.org/2/library/os.path.html
snippet os_path_lexists path
abbr Return True if path refers to an existing path. Returns True forbroken symbolic links.   Equivalent to exists() on platforms lackingos.lstat
alias lexists
    os.path.lexists(${1:path})
    # Return True if path refers to an existing path. Returns True forbroken symbolic links.   Equivalent to exists() on platforms lackingos.lstat
    # https://docs.python.org/2/library/os.path.html
snippet os_path_expanduser path
abbr On Unix and Windows, return the argument with an initial component of ~ or~user replaced by that user‘s home directory.
alias expanduser
    os.path.expanduser(${1:path})
    # On Unix and Windows, return the argument with an initial component of ~ or~user replaced by that user‘s home directory.
    # https://docs.python.org/2/library/os.path.html
snippet os_path_expandvars path
abbr Return the argument with environment variables expanded.  Substrings of the form$name or ${name} are replaced by the value of environment va
alias expandvars
    os.path.expandvars(${1:path})
    # Return the argument with environment variables expanded.  Substrings of the form$name or ${name} are replaced by the value of environment va
    # https://docs.python.org/2/library/os.path.html
snippet os_path_getatime path
abbr Return the time of last access of path.  The return value is a number givingthe number of seconds since the epoch (see the  time module).  R
alias getatime
    os.path.getatime(${1:path})
    # Return the time of last access of path.  The return value is a number givingthe number of seconds since the epoch (see the  time module).  R
    # https://docs.python.org/2/library/os.path.html
snippet os_path_getmtime path
abbr Return the time of last modification of path.  The return value is a numbergiving the number of seconds since the epoch (see the  time modul
alias getmtime
    os.path.getmtime(${1:path})
    # Return the time of last modification of path.  The return value is a numbergiving the number of seconds since the epoch (see the  time modul
    # https://docs.python.org/2/library/os.path.html
snippet os_path_getctime path
abbr Return the system’s ctime which, on some systems (like Unix) is the time of thelast metadata change, and, on others (like Windows), is the c
alias getctime
    os.path.getctime(${1:path})
    # Return the system’s ctime which, on some systems (like Unix) is the time of thelast metadata change, and, on others (like Windows), is the c
    # https://docs.python.org/2/library/os.path.html
snippet os_path_getsize path
abbr Return the size, in bytes, of path.  Raise os.error if the file doesnot exist or is inaccessible.
alias getsize
    os.path.getsize(${1:path})
    # Return the size, in bytes, of path.  Raise os.error if the file doesnot exist or is inaccessible.
    # https://docs.python.org/2/library/os.path.html
snippet os_path_isabs path
abbr Return True if path is an absolute pathname.  On Unix, that means itbegins with a slash, on Windows that it begins with a (back)slash after 
alias isabs
    os.path.isabs(${1:path})
    # Return True if path is an absolute pathname.  On Unix, that means itbegins with a slash, on Windows that it begins with a (back)slash after 
    # https://docs.python.org/2/library/os.path.html
snippet os_path_isfile path
abbr Return True if path is an existing regular file.  This follows symboliclinks, so both islink() and isfile() can be true for the same path.
alias isfile
    os.path.isfile(${1:path})
    # Return True if path is an existing regular file.  This follows symboliclinks, so both islink() and isfile() can be true for the same path.
    # https://docs.python.org/2/library/os.path.html
snippet os_path_isdir path
abbr Return True if path is an existing directory.  This follows symboliclinks, so both islink() and isdir() can be true for the same path.
alias isdir
    os.path.isdir(${1:path})
    # Return True if path is an existing directory.  This follows symboliclinks, so both islink() and isdir() can be true for the same path.
    # https://docs.python.org/2/library/os.path.html
snippet os_path_islink path
abbr Return True if path refers to a directory entry that is a symbolic link.Always False if symbolic links are not supported by the python runti
alias islink
    os.path.islink(${1:path})
    # Return True if path refers to a directory entry that is a symbolic link.Always False if symbolic links are not supported by the python runti
    # https://docs.python.org/2/library/os.path.html
snippet os_path_ismount path
abbr Return True if pathname path is a mount point: a point in a filesystem where a different file system has been mounted.  The function checksw
alias ismount
    os.path.ismount(${1:path})
    # Return True if pathname path is a mount point: a point in a filesystem where a different file system has been mounted.  The function checksw
    # https://docs.python.org/2/library/os.path.html
snippet os_path_join path1_path2_...
abbr Join one or more path components intelligently.  If any component is an absolutepath, all previous components (on Windows, including the pre
alias join
    os.path.join(${1:path1}, ${2:path2}, ${3:...})
    # Join one or more path components intelligently.  If any component is an absolutepath, all previous components (on Windows, including the pre
    # https://docs.python.org/2/library/os.path.html
snippet os_path_normcase path
abbr Normalize the case of a pathname.  On Unix and Mac OS X, this returns thepath unchanged; on case-insensitive filesystems, it converts the pa
alias normcase
    os.path.normcase(${1:path})
    # Normalize the case of a pathname.  On Unix and Mac OS X, this returns thepath unchanged; on case-insensitive filesystems, it converts the pa
    # https://docs.python.org/2/library/os.path.html
snippet os_path_normpath path
abbr Normalize a pathname by collapsing redundant separators and up-levelreferences so that A//B, A/B/, A/./B and A/foo/../B allbecome A/B.  This
alias normpath
    os.path.normpath(${1:path})
    # Normalize a pathname by collapsing redundant separators and up-levelreferences so that A//B, A/B/, A/./B and A/foo/../B allbecome A/B.  This
    # https://docs.python.org/2/library/os.path.html
snippet os_path_realpath path
abbr Return the canonical path of the specified filename, eliminating any symboliclinks encountered in the path (if they are supported by the ope
alias realpath
    os.path.realpath(${1:path})
    # Return the canonical path of the specified filename, eliminating any symboliclinks encountered in the path (if they are supported by the ope
    # https://docs.python.org/2/library/os.path.html
snippet os_path_relpath path_start
abbr Return a relative filepath to path either from the current directory orfrom an optional start directory.  This is a path computation:  thefi
alias relpath
    os.path.relpath(${1:path}, ${2:start})
    # Return a relative filepath to path either from the current directory orfrom an optional start directory.  This is a path computation:  thefi
    # https://docs.python.org/2/library/os.path.html
snippet os_path_samefile path1_path2
abbr Return True if both pathname arguments refer to the same file or directory(as indicated by device number and i-node number). Raise an except
alias samefile
    os.path.samefile(${1:path1}, ${2:path2})
    # Return True if both pathname arguments refer to the same file or directory(as indicated by device number and i-node number). Raise an except
    # https://docs.python.org/2/library/os.path.html
snippet os_path_sameopenfile fp1_fp2
abbr Return True if the file descriptors fp1 and fp2 refer to the same file.
alias sameopenfile
    os.path.sameopenfile(${1:fp1}, ${2:fp2})
    # Return True if the file descriptors fp1 and fp2 refer to the same file.
    # https://docs.python.org/2/library/os.path.html
snippet os_path_samestat stat1_stat2
abbr Return True if the stat tuples stat1 and stat2 refer to the same file.These structures may have been returned by os.fstat(),os.lstat(), or o
alias samestat
    os.path.samestat(${1:stat1}, ${2:stat2})
    # Return True if the stat tuples stat1 and stat2 refer to the same file.These structures may have been returned by os.fstat(),os.lstat(), or o
    # https://docs.python.org/2/library/os.path.html
snippet os_path_split path
abbr Split the pathname path into a pair, (head, tail) where tail is thelast pathname component and head is everything leading up to that.  Theta
alias split
    os.path.split(${1:path})
    # Split the pathname path into a pair, (head, tail) where tail is thelast pathname component and head is everything leading up to that.  Theta
    # https://docs.python.org/2/library/os.path.html
snippet os_path_splitdrive path
abbr Split the pathname path into a pair (drive, tail) where drive is eithera drive specification or the empty string.  On systems which do not u
alias splitdrive
    os.path.splitdrive(${1:path})
    # Split the pathname path into a pair (drive, tail) where drive is eithera drive specification or the empty string.  On systems which do not u
    # https://docs.python.org/2/library/os.path.html
snippet os_path_splitext path
abbr Split the pathname path into a pair (root, ext)  such that root + ext ==path, and ext is empty or begins with a period and contains at most 
alias splitext
    os.path.splitext(${1:path})
    # Split the pathname path into a pair (root, ext)  such that root + ext ==path, and ext is empty or begins with a period and contains at most 
    # https://docs.python.org/2/library/os.path.html
snippet os_path_splitunc path
abbr Split the pathname path into a pair (unc, rest) so that unc is the UNCmount point (such as r'\\host\mount'), if present, and rest the rest o
alias splitunc
    os.path.splitunc(${1:path})
    # Split the pathname path into a pair (unc, rest) so that unc is the UNCmount point (such as r'\\host\mount'), if present, and rest the rest o
    # https://docs.python.org/2/library/os.path.html
snippet os_path_walk path_visit_arg
abbr Calls the function visit with arguments (arg, dirname, names) for eachdirectory in the directory tree rooted at path (including path itself,
alias walk
    os.path.walk(${1:path}, ${2:visit}, ${3:arg})
    # Calls the function visit with arguments (arg, dirname, names) for eachdirectory in the directory tree rooted at path (including path itself,
    # https://docs.python.org/2/library/os.path.html

snippet ossaudiodev_open mode
abbr Open an audio device and return an OSS audio device object.  This objectsupports many file-like methods, such as read(), write(), andfileno(
alias open
    ossaudiodev.open(${1:mode})
    # Open an audio device and return an OSS audio device object.  This objectsupports many file-like methods, such as read(), write(), andfileno(
    # https://docs.python.org/2/library/ossaudiodev.html
snippet ossaudiodev_openmixer device
abbr Open a mixer device and return an OSS mixer device object.   device is themixer device filename to use.  If it is not specified, this module
alias openmixer
    ossaudiodev.openmixer(${1:device})
    # Open a mixer device and return an OSS mixer device object.   device is themixer device filename to use.  If it is not specified, this module
    # https://docs.python.org/2/library/ossaudiodev.html



snippet parser_expr source
abbr The expr() function parses the parameter source as if it were an inputto compile(source, 'file.py', 'eval').  If the parse succeeds, an ST o
alias expr
    parser.expr(${1:source})
    # The expr() function parses the parameter source as if it were an inputto compile(source, 'file.py', 'eval').  If the parse succeeds, an ST o
    # https://docs.python.org/2/library/parser.html
snippet parser_suite source
abbr The suite() function parses the parameter source as if it were an inputto compile(source, 'file.py', 'exec').  If the parse succeeds, an ST 
alias suite
    parser.suite(${1:source})
    # The suite() function parses the parameter source as if it were an inputto compile(source, 'file.py', 'exec').  If the parse succeeds, an ST 
    # https://docs.python.org/2/library/parser.html
snippet parser_sequence2st sequence
abbr This function accepts a parse tree represented as a sequence and builds aninternal representation if possible.  If it can validate that the 
alias sequence2st
    parser.sequence2st(${1:sequence})
    # This function accepts a parse tree represented as a sequence and builds aninternal representation if possible.  If it can validate that the 
    # https://docs.python.org/2/library/parser.html
snippet parser_tuple2st sequence
abbr This is the same function as sequence2st().  This entry point ismaintained for backward compatibility.
alias tuple2st
    parser.tuple2st(${1:sequence})
    # This is the same function as sequence2st().  This entry point ismaintained for backward compatibility.
    # https://docs.python.org/2/library/parser.html
snippet parser_st2list ast_line_info
abbr This function accepts an ST object from the caller in ast and returns aPython list representing the equivalent parse tree.  The resulting li
alias st2list
    parser.st2list(${1:ast}, ${2:line_info})
    # This function accepts an ST object from the caller in ast and returns aPython list representing the equivalent parse tree.  The resulting li
    # https://docs.python.org/2/library/parser.html
snippet parser_st2tuple ast_line_info
abbr This function accepts an ST object from the caller in ast and returns aPython tuple representing the equivalent parse tree.  Other than retu
alias st2tuple
    parser.st2tuple(${1:ast}, ${2:line_info})
    # This function accepts an ST object from the caller in ast and returns aPython tuple representing the equivalent parse tree.  Other than retu
    # https://docs.python.org/2/library/parser.html
snippet parser_compilest ast_filename='<syntax-tree>'
abbr The Python byte compiler can be invoked on an ST object to produce code objectswhich can be used as part of an exec statement or a call to t
alias compilest
    parser.compilest(${1:ast}, ${2:filename='<syntax-tree>'})
    # The Python byte compiler can be invoked on an ST object to produce code objectswhich can be used as part of an exec statement or a call to t
    # https://docs.python.org/2/library/parser.html
snippet parser_isexpr ast
abbr When ast represents an 'eval' form, this function returns true, otherwiseit returns false.  This is useful, since code objects normally cann
alias isexpr
    parser.isexpr(${1:ast})
    # When ast represents an 'eval' form, this function returns true, otherwiseit returns false.  This is useful, since code objects normally cann
    # https://docs.python.org/2/library/parser.html
snippet parser_issuite ast
abbr This function mirrors isexpr() in that it reports whether an ST objectrepresents an 'exec' form, commonly known as a “suite.”  It is not saf
alias issuite
    parser.issuite(${1:ast})
    # This function mirrors isexpr() in that it reports whether an ST objectrepresents an 'exec' form, commonly known as a “suite.”  It is not saf
    # https://docs.python.org/2/library/parser.html

snippet pdb_run statement_globals_locals
abbr Execute the statement (given as a string) under debugger control.  Thedebugger prompt appears before any code is executed; you can set break
alias run
    pdb.run(${1:statement}, ${2:globals}, ${3:locals})
    # Execute the statement (given as a string) under debugger control.  Thedebugger prompt appears before any code is executed; you can set break
    # https://docs.python.org/2/library/pdb.html
snippet pdb_runeval expression_globals_locals
abbr Evaluate the expression (given as a string) under debugger control.  Whenruneval() returns, it returns the value of the expression.  Otherwi
alias runeval
    pdb.runeval(${1:expression}, ${2:globals}, ${3:locals})
    # Evaluate the expression (given as a string) under debugger control.  Whenruneval() returns, it returns the value of the expression.  Otherwi
    # https://docs.python.org/2/library/pdb.html
snippet pdb_runcall function_argument_...
abbr Call the function (a function or method object, not a string) with the givenarguments.  When runcall() returns, it returns whatever the func
alias runcall
    pdb.runcall(${1:function}, ${2:argument}, ${3:...})
    # Call the function (a function or method object, not a string) with the givenarguments.  When runcall() returns, it returns whatever the func
    # https://docs.python.org/2/library/pdb.html
snippet pdb_set_trace 
abbr Enter the debugger at the calling stack frame.  This is useful to hard-code abreakpoint at a given point in a program, even if the code is n
alias set_trace
    pdb.set_trace()
    # Enter the debugger at the calling stack frame.  This is useful to hard-code abreakpoint at a given point in a program, even if the code is n
    # https://docs.python.org/2/library/pdb.html
snippet pdb_post_mortem traceback
abbr Enter post-mortem debugging of the given traceback object.  If notraceback is given, it uses the one of the exception that is currentlybeing
alias post_mortem
    pdb.post_mortem(${1:traceback})
    # Enter post-mortem debugging of the given traceback object.  If notraceback is given, it uses the one of the exception that is currentlybeing
    # https://docs.python.org/2/library/pdb.html
snippet pdb_pm 
abbr Enter post-mortem debugging of the traceback found insys.last_traceback.
alias pm
    pdb.pm()
    # Enter post-mortem debugging of the traceback found insys.last_traceback.
    # https://docs.python.org/2/library/pdb.html



snippet pickle_dump obj_file_protocol
abbr Write a pickled representation of obj to the open file object file.  This isequivalent to Pickler(file, protocol).dump(obj).
alias dump
    pickle.dump(${1:obj}, ${2:file}, ${3:protocol})
    # Write a pickled representation of obj to the open file object file.  This isequivalent to Pickler(file, protocol).dump(obj).
    # https://docs.python.org/2/library/pickle.html
snippet pickle_load file
abbr Read a string from the open file object file and interpret it as a pickle datastream, reconstructing and returning the original object hiera
alias load
    pickle.load(${1:file})
    # Read a string from the open file object file and interpret it as a pickle datastream, reconstructing and returning the original object hiera
    # https://docs.python.org/2/library/pickle.html
snippet pickle_dumps obj_protocol
abbr Return the pickled representation of the object as a string, instead of writingit to a file.
alias dumps
    pickle.dumps(${1:obj}, ${2:protocol})
    # Return the pickled representation of the object as a string, instead of writingit to a file.
    # https://docs.python.org/2/library/pickle.html
snippet pickle_loads string
abbr Read a pickled object hierarchy from a string.  Characters in the string pastthe pickled object’s representation are ignored.
alias loads
    pickle.loads(${1:string})
    # Read a pickled object hierarchy from a string.  Characters in the string pastthe pickled object’s representation are ignored.
    # https://docs.python.org/2/library/pickle.html

snippet pickletools_dis pickle_out=None_memo=None_indentlevel=4
abbr Outputs a symbolic disassembly of the pickle to the file-like object out,defaulting to sys.stdout.  pickle can be a string or a file-like ob
alias dis
    pickletools.dis(${1:pickle}, ${2:out=None}, ${3:memo=None}, ${4:indentlevel=4})
    # Outputs a symbolic disassembly of the pickle to the file-like object out,defaulting to sys.stdout.  pickle can be a string or a file-like ob
    # https://docs.python.org/2/library/pickletools.html
snippet pickletools_genops pickle
abbr Provides an iterator over all of the opcodes in a pickle, returning asequence of (opcode, arg, pos) triples.  opcode is an instance of anOpc
alias genops
    pickletools.genops(${1:pickle})
    # Provides an iterator over all of the opcodes in a pickle, returning asequence of (opcode, arg, pos) triples.  opcode is an instance of anOpc
    # https://docs.python.org/2/library/pickletools.html
snippet pickletools_optimize picklestring
abbr Returns a new equivalent pickle string after eliminating unused PUTopcodes. The optimized pickle is shorter, takes less transmission time,re
alias optimize
    pickletools.optimize(${1:picklestring})
    # Returns a new equivalent pickle string after eliminating unused PUTopcodes. The optimized pickle is shorter, takes less transmission time,re
    # https://docs.python.org/2/library/pickletools.html

snippet pipes_quote s
abbr Deprecated since version 2.7: Prior to Python 2.7, this function was not publicly documented.  It isfinally exposed publicly in Python 3.3 a
alias quote
    pipes.quote(${1:s})
    # Deprecated since version 2.7: Prior to Python 2.7, this function was not publicly documented.  It isfinally exposed publicly in Python 3.3 a
    # https://docs.python.org/2/library/pipes.html

snippet pkgutil_extend_path path_name
abbr Extend the search path for the modules which comprise a package.  Intendeduse is to place the following code in a package’s __init__.py:
alias extend_path
    pkgutil.extend_path(${1:path}, ${2:name})
    # Extend the search path for the modules which comprise a package.  Intendeduse is to place the following code in a package’s __init__.py:
    # https://docs.python.org/2/library/pkgutil.html
snippet pkgutil_find_loader fullname
abbr Find a PEP 302 “loader” object for fullname.
alias find_loader
    pkgutil.find_loader(${1:fullname})
    # Find a PEP 302 “loader” object for fullname.
    # https://docs.python.org/2/library/pkgutil.html
snippet pkgutil_get_importer path_item
abbr Retrieve a PEP 302 importer for the given path_item.
alias get_importer
    pkgutil.get_importer(${1:path_item})
    # Retrieve a PEP 302 importer for the given path_item.
    # https://docs.python.org/2/library/pkgutil.html
snippet pkgutil_get_loader module_or_name
abbr Get a PEP 302 “loader” object for module_or_name.
alias get_loader
    pkgutil.get_loader(${1:module_or_name})
    # Get a PEP 302 “loader” object for module_or_name.
    # https://docs.python.org/2/library/pkgutil.html
snippet pkgutil_iter_importers fullname=''
abbr Yield PEP 302 importers for the given module name.
alias iter_importers
    pkgutil.iter_importers(${1:fullname=''})
    # Yield PEP 302 importers for the given module name.
    # https://docs.python.org/2/library/pkgutil.html
snippet pkgutil_iter_modules path=None_prefix=''
abbr Yields (module_loader, name, ispkg) for all submodules on path, or, ifpath is None, all top-level modules on sys.path.
alias iter_modules
    pkgutil.iter_modules(${1:path=None}, ${2:prefix=''})
    # Yields (module_loader, name, ispkg) for all submodules on path, or, ifpath is None, all top-level modules on sys.path.
    # https://docs.python.org/2/library/pkgutil.html
snippet pkgutil_walk_packages path=None_prefix=''_onerror=None
abbr Yields (module_loader, name, ispkg) for all modules recursively onpath, or, if path is None, all accessible modules.
alias walk_packages
    pkgutil.walk_packages(${1:path=None}, ${2:prefix=''}, ${3:onerror=None})
    # Yields (module_loader, name, ispkg) for all modules recursively onpath, or, if path is None, all accessible modules.
    # https://docs.python.org/2/library/pkgutil.html
snippet pkgutil_get_data package_resource
abbr Get a resource from a package.
alias get_data
    pkgutil.get_data(${1:package}, ${2:resource})
    # Get a resource from a package.
    # https://docs.python.org/2/library/pkgutil.html

snippet platform_architecture executable=sys.executable_bits=''_linkage=''
abbr Queries the given executable (defaults to the Python interpreter binary) forvarious architecture information.
alias architecture
    platform.architecture(${1:executable=sys.executable}, ${2:bits=''}, ${3:linkage=''})
    # Queries the given executable (defaults to the Python interpreter binary) forvarious architecture information.
    # https://docs.python.org/2/library/platform.html
snippet platform_machine 
abbr Returns the machine type, e.g. 'i386'. An empty string is returned if thevalue cannot be determined.
alias machine
    platform.machine()
    # Returns the machine type, e.g. 'i386'. An empty string is returned if thevalue cannot be determined.
    # https://docs.python.org/2/library/platform.html
snippet platform_node 
abbr Returns the computer’s network name (may not be fully qualified!). An emptystring is returned if the value cannot be determined.
alias node
    platform.node()
    # Returns the computer’s network name (may not be fully qualified!). An emptystring is returned if the value cannot be determined.
    # https://docs.python.org/2/library/platform.html
snippet platform_platform aliased=0_terse=0
abbr Returns a single string identifying the underlying platform with as much usefulinformation as possible.
alias platform
    platform.platform(${1:aliased=0}, ${2:terse=0})
    # Returns a single string identifying the underlying platform with as much usefulinformation as possible.
    # https://docs.python.org/2/library/platform.html
snippet platform_processor 
abbr Returns the (real) processor name, e.g. 'amdk6'.
alias processor
    platform.processor()
    # Returns the (real) processor name, e.g. 'amdk6'.
    # https://docs.python.org/2/library/platform.html
snippet platform_python_build 
abbr Returns a tuple (buildno, builddate) stating the Python build number anddate as strings.
alias python_build
    platform.python_build()
    # Returns a tuple (buildno, builddate) stating the Python build number anddate as strings.
    # https://docs.python.org/2/library/platform.html
snippet platform_python_compiler 
abbr Returns a string identifying the compiler used for compiling Python.
alias python_compiler
    platform.python_compiler()
    # Returns a string identifying the compiler used for compiling Python.
    # https://docs.python.org/2/library/platform.html
snippet platform_python_branch 
abbr Returns a string identifying the Python implementation SCM branch.
alias python_branch
    platform.python_branch()
    # Returns a string identifying the Python implementation SCM branch.
    # https://docs.python.org/2/library/platform.html
snippet platform_python_implementation 
abbr Returns a string identifying the Python implementation. Possible return valuesare: ‘CPython’, ‘IronPython’, ‘Jython’, ‘PyPy’.
alias python_implementation
    platform.python_implementation()
    # Returns a string identifying the Python implementation. Possible return valuesare: ‘CPython’, ‘IronPython’, ‘Jython’, ‘PyPy’.
    # https://docs.python.org/2/library/platform.html
snippet platform_python_revision 
abbr Returns a string identifying the Python implementation SCM revision.
alias python_revision
    platform.python_revision()
    # Returns a string identifying the Python implementation SCM revision.
    # https://docs.python.org/2/library/platform.html
snippet platform_python_version 
abbr Returns the Python version as string 'major.minor.patchlevel'
alias python_version
    platform.python_version()
    # Returns the Python version as string 'major.minor.patchlevel'
    # https://docs.python.org/2/library/platform.html
snippet platform_python_version_tuple 
abbr Returns the Python version as tuple (major, minor, patchlevel) of strings.
alias python_version_tuple
    platform.python_version_tuple()
    # Returns the Python version as tuple (major, minor, patchlevel) of strings.
    # https://docs.python.org/2/library/platform.html
snippet platform_release 
abbr Returns the system’s release, e.g. '2.2.0' or 'NT' An empty string isreturned if the value cannot be determined.
alias release
    platform.release()
    # Returns the system’s release, e.g. '2.2.0' or 'NT' An empty string isreturned if the value cannot be determined.
    # https://docs.python.org/2/library/platform.html
snippet platform_system 
abbr Returns the system/OS name, e.g. 'Linux', 'Windows', or 'Java'. Anempty string is returned if the value cannot be determined.
alias system
    platform.system()
    # Returns the system/OS name, e.g. 'Linux', 'Windows', or 'Java'. Anempty string is returned if the value cannot be determined.
    # https://docs.python.org/2/library/platform.html
snippet platform_system_alias system_release_version
abbr Returns (system, release, version) aliased to common marketing names usedfor some systems.  It also does some reordering of the information 
alias system_alias
    platform.system_alias(${1:system}, ${2:release}, ${3:version})
    # Returns (system, release, version) aliased to common marketing names usedfor some systems.  It also does some reordering of the information 
    # https://docs.python.org/2/library/platform.html
snippet platform_version 
abbr Returns the system’s release version, e.g. '#3 on degas'. An empty string isreturned if the value cannot be determined.
alias version
    platform.version()
    # Returns the system’s release version, e.g. '#3 on degas'. An empty string isreturned if the value cannot be determined.
    # https://docs.python.org/2/library/platform.html
snippet platform_uname 
abbr Fairly portable uname interface. Returns a tuple of strings (system, node,release, version, machine, processor) identifying the underlying p
alias uname
    platform.uname()
    # Fairly portable uname interface. Returns a tuple of strings (system, node,release, version, machine, processor) identifying the underlying p
    # https://docs.python.org/2/library/platform.html
snippet platform_java_ver release=''_vendor=''_vminfo=(''_''_'')_osinfo=(''_''_'')
abbr Version interface for Jython.
alias java_ver
    platform.java_ver(${1:release=''}, ${2:vendor=''}, ${3:vminfo=(''}, ${4:''}, ${5:'')}, ${6:osinfo=(''}, ${7:''}, ${8:'')})
    # Version interface for Jython.
    # https://docs.python.org/2/library/platform.html
snippet platform_win32_ver release=''_version=''_csd=''_ptype=''
abbr Get additional version information from the Windows Registry and return a tuple(release, version, csd, ptype) referring to OS release, versi
alias win32_ver
    platform.win32_ver(${1:release=''}, ${2:version=''}, ${3:csd=''}, ${4:ptype=''})
    # Get additional version information from the Windows Registry and return a tuple(release, version, csd, ptype) referring to OS release, versi
    # https://docs.python.org/2/library/platform.html
snippet platform_popen cmd_mode='r'_bufsize=None
abbr Portable popen() interface.  Find a working popen implementationpreferring win32pipe.popen().  On Windows NT, win32pipe.popen()should work; 
alias popen
    platform.popen(${1:cmd}, ${2:mode='r'}, ${3:bufsize=None})
    # Portable popen() interface.  Find a working popen implementationpreferring win32pipe.popen().  On Windows NT, win32pipe.popen()should work; 
    # https://docs.python.org/2/library/platform.html
snippet platform_mac_ver release=''_versioninfo=(''_''_'')_machine=''
abbr Get Mac OS version information and return it as tuple (release, versioninfo,machine) with versioninfo being a tuple (version, dev_stage,non_
alias mac_ver
    platform.mac_ver(${1:release=''}, ${2:versioninfo=(''}, ${3:''}, ${4:'')}, ${5:machine=''})
    # Get Mac OS version information and return it as tuple (release, versioninfo,machine) with versioninfo being a tuple (version, dev_stage,non_
    # https://docs.python.org/2/library/platform.html
snippet platform_dist distname=''_version=''_id=''_supported_dists=('SuSE'_'debian'_'redhat'_'mandrake'_...)
abbr This is an old version of the functionality now provided bylinux_distribution(). For new code, please use thelinux_distribution().
alias dist
    platform.dist(${1:distname=''}, ${2:version=''}, ${3:id=''}, ${4:supported_dists=('SuSE'}, ${5:'debian'}, ${6:'redhat'}, ${7:'mandrake'}, ${8:...)})
    # This is an old version of the functionality now provided bylinux_distribution(). For new code, please use thelinux_distribution().
    # https://docs.python.org/2/library/platform.html
snippet platform_linux_distribution distname=''_version=''_id=''_supported_dists=('SuSE'_'debian'_'redhat'_'mandrake'_...)_full_distribution_name=1
abbr Tries to determine the name of the Linux OS distribution name.
alias linux_distribution
    platform.linux_distribution(${1:distname=''}, ${2:version=''}, ${3:id=''}, ${4:supported_dists=('SuSE'}, ${5:'debian'}, ${6:'redhat'}, ${7:'mandrake'}, ${8:...)}, ${9:full_distribution_name=1})
    # Tries to determine the name of the Linux OS distribution name.
    # https://docs.python.org/2/library/platform.html
snippet platform_libc_ver executable=sys.executable_lib=''_version=''_chunksize=2048
abbr Tries to determine the libc version against which the file executable (defaultsto the Python interpreter) is linked.  Returns a tuple of str
alias libc_ver
    platform.libc_ver(${1:executable=sys.executable}, ${2:lib=''}, ${3:version=''}, ${4:chunksize=2048})
    # Tries to determine the libc version against which the file executable (defaultsto the Python interpreter) is linked.  Returns a tuple of str
    # https://docs.python.org/2/library/platform.html

snippet plistlib_readPlist pathOrFile
abbr Read a plist file. pathOrFile may either be a file name or a (readable)file object.  Return the unpacked root object (which usually is adict
alias readPlist
    plistlib.readPlist(${1:pathOrFile})
    # Read a plist file. pathOrFile may either be a file name or a (readable)file object.  Return the unpacked root object (which usually is adict
    # https://docs.python.org/2/library/plistlib.html
snippet plistlib_writePlist rootObject_pathOrFile
abbr Write rootObject to a plist file. pathOrFile may either be a file nameor a (writable) file object.
alias writePlist
    plistlib.writePlist(${1:rootObject}, ${2:pathOrFile})
    # Write rootObject to a plist file. pathOrFile may either be a file nameor a (writable) file object.
    # https://docs.python.org/2/library/plistlib.html
snippet plistlib_readPlistFromString data
abbr Read a plist from a string.  Return the root object.
alias readPlistFromString
    plistlib.readPlistFromString(${1:data})
    # Read a plist from a string.  Return the root object.
    # https://docs.python.org/2/library/plistlib.html
snippet plistlib_writePlistToString rootObject
abbr Return rootObject as a plist-formatted string.
alias writePlistToString
    plistlib.writePlistToString(${1:rootObject})
    # Return rootObject as a plist-formatted string.
    # https://docs.python.org/2/library/plistlib.html
snippet plistlib_readPlistFromResource path_restype='plst'_resid=0
abbr Read a plist from the resource with type restype from the resource fork ofpath.  Availability: Mac OS X.
alias readPlistFromResource
    plistlib.readPlistFromResource(${1:path}, ${2:restype='plst'}, ${3:resid=0})
    # Read a plist from the resource with type restype from the resource fork ofpath.  Availability: Mac OS X.
    # https://docs.python.org/2/library/plistlib.html
snippet plistlib_writePlistToResource rootObject_path_restype='plst'_resid=0
abbr Write rootObject as a resource with type restype to the resource fork ofpath.  Availability: Mac OS X.
alias writePlistToResource
    plistlib.writePlistToResource(${1:rootObject}, ${2:path}, ${3:restype='plst'}, ${4:resid=0})
    # Write rootObject as a resource with type restype to the resource fork ofpath.  Availability: Mac OS X.
    # https://docs.python.org/2/library/plistlib.html

snippet popen2_popen2 cmd_bufsize_mode
abbr Executes cmd as a sub-process.  Returns the file objects (child_stdout,child_stdin).
alias popen2
    popen2.popen2(${1:cmd}, ${2:bufsize}, ${3:mode})
    # Executes cmd as a sub-process.  Returns the file objects (child_stdout,child_stdin).
    # https://docs.python.org/2/library/popen2.html
snippet popen2_popen3 cmd_bufsize_mode
abbr Executes cmd as a sub-process.  Returns the file objects (child_stdout,child_stdin, child_stderr).
alias popen3
    popen2.popen3(${1:cmd}, ${2:bufsize}, ${3:mode})
    # Executes cmd as a sub-process.  Returns the file objects (child_stdout,child_stdin, child_stderr).
    # https://docs.python.org/2/library/popen2.html
snippet popen2_popen4 cmd_bufsize_mode
abbr Executes cmd as a sub-process.  Returns the file objects(child_stdout_and_stderr, child_stdin).
alias popen4
    popen2.popen4(${1:cmd}, ${2:bufsize}, ${3:mode})
    # Executes cmd as a sub-process.  Returns the file objects(child_stdout_and_stderr, child_stdin).
    # https://docs.python.org/2/library/popen2.html





snippet posixfile_open filename_mode_bufsize
abbr Create a new posixfile object with the given filename and mode.  The filename,mode and bufsize arguments are interpreted the same way as by 
alias open
    posixfile.open(${1:filename}, ${2:mode}, ${3:bufsize})
    # Create a new posixfile object with the given filename and mode.  The filename,mode and bufsize arguments are interpreted the same way as by 
    # https://docs.python.org/2/library/posixfile.html
snippet posixfile_fileopen fileobject
abbr Create a new posixfile object with the given standard file object. The resultingobject has the same filename and mode as the original file o
alias fileopen
    posixfile.fileopen(${1:fileobject})
    # Create a new posixfile object with the given standard file object. The resultingobject has the same filename and mode as the original file o
    # https://docs.python.org/2/library/posixfile.html

snippet pprint_pformat object_indent=1_width=80_depth=None
abbr Return the formatted representation of object as a string.  indent, widthand depth will be passed to the PrettyPrinter constructor asformatt
alias pformat
    pprint.pformat(${1:object}, ${2:indent=1}, ${3:width=80}, ${4:depth=None})
    # Return the formatted representation of object as a string.  indent, widthand depth will be passed to the PrettyPrinter constructor asformatt
    # https://docs.python.org/2/library/pprint.html
snippet pprint_pprint object_stream=None_indent=1_width=80_depth=None
abbr Prints the formatted representation of object on stream, followed by anewline.  If stream is None, sys.stdout is used.  This may be used int
alias pprint
    pprint.pprint(${1:object}, ${2:stream=None}, ${3:indent=1}, ${4:width=80}, ${5:depth=None})
    # Prints the formatted representation of object on stream, followed by anewline.  If stream is None, sys.stdout is used.  This may be used int
    # https://docs.python.org/2/library/pprint.html
snippet pprint_isreadable object
abbr Determine if the formatted representation of object is “readable,” or can beused to reconstruct the value using eval().  This always returns
alias isreadable
    pprint.isreadable(${1:object})
    # Determine if the formatted representation of object is “readable,” or can beused to reconstruct the value using eval().  This always returns
    # https://docs.python.org/2/library/pprint.html
snippet pprint_isrecursive object
abbr Determine if object requires a recursive representation.
alias isrecursive
    pprint.isrecursive(${1:object})
    # Determine if object requires a recursive representation.
    # https://docs.python.org/2/library/pprint.html
snippet pprint_saferepr object
abbr Return a string representation of object, protected against recursive datastructures.  If the representation of object exposes a recursive e
alias saferepr
    pprint.saferepr(${1:object})
    # Return a string representation of object, protected against recursive datastructures.  If the representation of object exposes a recursive e
    # https://docs.python.org/2/library/pprint.html

snippet profile_run command_filename=None_sort=-1
abbr This function takes a single argument that can be passed to the exec()function, and an optional file name.  In all cases this routine execut
alias run
    profile.run(${1:command}, ${2:filename=None}, ${3:sort=-1})
    # This function takes a single argument that can be passed to the exec()function, and an optional file name.  In all cases this routine execut
    # https://docs.python.org/2/library/profile.html
snippet profile_runctx command_globals_locals_filename=None
abbr This function is similar to run(), with added arguments to supply theglobals and locals dictionaries for the command string. This routineexe
alias runctx
    profile.runctx(${1:command}, ${2:globals}, ${3:locals}, ${4:filename=None})
    # This function is similar to run(), with added arguments to supply theglobals and locals dictionaries for the command string. This routineexe
    # https://docs.python.org/2/library/profile.html

snippet pty_fork 
abbr Fork. Connect the child’s controlling terminal to a pseudo-terminal. Returnvalue is (pid, fd). Note that the child  gets pid 0, and the fd i
alias fork
    pty.fork()
    # Fork. Connect the child’s controlling terminal to a pseudo-terminal. Returnvalue is (pid, fd). Note that the child  gets pid 0, and the fd i
    # https://docs.python.org/2/library/pty.html
snippet pty_openpty 
abbr Open a new pseudo-terminal pair, using os.openpty() if possible, oremulation code for generic Unix systems. Return a pair of file descriptor
alias openpty
    pty.openpty()
    # Open a new pseudo-terminal pair, using os.openpty() if possible, oremulation code for generic Unix systems. Return a pair of file descriptor
    # https://docs.python.org/2/library/pty.html
snippet pty_spawn argv_master_read_stdin_read
abbr Spawn a process, and connect its controlling terminal with the currentprocess’s standard io. This is often used to baffle programs which ins
alias spawn
    pty.spawn(${1:argv}, ${2:master_read}, ${3:stdin_read})
    # Spawn a process, and connect its controlling terminal with the currentprocess’s standard io. This is often used to baffle programs which ins
    # https://docs.python.org/2/library/pty.html

snippet pwd_getpwuid uid
abbr Return the password database entry for the given numeric user ID.
alias getpwuid
    pwd.getpwuid(${1:uid})
    # Return the password database entry for the given numeric user ID.
    # https://docs.python.org/2/library/pwd.html
snippet pwd_getpwnam name
abbr Return the password database entry for the given user name.
alias getpwnam
    pwd.getpwnam(${1:name})
    # Return the password database entry for the given user name.
    # https://docs.python.org/2/library/pwd.html
snippet pwd_getpwall 
abbr Return a list of all available password database entries, in arbitrary order.
alias getpwall
    pwd.getpwall()
    # Return a list of all available password database entries, in arbitrary order.
    # https://docs.python.org/2/library/pwd.html

snippet py_compile_compile file_cfile_dfile_doraise
abbr Compile a source file to byte-code and write out the byte-code cache  file.  Thesource code is loaded from the file name file.  The  byte-co
alias compile
    py_compile.compile(${1:file}, ${2:cfile}, ${3:dfile}, ${4:doraise})
    # Compile a source file to byte-code and write out the byte-code cache  file.  Thesource code is loaded from the file name file.  The  byte-co
    # https://docs.python.org/2/library/py_compile.html
snippet py_compile_main args
abbr Compile several source files.  The files named in args (or on the commandline, if args is not specified) are compiled and the resulting byte
alias main
    py_compile.main(${1:args})
    # Compile several source files.  The files named in args (or on the commandline, if args is not specified) are compiled and the resulting byte
    # https://docs.python.org/2/library/py_compile.html

snippet pyclbr_readmodule module_path=None
abbr Read a module and return a dictionary mapping class names to classdescriptor objects.  The parameter module should be the name of amodule as
alias readmodule
    pyclbr.readmodule(${1:module}, ${2:path=None})
    # Read a module and return a dictionary mapping class names to classdescriptor objects.  The parameter module should be the name of amodule as
    # https://docs.python.org/2/library/pyclbr.html
snippet pyclbr_readmodule_ex module_path=None
abbr Like readmodule(), but the returned dictionary, in addition tomapping class names to class descriptor objects, also maps top-levelfunction n
alias readmodule_ex
    pyclbr.readmodule_ex(${1:module}, ${2:path=None})
    # Like readmodule(), but the returned dictionary, in addition tomapping class names to class descriptor objects, also maps top-levelfunction n
    # https://docs.python.org/2/library/pyclbr.html



snippet xml_parsers_expat_ErrorString errno
abbr Returns an explanatory string for a given error number errno.
alias ErrorString
    xml.parsers.expat.ErrorString(${1:errno})
    # Returns an explanatory string for a given error number errno.
    # https://docs.python.org/2/library/pyexpat.html
snippet xml_parsers_expat_ParserCreate encoding_namespace_separator
abbr Creates and returns a new xmlparser object.   encoding, if specified,must be a string naming the encoding  used by the XML data.  Expat does
alias ParserCreate
    xml.parsers.expat.ParserCreate(${1:encoding}, ${2:namespace_separator})
    # Creates and returns a new xmlparser object.   encoding, if specified,must be a string naming the encoding  used by the XML data.  Expat does
    # https://docs.python.org/2/library/pyexpat.html





snippet quopri_decode input_output_header
abbr Decode the contents of the input file and write the resulting decoded binarydata to the output file. input and output must either be file ob
alias decode
    quopri.decode(${1:input}, ${2:output}, ${3:header})
    # Decode the contents of the input file and write the resulting decoded binarydata to the output file. input and output must either be file ob
    # https://docs.python.org/2/library/quopri.html
snippet quopri_encode input_output_quotetabs
abbr Encode the contents of the input file and write the resulting quoted-printabledata to the output file. input and output must either be file 
alias encode
    quopri.encode(${1:input}, ${2:output}, ${3:quotetabs})
    # Encode the contents of the input file and write the resulting quoted-printabledata to the output file. input and output must either be file 
    # https://docs.python.org/2/library/quopri.html
snippet quopri_decodestring s_header
abbr Like decode(), except that it accepts a source string and returns thecorresponding decoded string.
alias decodestring
    quopri.decodestring(${1:s}, ${2:header})
    # Like decode(), except that it accepts a source string and returns thecorresponding decoded string.
    # https://docs.python.org/2/library/quopri.html
snippet quopri_encodestring s_quotetabs
abbr Like encode(), except that it accepts a source string and returns thecorresponding encoded string.  quotetabs is optional (defaulting to 0),
alias encodestring
    quopri.encodestring(${1:s}, ${2:quotetabs})
    # Like encode(), except that it accepts a source string and returns thecorresponding encoded string.  quotetabs is optional (defaulting to 0),
    # https://docs.python.org/2/library/quopri.html

snippet random_seed x
abbr Initialize the basic random number generator. Optional argument x can be anyhashable object. If x is omitted or None, current system time is
alias seed
    random.seed(${1:x})
    # Initialize the basic random number generator. Optional argument x can be anyhashable object. If x is omitted or None, current system time is
    # https://docs.python.org/2/library/random.html
snippet random_getstate 
abbr Return an object capturing the current internal state of the generator.  Thisobject can be passed to setstate() to restore the state.
alias getstate
    random.getstate()
    # Return an object capturing the current internal state of the generator.  Thisobject can be passed to setstate() to restore the state.
    # https://docs.python.org/2/library/random.html
snippet random_setstate state
abbr state should have been obtained from a previous call to getstate(), andsetstate() restores the internal state of the generator to what it wa
alias setstate
    random.setstate(${1:state})
    # state should have been obtained from a previous call to getstate(), andsetstate() restores the internal state of the generator to what it wa
    # https://docs.python.org/2/library/random.html
snippet random_jumpahead n
abbr Change the internal state to one different from and likely far away from thecurrent state.  n is a non-negative integer which is used to scr
alias jumpahead
    random.jumpahead(${1:n})
    # Change the internal state to one different from and likely far away from thecurrent state.  n is a non-negative integer which is used to scr
    # https://docs.python.org/2/library/random.html
snippet random_getrandbits k
abbr Returns a python long int with k random bits. This method is suppliedwith the MersenneTwister generator and some other generators may also p
alias getrandbits
    random.getrandbits(${1:k})
    # Returns a python long int with k random bits. This method is suppliedwith the MersenneTwister generator and some other generators may also p
    # https://docs.python.org/2/library/random.html
snippet random_randrange stop
abbr Return a randomly selected element from range(start, stop, step).  This isequivalent to choice(range(start, stop, step)), but doesn’t actual
alias randrange
    random.randrange(${1:stop})
    # Return a randomly selected element from range(start, stop, step).  This isequivalent to choice(range(start, stop, step)), but doesn’t actual
    # https://docs.python.org/2/library/random.html
snippet random_randint a_b
abbr Return a random integer N such that a <= N <= b.
alias randint
    random.randint(${1:a}, ${2:b})
    # Return a random integer N such that a <= N <= b.
    # https://docs.python.org/2/library/random.html
snippet random_choice seq
abbr Return a random element from the non-empty sequence seq. If seq is empty,raises IndexError.
alias choice
    random.choice(${1:seq})
    # Return a random element from the non-empty sequence seq. If seq is empty,raises IndexError.
    # https://docs.python.org/2/library/random.html
snippet random_shuffle x_random
abbr Shuffle the sequence x in place. The optional argument random is a0-argument function returning a random float in [0.0, 1.0); by default, th
alias shuffle
    random.shuffle(${1:x}, ${2:random})
    # Shuffle the sequence x in place. The optional argument random is a0-argument function returning a random float in [0.0, 1.0); by default, th
    # https://docs.python.org/2/library/random.html
snippet random_sample population_k
abbr Return a k length list of unique elements chosen from the population sequence.Used for random sampling without replacement.
alias sample
    random.sample(${1:population}, ${2:k})
    # Return a k length list of unique elements chosen from the population sequence.Used for random sampling without replacement.
    # https://docs.python.org/2/library/random.html
snippet random_random 
abbr Return the next random floating point number in the range [0.0, 1.0).
alias random
    random.random()
    # Return the next random floating point number in the range [0.0, 1.0).
    # https://docs.python.org/2/library/random.html
snippet random_uniform a_b
abbr Return a random floating point number N such that a <= N <= b fora <= b and b <= N <= a for b < a.
alias uniform
    random.uniform(${1:a}, ${2:b})
    # Return a random floating point number N such that a <= N <= b fora <= b and b <= N <= a for b < a.
    # https://docs.python.org/2/library/random.html
snippet random_triangular low_high_mode
abbr Return a random floating point number N such that low <= N <= high andwith the specified mode between those bounds.  The low and high bounds
alias triangular
    random.triangular(${1:low}, ${2:high}, ${3:mode})
    # Return a random floating point number N such that low <= N <= high andwith the specified mode between those bounds.  The low and high bounds
    # https://docs.python.org/2/library/random.html
snippet random_betavariate alpha_beta
abbr Beta distribution.  Conditions on the parameters are alpha > 0 andbeta > 0. Returned values range between 0 and 1.
alias betavariate
    random.betavariate(${1:alpha}, ${2:beta})
    # Beta distribution.  Conditions on the parameters are alpha > 0 andbeta > 0. Returned values range between 0 and 1.
    # https://docs.python.org/2/library/random.html
snippet random_expovariate lambd
abbr Exponential distribution.  lambd is 1.0 divided by the desiredmean.  It should be nonzero.  (The parameter would be called“lambda”, but that
alias expovariate
    random.expovariate(${1:lambd})
    # Exponential distribution.  lambd is 1.0 divided by the desiredmean.  It should be nonzero.  (The parameter would be called“lambda”, but that
    # https://docs.python.org/2/library/random.html
snippet random_gammavariate alpha_beta
abbr Gamma distribution.  (Not the gamma function!)  Conditions on theparameters are alpha > 0 and beta > 0.
alias gammavariate
    random.gammavariate(${1:alpha}, ${2:beta})
    # Gamma distribution.  (Not the gamma function!)  Conditions on theparameters are alpha > 0 and beta > 0.
    # https://docs.python.org/2/library/random.html
snippet random_gauss mu_sigma
abbr Gaussian distribution.  mu is the mean, and sigma is the standarddeviation.  This is slightly faster than the normalvariate() functiondefine
alias gauss
    random.gauss(${1:mu}, ${2:sigma})
    # Gaussian distribution.  mu is the mean, and sigma is the standarddeviation.  This is slightly faster than the normalvariate() functiondefine
    # https://docs.python.org/2/library/random.html
snippet random_lognormvariate mu_sigma
abbr Log normal distribution.  If you take the natural logarithm of thisdistribution, you’ll get a normal distribution with mean mu and standardd
alias lognormvariate
    random.lognormvariate(${1:mu}, ${2:sigma})
    # Log normal distribution.  If you take the natural logarithm of thisdistribution, you’ll get a normal distribution with mean mu and standardd
    # https://docs.python.org/2/library/random.html
snippet random_normalvariate mu_sigma
abbr Normal distribution.  mu is the mean, and sigma is the standard deviation.
alias normalvariate
    random.normalvariate(${1:mu}, ${2:sigma})
    # Normal distribution.  mu is the mean, and sigma is the standard deviation.
    # https://docs.python.org/2/library/random.html
snippet random_vonmisesvariate mu_kappa
abbr mu is the mean angle, expressed in radians between 0 and 2*pi, and kappais the concentration parameter, which must be greater than or equal 
alias vonmisesvariate
    random.vonmisesvariate(${1:mu}, ${2:kappa})
    # mu is the mean angle, expressed in radians between 0 and 2*pi, and kappais the concentration parameter, which must be greater than or equal 
    # https://docs.python.org/2/library/random.html
snippet random_paretovariate alpha
abbr Pareto distribution.  alpha is the shape parameter.
alias paretovariate
    random.paretovariate(${1:alpha})
    # Pareto distribution.  alpha is the shape parameter.
    # https://docs.python.org/2/library/random.html
snippet random_weibullvariate alpha_beta
abbr Weibull distribution.  alpha is the scale parameter and beta is the shapeparameter.
alias weibullvariate
    random.weibullvariate(${1:alpha}, ${2:beta})
    # Weibull distribution.  alpha is the scale parameter and beta is the shapeparameter.
    # https://docs.python.org/2/library/random.html
snippet random_whseed x
abbr This is obsolete, supplied for bit-level compatibility with versions of Pythonprior to 2.1. See seed() for details.  whseed() does not guara
alias whseed
    random.whseed(${1:x})
    # This is obsolete, supplied for bit-level compatibility with versions of Pythonprior to 2.1. See seed() for details.  whseed() does not guara
    # https://docs.python.org/2/library/random.html

snippet re_compile pattern_flags=0
abbr Compile a regular expression pattern into a regular expression object, whichcan be used for matching using its match() andsearch() methods, 
alias compile
    re.compile(${1:pattern}, ${2:flags=0})
    # Compile a regular expression pattern into a regular expression object, whichcan be used for matching using its match() andsearch() methods, 
    # https://docs.python.org/2/library/re.html
snippet re_search pattern_string_flags=0
abbr Scan through string looking for the first location where the regular expressionpattern produces a match, and return a corresponding MatchObj
alias search
    re.search(${1:pattern}, ${2:string}, ${3:flags=0})
    # Scan through string looking for the first location where the regular expressionpattern produces a match, and return a corresponding MatchObj
    # https://docs.python.org/2/library/re.html
snippet re_match pattern_string_flags=0
abbr If zero or more characters at the beginning of string match the regularexpression pattern, return a corresponding MatchObject instance.Retur
alias match
    re.match(${1:pattern}, ${2:string}, ${3:flags=0})
    # If zero or more characters at the beginning of string match the regularexpression pattern, return a corresponding MatchObject instance.Retur
    # https://docs.python.org/2/library/re.html
snippet re_split pattern_string_maxsplit=0_flags=0
abbr Split string by the occurrences of pattern.  If capturing parentheses areused in pattern, then the text of all groups in the pattern are als
alias split
    re.split(${1:pattern}, ${2:string}, ${3:maxsplit=0}, ${4:flags=0})
    # Split string by the occurrences of pattern.  If capturing parentheses areused in pattern, then the text of all groups in the pattern are als
    # https://docs.python.org/2/library/re.html
snippet re_findall pattern_string_flags=0
abbr Return all non-overlapping matches of pattern in string, as a list ofstrings.  The string is scanned left-to-right, and matches are returned
alias findall
    re.findall(${1:pattern}, ${2:string}, ${3:flags=0})
    # Return all non-overlapping matches of pattern in string, as a list ofstrings.  The string is scanned left-to-right, and matches are returned
    # https://docs.python.org/2/library/re.html
snippet re_finditer pattern_string_flags=0
abbr Return an iterator yielding MatchObject instances over allnon-overlapping matches for the RE pattern in string.  The string isscanned left-t
alias finditer
    re.finditer(${1:pattern}, ${2:string}, ${3:flags=0})
    # Return an iterator yielding MatchObject instances over allnon-overlapping matches for the RE pattern in string.  The string isscanned left-t
    # https://docs.python.org/2/library/re.html
snippet re_sub pattern_repl_string_count=0_flags=0
abbr Return the string obtained by replacing the leftmost non-overlapping occurrencesof pattern in string by the replacement repl.  If the patter
alias sub
    re.sub(${1:pattern}, ${2:repl}, ${3:string}, ${4:count=0}, ${5:flags=0})
    # Return the string obtained by replacing the leftmost non-overlapping occurrencesof pattern in string by the replacement repl.  If the patter
    # https://docs.python.org/2/library/re.html
snippet re_subn pattern_repl_string_count=0_flags=0
abbr Perform the same operation as sub(), but return a tuple (new_string,number_of_subs_made).
alias subn
    re.subn(${1:pattern}, ${2:repl}, ${3:string}, ${4:count=0}, ${5:flags=0})
    # Perform the same operation as sub(), but return a tuple (new_string,number_of_subs_made).
    # https://docs.python.org/2/library/re.html
snippet re_escape string
abbr Return string with all non-alphanumerics backslashed; this is useful if youwant to match an arbitrary literal string that may have regular e
alias escape
    re.escape(${1:string})
    # Return string with all non-alphanumerics backslashed; this is useful if youwant to match an arbitrary literal string that may have regular e
    # https://docs.python.org/2/library/re.html
snippet re_purge 
abbr Clear the regular expression cache.
alias purge
    re.purge()
    # Clear the regular expression cache.
    # https://docs.python.org/2/library/re.html

snippet readline_parse_and_bind string
abbr Parse and execute single line of a readline init file.
alias parse_and_bind
    readline.parse_and_bind(${1:string})
    # Parse and execute single line of a readline init file.
    # https://docs.python.org/2/library/readline.html
snippet readline_get_line_buffer 
abbr Return the current contents of the line buffer.
alias get_line_buffer
    readline.get_line_buffer()
    # Return the current contents of the line buffer.
    # https://docs.python.org/2/library/readline.html
snippet readline_insert_text string
abbr Insert text into the command line.
alias insert_text
    readline.insert_text(${1:string})
    # Insert text into the command line.
    # https://docs.python.org/2/library/readline.html
snippet readline_read_init_file filename
abbr Parse a readline initialization file. The default filename is the last filenameused.
alias read_init_file
    readline.read_init_file(${1:filename})
    # Parse a readline initialization file. The default filename is the last filenameused.
    # https://docs.python.org/2/library/readline.html
snippet readline_read_history_file filename
abbr Load a readline history file. The default filename is ~/.history.
alias read_history_file
    readline.read_history_file(${1:filename})
    # Load a readline history file. The default filename is ~/.history.
    # https://docs.python.org/2/library/readline.html
snippet readline_write_history_file filename
abbr Save a readline history file. The default filename is ~/.history.
alias write_history_file
    readline.write_history_file(${1:filename})
    # Save a readline history file. The default filename is ~/.history.
    # https://docs.python.org/2/library/readline.html
snippet readline_clear_history 
abbr Clear the current history.  (Note: this function is not available if theinstalled version of GNU readline doesn’t support it.)
alias clear_history
    readline.clear_history()
    # Clear the current history.  (Note: this function is not available if theinstalled version of GNU readline doesn’t support it.)
    # https://docs.python.org/2/library/readline.html
snippet readline_get_history_length 
abbr Return the desired length of the history file.  Negative values imply unlimitedhistory file size.
alias get_history_length
    readline.get_history_length()
    # Return the desired length of the history file.  Negative values imply unlimitedhistory file size.
    # https://docs.python.org/2/library/readline.html
snippet readline_set_history_length length
abbr Set the number of lines to save in the history file. write_history_file()uses this value to truncate the history file when saving.  Negative
alias set_history_length
    readline.set_history_length(${1:length})
    # Set the number of lines to save in the history file. write_history_file()uses this value to truncate the history file when saving.  Negative
    # https://docs.python.org/2/library/readline.html
snippet readline_get_current_history_length 
abbr Return the number of lines currently in the history.  (This is different fromget_history_length(), which returns the maximum number of lines
alias get_current_history_length
    readline.get_current_history_length()
    # Return the number of lines currently in the history.  (This is different fromget_history_length(), which returns the maximum number of lines
    # https://docs.python.org/2/library/readline.html
snippet readline_get_history_item index
abbr Return the current contents of history item at index.
alias get_history_item
    readline.get_history_item(${1:index})
    # Return the current contents of history item at index.
    # https://docs.python.org/2/library/readline.html
snippet readline_remove_history_item pos
abbr Remove history item specified by its position from the history.
alias remove_history_item
    readline.remove_history_item(${1:pos})
    # Remove history item specified by its position from the history.
    # https://docs.python.org/2/library/readline.html
snippet readline_replace_history_item pos_line
abbr Replace history item specified by its position with the given line.
alias replace_history_item
    readline.replace_history_item(${1:pos}, ${2:line})
    # Replace history item specified by its position with the given line.
    # https://docs.python.org/2/library/readline.html
snippet readline_redisplay 
abbr Change what’s displayed on the screen to reflect the current contents of theline buffer.
alias redisplay
    readline.redisplay()
    # Change what’s displayed on the screen to reflect the current contents of theline buffer.
    # https://docs.python.org/2/library/readline.html
snippet readline_set_startup_hook function
abbr Set or remove the startup_hook function.  If function is specified, it will beused as the new startup_hook function; if omitted or None, any
alias set_startup_hook
    readline.set_startup_hook(${1:function})
    # Set or remove the startup_hook function.  If function is specified, it will beused as the new startup_hook function; if omitted or None, any
    # https://docs.python.org/2/library/readline.html
snippet readline_set_pre_input_hook function
abbr Set or remove the pre_input_hook function.  If function is specified, it willbe used as the new pre_input_hook function; if omitted or None,
alias set_pre_input_hook
    readline.set_pre_input_hook(${1:function})
    # Set or remove the pre_input_hook function.  If function is specified, it willbe used as the new pre_input_hook function; if omitted or None,
    # https://docs.python.org/2/library/readline.html
snippet readline_set_completer function
abbr Set or remove the completer function.  If function is specified, it will beused as the new completer function; if omitted or None, any compl
alias set_completer
    readline.set_completer(${1:function})
    # Set or remove the completer function.  If function is specified, it will beused as the new completer function; if omitted or None, any compl
    # https://docs.python.org/2/library/readline.html
snippet readline_get_completer 
abbr Get the completer function, or None if no completer function has been set.
alias get_completer
    readline.get_completer()
    # Get the completer function, or None if no completer function has been set.
    # https://docs.python.org/2/library/readline.html
snippet readline_get_completion_type 
abbr Get the type of completion being attempted.
alias get_completion_type
    readline.get_completion_type()
    # Get the type of completion being attempted.
    # https://docs.python.org/2/library/readline.html
snippet readline_get_begidx 
abbr Get the beginning index of the readline tab-completion scope.
alias get_begidx
    readline.get_begidx()
    # Get the beginning index of the readline tab-completion scope.
    # https://docs.python.org/2/library/readline.html
snippet readline_get_endidx 
abbr Get the ending index of the readline tab-completion scope.
alias get_endidx
    readline.get_endidx()
    # Get the ending index of the readline tab-completion scope.
    # https://docs.python.org/2/library/readline.html
snippet readline_set_completer_delims string
abbr Set the readline word delimiters for tab-completion.
alias set_completer_delims
    readline.set_completer_delims(${1:string})
    # Set the readline word delimiters for tab-completion.
    # https://docs.python.org/2/library/readline.html
snippet readline_get_completer_delims 
abbr Get the readline word delimiters for tab-completion.
alias get_completer_delims
    readline.get_completer_delims()
    # Get the readline word delimiters for tab-completion.
    # https://docs.python.org/2/library/readline.html
snippet readline_set_completion_display_matches_hook function
abbr Set or remove the completion display function.  If function isspecified, it will be used as the new completion display function;if omitted o
alias set_completion_display_matches_hook
    readline.set_completion_display_matches_hook(${1:function})
    # Set or remove the completion display function.  If function isspecified, it will be used as the new completion display function;if omitted o
    # https://docs.python.org/2/library/readline.html
snippet readline_add_history line
abbr Append a line to the history buffer, as if it was the last line typed.
alias add_history
    readline.add_history(${1:line})
    # Append a line to the history buffer, as if it was the last line typed.
    # https://docs.python.org/2/library/readline.html

snippet repr_repr obj
abbr This is the repr() method of aRepr.  It returns a stringsimilar to that returned by the built-in function of the same name, but withlimits o
alias repr
    repr.repr(${1:obj})
    # This is the repr() method of aRepr.  It returns a stringsimilar to that returned by the built-in function of the same name, but withlimits o
    # https://docs.python.org/2/library/repr.html

snippet resource_getrlimit resource
abbr Returns a tuple (soft, hard) with the current soft and hard limits ofresource. Raises ValueError if an invalid resource is specified, orerro
alias getrlimit
    resource.getrlimit(${1:resource})
    # Returns a tuple (soft, hard) with the current soft and hard limits ofresource. Raises ValueError if an invalid resource is specified, orerro
    # https://docs.python.org/2/library/resource.html
snippet resource_setrlimit resource_limits
abbr Sets new limits of consumption of resource. The limits argument must be atuple (soft, hard) of two integers describing the new limits. A val
alias setrlimit
    resource.setrlimit(${1:resource}, ${2:limits})
    # Sets new limits of consumption of resource. The limits argument must be atuple (soft, hard) of two integers describing the new limits. A val
    # https://docs.python.org/2/library/resource.html
snippet resource_getrusage who
abbr This function returns an object that describes the resources consumed by eitherthe current process or its children, as specified by the who 
alias getrusage
    resource.getrusage(${1:who})
    # This function returns an object that describes the resources consumed by eitherthe current process or its children, as specified by the who 
    # https://docs.python.org/2/library/resource.html
snippet resource_getpagesize 
abbr Returns the number of bytes in a system page. (This need not be the same as thehardware page size.) This function is useful for determining 
alias getpagesize
    resource.getpagesize()
    # Returns the number of bytes in a system page. (This need not be the same as thehardware page size.) This function is useful for determining 
    # https://docs.python.org/2/library/resource.html





snippet rfc822_quote str
abbr Return a new string with backslashes in str replaced by two backslashes anddouble quotes replaced by backslash-double quote.
alias quote
    rfc822.quote(${1:str})
    # Return a new string with backslashes in str replaced by two backslashes anddouble quotes replaced by backslash-double quote.
    # https://docs.python.org/2/library/rfc822.html
snippet rfc822_unquote str
abbr Return a new string which is an unquoted version of str. If str ends andbegins with double quotes, they are stripped off.  Likewise if str e
alias unquote
    rfc822.unquote(${1:str})
    # Return a new string which is an unquoted version of str. If str ends andbegins with double quotes, they are stripped off.  Likewise if str e
    # https://docs.python.org/2/library/rfc822.html
snippet rfc822_parseaddr address
abbr Parse address, which should be the value of some address-containing field suchas To or Cc, into its constituent “realname” and“email address
alias parseaddr
    rfc822.parseaddr(${1:address})
    # Parse address, which should be the value of some address-containing field suchas To or Cc, into its constituent “realname” and“email address
    # https://docs.python.org/2/library/rfc822.html
snippet rfc822_dump_address_pair pair
abbr The inverse of parseaddr(), this takes a 2-tuple of the form (realname,email_address) and returns the string value suitable for a To orCc he
alias dump_address_pair
    rfc822.dump_address_pair(${1:pair})
    # The inverse of parseaddr(), this takes a 2-tuple of the form (realname,email_address) and returns the string value suitable for a To orCc he
    # https://docs.python.org/2/library/rfc822.html
snippet rfc822_parsedate date
abbr Attempts to parse a date according to the rules in RFC 2822. however, somemailers don’t follow that format as specified, so parsedate() trie
alias parsedate
    rfc822.parsedate(${1:date})
    # Attempts to parse a date according to the rules in RFC 2822. however, somemailers don’t follow that format as specified, so parsedate() trie
    # https://docs.python.org/2/library/rfc822.html
snippet rfc822_parsedate_tz date
abbr Performs the same function as parsedate(), but returns either None ora 10-tuple; the first 9 elements make up a tuple that can be passed dir
alias parsedate_tz
    rfc822.parsedate_tz(${1:date})
    # Performs the same function as parsedate(), but returns either None ora 10-tuple; the first 9 elements make up a tuple that can be passed dir
    # https://docs.python.org/2/library/rfc822.html
snippet rfc822_mktime_tz tuple
abbr Turn a 10-tuple as returned by parsedate_tz() into a UTC timestamp.  Ifthe timezone item in the tuple is None, assume local time.  Minordefi
alias mktime_tz
    rfc822.mktime_tz(${1:tuple})
    # Turn a 10-tuple as returned by parsedate_tz() into a UTC timestamp.  Ifthe timezone item in the tuple is None, assume local time.  Minordefi
    # https://docs.python.org/2/library/rfc822.html





snippet runpy_run_module mod_name_init_globals=None_run_name=None_alter_sys=False
abbr Execute the code of the specified module and return the resulting moduleglobals dictionary. The module’s code is first located using the sta
alias run_module
    runpy.run_module(${1:mod_name}, ${2:init_globals=None}, ${3:run_name=None}, ${4:alter_sys=False})
    # Execute the code of the specified module and return the resulting moduleglobals dictionary. The module’s code is first located using the sta
    # https://docs.python.org/2/library/runpy.html
snippet runpy_run_path file_path_init_globals=None_run_name=None
abbr Execute the code at the named filesystem location and return the resultingmodule globals dictionary. As with a script name supplied to the C
alias run_path
    runpy.run_path(${1:file_path}, ${2:init_globals=None}, ${3:run_name=None})
    # Execute the code at the named filesystem location and return the resultingmodule globals dictionary. As with a script name supplied to the C
    # https://docs.python.org/2/library/runpy.html





snippet select_epoll sizehint=-1
abbr (Only supported on Linux 2.5.44 and newer.)  Returns an edge polling object,which can be used as Edge or Level Triggered interface for I/O e
alias epoll
    select.epoll(${1:sizehint=-1})
    # (Only supported on Linux 2.5.44 and newer.)  Returns an edge polling object,which can be used as Edge or Level Triggered interface for I/O e
    # https://docs.python.org/2/library/select.html
snippet select_poll 
abbr (Not supported by all operating systems.)  Returns a polling object, whichsupports registering and unregistering file descriptors, and then 
alias poll
    select.poll()
    # (Not supported by all operating systems.)  Returns a polling object, whichsupports registering and unregistering file descriptors, and then 
    # https://docs.python.org/2/library/select.html
snippet select_kqueue 
abbr (Only supported on BSD.)  Returns a kernel queue object; see sectionKqueue Objects below for the methods supported by kqueue objects.
alias kqueue
    select.kqueue()
    # (Only supported on BSD.)  Returns a kernel queue object; see sectionKqueue Objects below for the methods supported by kqueue objects.
    # https://docs.python.org/2/library/select.html
snippet select_kevent ident_filter=KQ_FILTER_READ_flags=KQ_EV_ADD_fflags=0_data=0_udata=0
abbr (Only supported on BSD.)  Returns a kernel event object; see sectionKevent Objects below for the methods supported by kevent objects.
alias kevent
    select.kevent(${1:ident}, ${2:filter=KQ_FILTER_READ}, ${3:flags=KQ_EV_ADD}, ${4:fflags=0}, ${5:data=0}, ${6:udata=0})
    # (Only supported on BSD.)  Returns a kernel event object; see sectionKevent Objects below for the methods supported by kevent objects.
    # https://docs.python.org/2/library/select.html
snippet select_select rlist_wlist_xlist_timeout
abbr This is a straightforward interface to the Unix select() system call.The first three arguments are sequences of ‘waitable objects’: eitherin
alias select
    select.select(${1:rlist}, ${2:wlist}, ${3:xlist}, ${4:timeout})
    # This is a straightforward interface to the Unix select() system call.The first three arguments are sequences of ‘waitable objects’: eitherin
    # https://docs.python.org/2/library/select.html







snippet sha_new string
abbr Return a new sha object.  If string is present, the method callupdate(string) is made.
alias new
    sha.new(${1:string})
    # Return a new sha object.  If string is present, the method callupdate(string) is made.
    # https://docs.python.org/2/library/sha.html

snippet shelve_open filename_flag='c'_protocol=None_writeback=False
abbr Open a persistent dictionary.  The filename specified is the base filename forthe underlying database.  As a side-effect, an extension may b
alias open
    shelve.open(${1:filename}, ${2:flag='c'}, ${3:protocol=None}, ${4:writeback=False})
    # Open a persistent dictionary.  The filename specified is the base filename forthe underlying database.  As a side-effect, an extension may b
    # https://docs.python.org/2/library/shelve.html

snippet shlex_split s_comments_posix
abbr Split the string s using shell-like syntax. If comments is False(the default), the parsing of comments in the given string will be disabled(
alias split
    shlex.split(${1:s}, ${2:comments}, ${3:posix})
    # Split the string s using shell-like syntax. If comments is False(the default), the parsing of comments in the given string will be disabled(
    # https://docs.python.org/2/library/shlex.html

snippet shutil_copyfileobj fsrc_fdst_length
abbr Copy the contents of the file-like object fsrc to the file-like object fdst.The integer length, if given, is the buffer size. In particular,
alias copyfileobj
    shutil.copyfileobj(${1:fsrc}, ${2:fdst}, ${3:length})
    # Copy the contents of the file-like object fsrc to the file-like object fdst.The integer length, if given, is the buffer size. In particular,
    # https://docs.python.org/2/library/shutil.html
snippet shutil_copyfile src_dst
abbr Copy the contents (no metadata) of the file named src to a file nameddst.  dst must be the complete target file name; look atshutil.copy() f
alias copyfile
    shutil.copyfile(${1:src}, ${2:dst})
    # Copy the contents (no metadata) of the file named src to a file nameddst.  dst must be the complete target file name; look atshutil.copy() f
    # https://docs.python.org/2/library/shutil.html
snippet shutil_copymode src_dst
abbr Copy the permission bits from src to dst.  The file contents, owner, andgroup are unaffected.  src and dst are path names given as strings.
alias copymode
    shutil.copymode(${1:src}, ${2:dst})
    # Copy the permission bits from src to dst.  The file contents, owner, andgroup are unaffected.  src and dst are path names given as strings.
    # https://docs.python.org/2/library/shutil.html
snippet shutil_copystat src_dst
abbr Copy the permission bits, last access time, last modification time, and flagsfrom src to dst.  The file contents, owner, and group are unaff
alias copystat
    shutil.copystat(${1:src}, ${2:dst})
    # Copy the permission bits, last access time, last modification time, and flagsfrom src to dst.  The file contents, owner, and group are unaff
    # https://docs.python.org/2/library/shutil.html
snippet shutil_copy src_dst
abbr Copy the file src to the file or directory dst.  If dst is a directory, afile with the same basename as src  is created (or overwritten) in 
alias copy
    shutil.copy(${1:src}, ${2:dst})
    # Copy the file src to the file or directory dst.  If dst is a directory, afile with the same basename as src  is created (or overwritten) in 
    # https://docs.python.org/2/library/shutil.html
snippet shutil_copy2 src_dst
abbr Similar to shutil.copy(), but metadata is copied as well – in fact,this is just shutil.copy() followed by copystat().  This issimilar to the
alias copy2
    shutil.copy2(${1:src}, ${2:dst})
    # Similar to shutil.copy(), but metadata is copied as well – in fact,this is just shutil.copy() followed by copystat().  This issimilar to the
    # https://docs.python.org/2/library/shutil.html
snippet shutil_ignore_patterns *patterns
abbr This factory function creates a function that can be used as a callable forcopytree()‘s ignore argument, ignoring files and directories that
alias ignore_patterns
    shutil.ignore_patterns(${1:*patterns})
    # This factory function creates a function that can be used as a callable forcopytree()‘s ignore argument, ignoring files and directories that
    # https://docs.python.org/2/library/shutil.html
snippet shutil_copytree src_dst_symlinks=False_ignore=None
abbr Recursively copy an entire directory tree rooted at src.  The destinationdirectory, named by dst, must not already exist; it will be created
alias copytree
    shutil.copytree(${1:src}, ${2:dst}, ${3:symlinks=False}, ${4:ignore=None})
    # Recursively copy an entire directory tree rooted at src.  The destinationdirectory, named by dst, must not already exist; it will be created
    # https://docs.python.org/2/library/shutil.html
snippet shutil_rmtree path_ignore_errors_onerror
abbr Delete an entire directory tree; path must point to a directory (but not asymbolic link to a directory).  If ignore_errors is true, errors r
alias rmtree
    shutil.rmtree(${1:path}, ${2:ignore_errors}, ${3:onerror})
    # Delete an entire directory tree; path must point to a directory (but not asymbolic link to a directory).  If ignore_errors is true, errors r
    # https://docs.python.org/2/library/shutil.html
snippet shutil_move src_dst
abbr Recursively move a file or directory (src) to another location (dst).
alias move
    shutil.move(${1:src}, ${2:dst})
    # Recursively move a file or directory (src) to another location (dst).
    # https://docs.python.org/2/library/shutil.html
snippet shutil_make_archive base_name_format_root_dir_base_dir_verbose_dry_run_owner_group_logger
abbr Create an archive file (eg. zip or tar) and returns its name.
alias make_archive
    shutil.make_archive(${1:base_name}, ${2:format}, ${3:root_dir}, ${4:base_dir}, ${5:verbose}, ${6:dry_run}, ${7:owner}, ${8:group}, ${9:logger})
    # Create an archive file (eg. zip or tar) and returns its name.
    # https://docs.python.org/2/library/shutil.html
snippet shutil_get_archive_formats 
abbr Return a list of supported formats for archiving.Each element of the returned sequence is a tuple (name, description)
alias get_archive_formats
    shutil.get_archive_formats()
    # Return a list of supported formats for archiving.Each element of the returned sequence is a tuple (name, description)
    # https://docs.python.org/2/library/shutil.html
snippet shutil_register_archive_format name_function_extra_args_description
abbr Register an archiver for the format name. function is a callable thatwill be used to invoke the archiver.
alias register_archive_format
    shutil.register_archive_format(${1:name}, ${2:function}, ${3:extra_args}, ${4:description})
    # Register an archiver for the format name. function is a callable thatwill be used to invoke the archiver.
    # https://docs.python.org/2/library/shutil.html
snippet shutil_unregister_archive_format name
abbr Remove the archive format name from the list of supported formats.
alias unregister_archive_format
    shutil.unregister_archive_format(${1:name})
    # Remove the archive format name from the list of supported formats.
    # https://docs.python.org/2/library/shutil.html

snippet signal_alarm time
abbr If time is non-zero, this function requests that a SIGALRM signal besent to the process in time seconds. Any previously scheduled alarm isca
alias alarm
    signal.alarm(${1:time})
    # If time is non-zero, this function requests that a SIGALRM signal besent to the process in time seconds. Any previously scheduled alarm isca
    # https://docs.python.org/2/library/signal.html
snippet signal_getsignal signalnum
abbr Return the current signal handler for the signal signalnum. The returned valuemay be a callable Python object, or one of the special valuess
alias getsignal
    signal.getsignal(${1:signalnum})
    # Return the current signal handler for the signal signalnum. The returned valuemay be a callable Python object, or one of the special valuess
    # https://docs.python.org/2/library/signal.html
snippet signal_pause 
abbr Cause the process to sleep until a signal is received; the appropriate handlerwill then be called.  Returns nothing.  Not on Windows. (See t
alias pause
    signal.pause()
    # Cause the process to sleep until a signal is received; the appropriate handlerwill then be called.  Returns nothing.  Not on Windows. (See t
    # https://docs.python.org/2/library/signal.html
snippet signal_setitimer which_seconds_interval
abbr Sets given interval timer (one of signal.ITIMER_REAL,signal.ITIMER_VIRTUAL or signal.ITIMER_PROF) specifiedby which to fire after seconds (f
alias setitimer
    signal.setitimer(${1:which}, ${2:seconds}, ${3:interval})
    # Sets given interval timer (one of signal.ITIMER_REAL,signal.ITIMER_VIRTUAL or signal.ITIMER_PROF) specifiedby which to fire after seconds (f
    # https://docs.python.org/2/library/signal.html
snippet signal_getitimer which
abbr Returns current value of a given interval timer specified by which.Availability: Unix.
alias getitimer
    signal.getitimer(${1:which})
    # Returns current value of a given interval timer specified by which.Availability: Unix.
    # https://docs.python.org/2/library/signal.html
snippet signal_set_wakeup_fd fd
abbr Set the wakeup fd to fd.  When a signal is received, a '\0' byte iswritten to the fd.  This can be used by a library to wakeup a poll or sel
alias set_wakeup_fd
    signal.set_wakeup_fd(${1:fd})
    # Set the wakeup fd to fd.  When a signal is received, a '\0' byte iswritten to the fd.  This can be used by a library to wakeup a poll or sel
    # https://docs.python.org/2/library/signal.html
snippet signal_siginterrupt signalnum_flag
abbr Change system call restart behaviour: if flag is False, systemcalls will be restarted when interrupted by signal signalnum, otherwisesystem 
alias siginterrupt
    signal.siginterrupt(${1:signalnum}, ${2:flag})
    # Change system call restart behaviour: if flag is False, systemcalls will be restarted when interrupted by signal signalnum, otherwisesystem 
    # https://docs.python.org/2/library/signal.html
snippet signal_signal signalnum_handler
abbr Set the handler for signal signalnum to the function handler.  handler canbe a callable Python object taking two arguments (see below), or o
alias signal
    signal.signal(${1:signalnum}, ${2:handler})
    # Set the handler for signal signalnum to the function handler.  handler canbe a callable Python object taking two arguments (see below), or o
    # https://docs.python.org/2/library/signal.html





snippet site_addsitedir sitedir_known_paths=None
abbr Add a directory to sys.path and process its .pth files.  Typicallyused in sitecustomize or usercustomize (see above).
alias addsitedir
    site.addsitedir(${1:sitedir}, ${2:known_paths=None})
    # Add a directory to sys.path and process its .pth files.  Typicallyused in sitecustomize or usercustomize (see above).
    # https://docs.python.org/2/library/site.html
snippet site_getsitepackages 
abbr Return a list containing all global site-packages directories (and possiblysite-python).
alias getsitepackages
    site.getsitepackages()
    # Return a list containing all global site-packages directories (and possiblysite-python).
    # https://docs.python.org/2/library/site.html
snippet site_getuserbase 
abbr Return the path of the user base directory, USER_BASE.  If it is notinitialized yet, this function will also set it, respectingPYTHONUSERBAS
alias getuserbase
    site.getuserbase()
    # Return the path of the user base directory, USER_BASE.  If it is notinitialized yet, this function will also set it, respectingPYTHONUSERBAS
    # https://docs.python.org/2/library/site.html
snippet site_getusersitepackages 
abbr Return the path of the user-specific site-packages directory,USER_SITE.  If it is not initialized yet, this function will also setit, respec
alias getusersitepackages
    site.getusersitepackages()
    # Return the path of the user-specific site-packages directory,USER_SITE.  If it is not initialized yet, this function will also setit, respec
    # https://docs.python.org/2/library/site.html





snippet sndhdr_what filename
abbr Determines the type of sound data stored in the file filename usingwhathdr().  If it succeeds, returns a tuple as described above, otherwise
alias what
    sndhdr.what(${1:filename})
    # Determines the type of sound data stored in the file filename usingwhathdr().  If it succeeds, returns a tuple as described above, otherwise
    # https://docs.python.org/2/library/sndhdr.html
snippet sndhdr_whathdr filename
abbr Determines the type of sound data stored in a file based on the file  header.The name of the file is given by filename.  This function retur
alias whathdr
    sndhdr.whathdr(${1:filename})
    # Determines the type of sound data stored in a file based on the file  header.The name of the file is given by filename.  This function retur
    # https://docs.python.org/2/library/sndhdr.html

snippet socket_create_connection address_timeout_source_address
abbr Connect to a TCP service listening on the Internet address (a 2-tuple(host, port)), and return the socket object.  This is a higher-levelfun
alias create_connection
    socket.create_connection(${1:address}, ${2:timeout}, ${3:source_address})
    # Connect to a TCP service listening on the Internet address (a 2-tuple(host, port)), and return the socket object.  This is a higher-levelfun
    # https://docs.python.org/2/library/socket.html
snippet socket_getaddrinfo host_port_family_socktype_proto_flags
abbr Translate the host/port argument into a sequence of 5-tuples that containall the necessary arguments for creating a socket connected to that
alias getaddrinfo
    socket.getaddrinfo(${1:host}, ${2:port}, ${3:family}, ${4:socktype}, ${5:proto}, ${6:flags})
    # Translate the host/port argument into a sequence of 5-tuples that containall the necessary arguments for creating a socket connected to that
    # https://docs.python.org/2/library/socket.html
snippet socket_getfqdn name
abbr Return a fully qualified domain name for name. If name is omitted or empty,it is interpreted as the local host.  To find the fully qualified
alias getfqdn
    socket.getfqdn(${1:name})
    # Return a fully qualified domain name for name. If name is omitted or empty,it is interpreted as the local host.  To find the fully qualified
    # https://docs.python.org/2/library/socket.html
snippet socket_gethostbyname hostname
abbr Translate a host name to IPv4 address format.  The IPv4 address is returned as astring, such as  '100.50.200.5'.  If the host name is an IPv
alias gethostbyname
    socket.gethostbyname(${1:hostname})
    # Translate a host name to IPv4 address format.  The IPv4 address is returned as astring, such as  '100.50.200.5'.  If the host name is an IPv
    # https://docs.python.org/2/library/socket.html
snippet socket_gethostbyname_ex hostname
abbr Translate a host name to IPv4 address format, extended interface. Return atriple (hostname, aliaslist, ipaddrlist) where hostname is the pri
alias gethostbyname_ex
    socket.gethostbyname_ex(${1:hostname})
    # Translate a host name to IPv4 address format, extended interface. Return atriple (hostname, aliaslist, ipaddrlist) where hostname is the pri
    # https://docs.python.org/2/library/socket.html
snippet socket_gethostname 
abbr Return a string containing the hostname of the machine where  the Pythoninterpreter is currently executing.
alias gethostname
    socket.gethostname()
    # Return a string containing the hostname of the machine where  the Pythoninterpreter is currently executing.
    # https://docs.python.org/2/library/socket.html
snippet socket_gethostbyaddr ip_address
abbr Return a triple (hostname, aliaslist, ipaddrlist) where hostname is theprimary host name responding to the given ip_address, aliaslist is a(
alias gethostbyaddr
    socket.gethostbyaddr(${1:ip_address})
    # Return a triple (hostname, aliaslist, ipaddrlist) where hostname is theprimary host name responding to the given ip_address, aliaslist is a(
    # https://docs.python.org/2/library/socket.html
snippet socket_getnameinfo sockaddr_flags
abbr Translate a socket address sockaddr into a 2-tuple (host, port). Dependingon the settings of flags, the result can contain a fully-qualified
alias getnameinfo
    socket.getnameinfo(${1:sockaddr}, ${2:flags})
    # Translate a socket address sockaddr into a 2-tuple (host, port). Dependingon the settings of flags, the result can contain a fully-qualified
    # https://docs.python.org/2/library/socket.html
snippet socket_getprotobyname protocolname
abbr Translate an Internet protocol name (for example, 'icmp') to a constantsuitable for passing as the (optional) third argument to the socket()
alias getprotobyname
    socket.getprotobyname(${1:protocolname})
    # Translate an Internet protocol name (for example, 'icmp') to a constantsuitable for passing as the (optional) third argument to the socket()
    # https://docs.python.org/2/library/socket.html
snippet socket_getservbyname servicename_protocolname
abbr Translate an Internet service name and protocol name to a port number for thatservice.  The optional protocol name, if given, should be 'tcp
alias getservbyname
    socket.getservbyname(${1:servicename}, ${2:protocolname})
    # Translate an Internet service name and protocol name to a port number for thatservice.  The optional protocol name, if given, should be 'tcp
    # https://docs.python.org/2/library/socket.html
snippet socket_getservbyport port_protocolname
abbr Translate an Internet port number and protocol name to a service name for thatservice.  The optional protocol name, if given, should be 'tcp
alias getservbyport
    socket.getservbyport(${1:port}, ${2:protocolname})
    # Translate an Internet port number and protocol name to a service name for thatservice.  The optional protocol name, if given, should be 'tcp
    # https://docs.python.org/2/library/socket.html
snippet socket_socket family_type_proto
abbr Create a new socket using the given address family, socket type and protocolnumber.  The address family should be AF_INET (the default),AF_I
alias socket
    socket.socket(${1:family}, ${2:type}, ${3:proto})
    # Create a new socket using the given address family, socket type and protocolnumber.  The address family should be AF_INET (the default),AF_I
    # https://docs.python.org/2/library/socket.html
snippet socket_socketpair family_type_proto
abbr Build a pair of connected socket objects using the given address family, sockettype, and protocol number.  Address family, socket type, and 
alias socketpair
    socket.socketpair(${1:family}, ${2:type}, ${3:proto})
    # Build a pair of connected socket objects using the given address family, sockettype, and protocol number.  Address family, socket type, and 
    # https://docs.python.org/2/library/socket.html
snippet socket_fromfd fd_family_type_proto
abbr Duplicate the file descriptor fd (an integer as returned by a file object’sfileno() method) and build a socket object from the result.  Addr
alias fromfd
    socket.fromfd(${1:fd}, ${2:family}, ${3:type}, ${4:proto})
    # Duplicate the file descriptor fd (an integer as returned by a file object’sfileno() method) and build a socket object from the result.  Addr
    # https://docs.python.org/2/library/socket.html
snippet socket_ntohl x
abbr Convert 32-bit positive integers from network to host byte order.  On machineswhere the host byte order is the same as network byte order, t
alias ntohl
    socket.ntohl(${1:x})
    # Convert 32-bit positive integers from network to host byte order.  On machineswhere the host byte order is the same as network byte order, t
    # https://docs.python.org/2/library/socket.html
snippet socket_ntohs x
abbr Convert 16-bit positive integers from network to host byte order.  On machineswhere the host byte order is the same as network byte order, t
alias ntohs
    socket.ntohs(${1:x})
    # Convert 16-bit positive integers from network to host byte order.  On machineswhere the host byte order is the same as network byte order, t
    # https://docs.python.org/2/library/socket.html
snippet socket_htonl x
abbr Convert 32-bit positive integers from host to network byte order.  On machineswhere the host byte order is the same as network byte order, t
alias htonl
    socket.htonl(${1:x})
    # Convert 32-bit positive integers from host to network byte order.  On machineswhere the host byte order is the same as network byte order, t
    # https://docs.python.org/2/library/socket.html
snippet socket_htons x
abbr Convert 16-bit positive integers from host to network byte order.  On machineswhere the host byte order is the same as network byte order, t
alias htons
    socket.htons(${1:x})
    # Convert 16-bit positive integers from host to network byte order.  On machineswhere the host byte order is the same as network byte order, t
    # https://docs.python.org/2/library/socket.html
snippet socket_inet_aton ip_string
abbr Convert an IPv4 address from dotted-quad string format (for example,‘123.45.67.89’) to 32-bit packed binary format, as a string four charact
alias inet_aton
    socket.inet_aton(${1:ip_string})
    # Convert an IPv4 address from dotted-quad string format (for example,‘123.45.67.89’) to 32-bit packed binary format, as a string four charact
    # https://docs.python.org/2/library/socket.html
snippet socket_inet_ntoa packed_ip
abbr Convert a 32-bit packed IPv4 address (a string four characters in length) to itsstandard dotted-quad string representation (for example, ‘12
alias inet_ntoa
    socket.inet_ntoa(${1:packed_ip})
    # Convert a 32-bit packed IPv4 address (a string four characters in length) to itsstandard dotted-quad string representation (for example, ‘12
    # https://docs.python.org/2/library/socket.html
snippet socket_inet_pton address_family_ip_string
abbr Convert an IP address from its family-specific string format to a packed, binaryformat. inet_pton() is useful when a library or network prot
alias inet_pton
    socket.inet_pton(${1:address_family}, ${2:ip_string})
    # Convert an IP address from its family-specific string format to a packed, binaryformat. inet_pton() is useful when a library or network prot
    # https://docs.python.org/2/library/socket.html
snippet socket_inet_ntop address_family_packed_ip
abbr Convert a packed IP address (a string of some number of characters) to itsstandard, family-specific string representation (for example, '7.1
alias inet_ntop
    socket.inet_ntop(${1:address_family}, ${2:packed_ip})
    # Convert a packed IP address (a string of some number of characters) to itsstandard, family-specific string representation (for example, '7.1
    # https://docs.python.org/2/library/socket.html
snippet socket_getdefaulttimeout 
abbr Return the default timeout in seconds (float) for new socket objects. A valueof None indicates that new socket objects have no timeout. When
alias getdefaulttimeout
    socket.getdefaulttimeout()
    # Return the default timeout in seconds (float) for new socket objects. A valueof None indicates that new socket objects have no timeout. When
    # https://docs.python.org/2/library/socket.html
snippet socket_setdefaulttimeout timeout
abbr Set the default timeout in seconds (float) for new socket objects. A value ofNone indicates that new socket objects have no timeout. When th
alias setdefaulttimeout
    socket.setdefaulttimeout(${1:timeout})
    # Set the default timeout in seconds (float) for new socket objects. A value ofNone indicates that new socket objects have no timeout. When th
    # https://docs.python.org/2/library/socket.html





snippet spwd_getspnam name
abbr Return the shadow password database entry for the given user name.
alias getspnam
    spwd.getspnam(${1:name})
    # Return the shadow password database entry for the given user name.
    # https://docs.python.org/2/library/spwd.html
snippet spwd_getspall 
abbr Return a list of all available shadow password database entries, in arbitraryorder.
alias getspall
    spwd.getspall()
    # Return a list of all available shadow password database entries, in arbitraryorder.
    # https://docs.python.org/2/library/spwd.html

snippet sqlite3_connect database_timeout_detect_types_isolation_level_check_same_thread_factory_cached_statements
abbr Opens a connection to the SQLite database file database. You can use":memory:" to open a database connection to a database that resides in R
alias connect
    sqlite3.connect(${1:database}, ${2:timeout}, ${3:detect_types}, ${4:isolation_level}, ${5:check_same_thread}, ${6:factory}, ${7:cached_statements})
    # Opens a connection to the SQLite database file database. You can use":memory:" to open a database connection to a database that resides in R
    # https://docs.python.org/2/library/sqlite3.html
snippet sqlite3_register_converter typename_callable
abbr Registers a callable to convert a bytestring from the database into a customPython type. The callable will be invoked for all database value
alias register_converter
    sqlite3.register_converter(${1:typename}, ${2:callable})
    # Registers a callable to convert a bytestring from the database into a customPython type. The callable will be invoked for all database value
    # https://docs.python.org/2/library/sqlite3.html
snippet sqlite3_register_adapter type_callable
abbr Registers a callable to convert the custom Python type type into one ofSQLite’s supported types. The callable callable accepts as single par
alias register_adapter
    sqlite3.register_adapter(${1:type}, ${2:callable})
    # Registers a callable to convert the custom Python type type into one ofSQLite’s supported types. The callable callable accepts as single par
    # https://docs.python.org/2/library/sqlite3.html
snippet sqlite3_complete_statement sql
abbr Returns True if the string sql contains one or more complete SQLstatements terminated by semicolons. It does not verify that the SQL issynta
alias complete_statement
    sqlite3.complete_statement(${1:sql})
    # Returns True if the string sql contains one or more complete SQLstatements terminated by semicolons. It does not verify that the SQL issynta
    # https://docs.python.org/2/library/sqlite3.html
snippet sqlite3_enable_callback_tracebacks flag
abbr By default you will not get any tracebacks in user-defined functions,aggregates, converters, authorizer callbacks etc. If you want to debug 
alias enable_callback_tracebacks
    sqlite3.enable_callback_tracebacks(${1:flag})
    # By default you will not get any tracebacks in user-defined functions,aggregates, converters, authorizer callbacks etc. If you want to debug 
    # https://docs.python.org/2/library/sqlite3.html

snippet ssl_wrap_socket sock_keyfile=None_certfile=None_server_side=False_cert_reqs=CERT_NONE_ssl_version={see docs}_ca_certs=None_do_handshake_on_connect=True_suppress_ragged_eofs=True_ciphers=None
abbr Takes an instance sock of socket.socket, and returns an instanceof ssl.SSLSocket, a subtype of socket.socket, which wrapsthe underlying sock
alias wrap_socket
    ssl.wrap_socket(${1:sock}, ${2:keyfile=None}, ${3:certfile=None}, ${4:server_side=False}, ${5:cert_reqs=CERT_NONE}, ${6:ssl_version={see docs}}, ${7:ca_certs=None}, ${8:do_handshake_on_connect=True}, ${9:suppress_ragged_eofs=True}, ${10:ciphers=None})
    # Takes an instance sock of socket.socket, and returns an instanceof ssl.SSLSocket, a subtype of socket.socket, which wrapsthe underlying sock
    # https://docs.python.org/2/library/ssl.html
snippet ssl_RAND_status 
abbr Returns True if the SSL pseudo-random number generator has been seeded with‘enough’ randomness, and False otherwise.  You can use ssl.RAND_e
alias RAND_status
    ssl.RAND_status()
    # Returns True if the SSL pseudo-random number generator has been seeded with‘enough’ randomness, and False otherwise.  You can use ssl.RAND_e
    # https://docs.python.org/2/library/ssl.html
snippet ssl_RAND_egd path
abbr If you are running an entropy-gathering daemon (EGD) somewhere, and pathis the pathname of a socket connection open to it, this will read 25
alias RAND_egd
    ssl.RAND_egd(${1:path})
    # If you are running an entropy-gathering daemon (EGD) somewhere, and pathis the pathname of a socket connection open to it, this will read 25
    # https://docs.python.org/2/library/ssl.html
snippet ssl_RAND_add bytes_entropy
abbr Mixes the given bytes into the SSL pseudo-random number generator.  Theparameter entropy (a float) is a lower bound on the entropy contained
alias RAND_add
    ssl.RAND_add(${1:bytes}, ${2:entropy})
    # Mixes the given bytes into the SSL pseudo-random number generator.  Theparameter entropy (a float) is a lower bound on the entropy contained
    # https://docs.python.org/2/library/ssl.html
snippet ssl_cert_time_to_seconds timestring
abbr Returns a floating-point value containing a normal seconds-after-the-epochtime value, given the time-string representing the “notBefore” or 
alias cert_time_to_seconds
    ssl.cert_time_to_seconds(${1:timestring})
    # Returns a floating-point value containing a normal seconds-after-the-epochtime value, given the time-string representing the “notBefore” or 
    # https://docs.python.org/2/library/ssl.html
snippet ssl_get_server_certificate addr_ssl_version=PROTOCOL_SSLv3_ca_certs=None
abbr Given the address addr of an SSL-protected server, as a (hostname,port-number) pair, fetches the server’s certificate, and returns it as aPE
alias get_server_certificate
    ssl.get_server_certificate(${1:addr}, ${2:ssl_version=PROTOCOL_SSLv3}, ${3:ca_certs=None})
    # Given the address addr of an SSL-protected server, as a (hostname,port-number) pair, fetches the server’s certificate, and returns it as aPE
    # https://docs.python.org/2/library/ssl.html
snippet ssl_DER_cert_to_PEM_cert DER_cert_bytes
abbr Given a certificate as a DER-encoded blob of bytes, returns a PEM-encodedstring version of the same certificate.
alias DER_cert_to_PEM_cert
    ssl.DER_cert_to_PEM_cert(${1:DER_cert_bytes})
    # Given a certificate as a DER-encoded blob of bytes, returns a PEM-encodedstring version of the same certificate.
    # https://docs.python.org/2/library/ssl.html
snippet ssl_PEM_cert_to_DER_cert PEM_cert_string
abbr Given a certificate as an ASCII PEM string, returns a DER-encoded sequence ofbytes for that same certificate.
alias PEM_cert_to_DER_cert
    ssl.PEM_cert_to_DER_cert(${1:PEM_cert_string})
    # Given a certificate as an ASCII PEM string, returns a DER-encoded sequence ofbytes for that same certificate.
    # https://docs.python.org/2/library/ssl.html

snippet stat_S_ISDIR mode
abbr Return non-zero if the mode is from a directory.
alias S_ISDIR
    stat.S_ISDIR(${1:mode})
    # Return non-zero if the mode is from a directory.
    # https://docs.python.org/2/library/stat.html
snippet stat_S_ISCHR mode
abbr Return non-zero if the mode is from a character special device file.
alias S_ISCHR
    stat.S_ISCHR(${1:mode})
    # Return non-zero if the mode is from a character special device file.
    # https://docs.python.org/2/library/stat.html
snippet stat_S_ISBLK mode
abbr Return non-zero if the mode is from a block special device file.
alias S_ISBLK
    stat.S_ISBLK(${1:mode})
    # Return non-zero if the mode is from a block special device file.
    # https://docs.python.org/2/library/stat.html
snippet stat_S_ISREG mode
abbr Return non-zero if the mode is from a regular file.
alias S_ISREG
    stat.S_ISREG(${1:mode})
    # Return non-zero if the mode is from a regular file.
    # https://docs.python.org/2/library/stat.html
snippet stat_S_ISFIFO mode
abbr Return non-zero if the mode is from a FIFO (named pipe).
alias S_ISFIFO
    stat.S_ISFIFO(${1:mode})
    # Return non-zero if the mode is from a FIFO (named pipe).
    # https://docs.python.org/2/library/stat.html
snippet stat_S_ISLNK mode
abbr Return non-zero if the mode is from a symbolic link.
alias S_ISLNK
    stat.S_ISLNK(${1:mode})
    # Return non-zero if the mode is from a symbolic link.
    # https://docs.python.org/2/library/stat.html
snippet stat_S_ISSOCK mode
abbr Return non-zero if the mode is from a socket.
alias S_ISSOCK
    stat.S_ISSOCK(${1:mode})
    # Return non-zero if the mode is from a socket.
    # https://docs.python.org/2/library/stat.html
snippet stat_S_IMODE mode
abbr Return the portion of the file’s mode that can be set by os.chmod()—that is, the file’s permission bits, plus the sticky bit, set-group-id, 
alias S_IMODE
    stat.S_IMODE(${1:mode})
    # Return the portion of the file’s mode that can be set by os.chmod()—that is, the file’s permission bits, plus the sticky bit, set-group-id, 
    # https://docs.python.org/2/library/stat.html
snippet stat_S_IFMT mode
abbr Return the portion of the file’s mode that describes the file type (used by theS_IS*() functions above).
alias S_IFMT
    stat.S_IFMT(${1:mode})
    # Return the portion of the file’s mode that describes the file type (used by theS_IS*() functions above).
    # https://docs.python.org/2/library/stat.html





snippet string_capwords s_sep
abbr Split the argument into words using str.split(), capitalize each wordusing str.capitalize(), and join the capitalized words usingstr.join().
alias capwords
    string.capwords(${1:s}, ${2:sep})
    # Split the argument into words using str.split(), capitalize each wordusing str.capitalize(), and join the capitalized words usingstr.join().
    # https://docs.python.org/2/library/string.html
snippet string_maketrans from_to
abbr Return a translation table suitable for passing to translate(), that willmap each character in from into the character at the same position 
alias maketrans
    string.maketrans(${1:from}, ${2:to})
    # Return a translation table suitable for passing to translate(), that willmap each character in from into the character at the same position 
    # https://docs.python.org/2/library/string.html
snippet string_atof s
abbr Deprecated since version 2.0: Use the float() built-in function.
alias atof
    string.atof(${1:s})
    # Deprecated since version 2.0: Use the float() built-in function.
    # https://docs.python.org/2/library/string.html
snippet string_atoi s_base
abbr Deprecated since version 2.0: Use the int() built-in function.
alias atoi
    string.atoi(${1:s}, ${2:base})
    # Deprecated since version 2.0: Use the int() built-in function.
    # https://docs.python.org/2/library/string.html
snippet string_atol s_base
abbr Deprecated since version 2.0: Use the long() built-in function.
alias atol
    string.atol(${1:s}, ${2:base})
    # Deprecated since version 2.0: Use the long() built-in function.
    # https://docs.python.org/2/library/string.html
snippet string_capitalize word
abbr Return a copy of word with only its first character capitalized.
alias capitalize
    string.capitalize(${1:word})
    # Return a copy of word with only its first character capitalized.
    # https://docs.python.org/2/library/string.html
snippet string_expandtabs s_tabsize
abbr Expand tabs in a string replacing them by one or more spaces, depending on thecurrent column and the given tab size.  The column number is r
alias expandtabs
    string.expandtabs(${1:s}, ${2:tabsize})
    # Expand tabs in a string replacing them by one or more spaces, depending on thecurrent column and the given tab size.  The column number is r
    # https://docs.python.org/2/library/string.html
snippet string_find s_sub_start_end
abbr Return the lowest index in s where the substring sub is found such thatsub is wholly contained in s[start:end].  Return -1 on failure.Defaul
alias find
    string.find(${1:s}, ${2:sub}, ${3:start}, ${4:end})
    # Return the lowest index in s where the substring sub is found such thatsub is wholly contained in s[start:end].  Return -1 on failure.Defaul
    # https://docs.python.org/2/library/string.html
snippet string_rfind s_sub_start_end
abbr Like find() but find the highest index.
alias rfind
    string.rfind(${1:s}, ${2:sub}, ${3:start}, ${4:end})
    # Like find() but find the highest index.
    # https://docs.python.org/2/library/string.html
snippet string_index s_sub_start_end
abbr Like find() but raise ValueError when the substring is not found.
alias index
    string.index(${1:s}, ${2:sub}, ${3:start}, ${4:end})
    # Like find() but raise ValueError when the substring is not found.
    # https://docs.python.org/2/library/string.html
snippet string_rindex s_sub_start_end
abbr Like rfind() but raise ValueError when the substring is not found.
alias rindex
    string.rindex(${1:s}, ${2:sub}, ${3:start}, ${4:end})
    # Like rfind() but raise ValueError when the substring is not found.
    # https://docs.python.org/2/library/string.html
snippet string_count s_sub_start_end
abbr Return the number of (non-overlapping) occurrences of substring sub in strings[start:end]. Defaults for start and end and interpretation of 
alias count
    string.count(${1:s}, ${2:sub}, ${3:start}, ${4:end})
    # Return the number of (non-overlapping) occurrences of substring sub in strings[start:end]. Defaults for start and end and interpretation of 
    # https://docs.python.org/2/library/string.html
snippet string_lower s
abbr Return a copy of s, but with upper case letters converted to lower case.
alias lower
    string.lower(${1:s})
    # Return a copy of s, but with upper case letters converted to lower case.
    # https://docs.python.org/2/library/string.html
snippet string_split s_sep_maxsplit
abbr Return a list of the words of the string s.  If the optional second argumentsep is absent or None, the words are separated by arbitrary stri
alias split
    string.split(${1:s}, ${2:sep}, ${3:maxsplit})
    # Return a list of the words of the string s.  If the optional second argumentsep is absent or None, the words are separated by arbitrary stri
    # https://docs.python.org/2/library/string.html
snippet string_rsplit s_sep_maxsplit
abbr Return a list of the words of the string s, scanning s from the end.  To allintents and purposes, the resulting list of words is the same as
alias rsplit
    string.rsplit(${1:s}, ${2:sep}, ${3:maxsplit})
    # Return a list of the words of the string s, scanning s from the end.  To allintents and purposes, the resulting list of words is the same as
    # https://docs.python.org/2/library/string.html
snippet string_splitfields s_sep_maxsplit
abbr This function behaves identically to split().  (In the past, split()was only used with one argument, while splitfields() was only used witht
alias splitfields
    string.splitfields(${1:s}, ${2:sep}, ${3:maxsplit})
    # This function behaves identically to split().  (In the past, split()was only used with one argument, while splitfields() was only used witht
    # https://docs.python.org/2/library/string.html
snippet string_join words_sep
abbr Concatenate a list or tuple of words with intervening occurrences of  sep.The default value for sep is a single space character.  It is alwa
alias join
    string.join(${1:words}, ${2:sep})
    # Concatenate a list or tuple of words with intervening occurrences of  sep.The default value for sep is a single space character.  It is alwa
    # https://docs.python.org/2/library/string.html
snippet string_joinfields words_sep
abbr This function behaves identically to join().  (In the past,  join()was only used with one argument, while joinfields() was only used with tw
alias joinfields
    string.joinfields(${1:words}, ${2:sep})
    # This function behaves identically to join().  (In the past,  join()was only used with one argument, while joinfields() was only used with tw
    # https://docs.python.org/2/library/string.html
snippet string_lstrip s_chars
abbr Return a copy of the string with leading characters removed.  If chars isomitted or None, whitespace characters are removed.  If given and n
alias lstrip
    string.lstrip(${1:s}, ${2:chars})
    # Return a copy of the string with leading characters removed.  If chars isomitted or None, whitespace characters are removed.  If given and n
    # https://docs.python.org/2/library/string.html
snippet string_rstrip s_chars
abbr Return a copy of the string with trailing characters removed.  If chars isomitted or None, whitespace characters are removed.  If given and 
alias rstrip
    string.rstrip(${1:s}, ${2:chars})
    # Return a copy of the string with trailing characters removed.  If chars isomitted or None, whitespace characters are removed.  If given and 
    # https://docs.python.org/2/library/string.html
snippet string_strip s_chars
abbr Return a copy of the string with leading and trailing characters removed.  Ifchars is omitted or None, whitespace characters are removed.  I
alias strip
    string.strip(${1:s}, ${2:chars})
    # Return a copy of the string with leading and trailing characters removed.  Ifchars is omitted or None, whitespace characters are removed.  I
    # https://docs.python.org/2/library/string.html
snippet string_swapcase s
abbr Return a copy of s, but with lower case letters converted to upper case andvice versa.
alias swapcase
    string.swapcase(${1:s})
    # Return a copy of s, but with lower case letters converted to upper case andvice versa.
    # https://docs.python.org/2/library/string.html
snippet string_translate s_table_deletechars
abbr Delete all characters from s that are in deletechars (if  present), and thentranslate the characters using table, which  must be a 256-chara
alias translate
    string.translate(${1:s}, ${2:table}, ${3:deletechars})
    # Delete all characters from s that are in deletechars (if  present), and thentranslate the characters using table, which  must be a 256-chara
    # https://docs.python.org/2/library/string.html
snippet string_upper s
abbr Return a copy of s, but with lower case letters converted to upper case.
alias upper
    string.upper(${1:s})
    # Return a copy of s, but with lower case letters converted to upper case.
    # https://docs.python.org/2/library/string.html
snippet string_ljust s_width_fillchar
abbr These functions respectively left-justify, right-justify and center a string ina field of given width.  They return a string that is at leas
alias ljust
    string.ljust(${1:s}, ${2:width}, ${3:fillchar})
    # These functions respectively left-justify, right-justify and center a string ina field of given width.  They return a string that is at leas
    # https://docs.python.org/2/library/string.html
snippet string_rjust s_width_fillchar
abbr These functions respectively left-justify, right-justify and center a string ina field of given width.  They return a string that is at leas
alias rjust
    string.rjust(${1:s}, ${2:width}, ${3:fillchar})
    # These functions respectively left-justify, right-justify and center a string ina field of given width.  They return a string that is at leas
    # https://docs.python.org/2/library/string.html
snippet string_center s_width_fillchar
abbr These functions respectively left-justify, right-justify and center a string ina field of given width.  They return a string that is at leas
alias center
    string.center(${1:s}, ${2:width}, ${3:fillchar})
    # These functions respectively left-justify, right-justify and center a string ina field of given width.  They return a string that is at leas
    # https://docs.python.org/2/library/string.html
snippet string_zfill s_width
abbr Pad a numeric string s on the left with zero digits until thegiven width is reached.  Strings starting with a sign are handledcorrectly.
alias zfill
    string.zfill(${1:s}, ${2:width})
    # Pad a numeric string s on the left with zero digits until thegiven width is reached.  Strings starting with a sign are handledcorrectly.
    # https://docs.python.org/2/library/string.html
snippet string_replace s_old_new_maxreplace
abbr Return a copy of string s with all occurrences of substring old replacedby new.  If the optional argument maxreplace is given, the firstmaxr
alias replace
    string.replace(${1:s}, ${2:old}, ${3:new}, ${4:maxreplace})
    # Return a copy of string s with all occurrences of substring old replacedby new.  If the optional argument maxreplace is given, the firstmaxr
    # https://docs.python.org/2/library/string.html

snippet cStringIO_StringIO s
abbr Return a StringIO-like stream for reading or writing.
alias StringIO
    cStringIO.StringIO(${1:s})
    # Return a StringIO-like stream for reading or writing.
    # https://docs.python.org/2/library/stringio.html

snippet stringprep_in_table_a1 code
abbr Determine whether code is in tableA.1 (Unassigned code points in Unicode 3.2).
alias in_table_a1
    stringprep.in_table_a1(${1:code})
    # Determine whether code is in tableA.1 (Unassigned code points in Unicode 3.2).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_in_table_b1 code
abbr Determine whether code is in tableB.1 (Commonly mapped to nothing).
alias in_table_b1
    stringprep.in_table_b1(${1:code})
    # Determine whether code is in tableB.1 (Commonly mapped to nothing).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_map_table_b2 code
abbr Return the mapped value for code according to tableB.2 (Mapping forcase-folding used with NFKC).
alias map_table_b2
    stringprep.map_table_b2(${1:code})
    # Return the mapped value for code according to tableB.2 (Mapping forcase-folding used with NFKC).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_map_table_b3 code
abbr Return the mapped value for code according to tableB.3 (Mapping forcase-folding used with no normalization).
alias map_table_b3
    stringprep.map_table_b3(${1:code})
    # Return the mapped value for code according to tableB.3 (Mapping forcase-folding used with no normalization).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_in_table_c11 code
abbr Determine whether code is in tableC.1.1  (ASCII space characters).
alias in_table_c11
    stringprep.in_table_c11(${1:code})
    # Determine whether code is in tableC.1.1  (ASCII space characters).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_in_table_c12 code
abbr Determine whether code is in tableC.1.2  (Non-ASCII space characters).
alias in_table_c12
    stringprep.in_table_c12(${1:code})
    # Determine whether code is in tableC.1.2  (Non-ASCII space characters).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_in_table_c11_c12 code
abbr Determine whether code is in tableC.1  (Space characters, union of C.1.1 andC.1.2).
alias in_table_c11_c12
    stringprep.in_table_c11_c12(${1:code})
    # Determine whether code is in tableC.1  (Space characters, union of C.1.1 andC.1.2).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_in_table_c21 code
abbr Determine whether code is in tableC.2.1  (ASCII control characters).
alias in_table_c21
    stringprep.in_table_c21(${1:code})
    # Determine whether code is in tableC.2.1  (ASCII control characters).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_in_table_c22 code
abbr Determine whether code is in tableC.2.2  (Non-ASCII control characters).
alias in_table_c22
    stringprep.in_table_c22(${1:code})
    # Determine whether code is in tableC.2.2  (Non-ASCII control characters).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_in_table_c21_c22 code
abbr Determine whether code is in tableC.2  (Control characters, union of C.2.1 andC.2.2).
alias in_table_c21_c22
    stringprep.in_table_c21_c22(${1:code})
    # Determine whether code is in tableC.2  (Control characters, union of C.2.1 andC.2.2).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_in_table_c3 code
abbr Determine whether code is in tableC.3  (Private use).
alias in_table_c3
    stringprep.in_table_c3(${1:code})
    # Determine whether code is in tableC.3  (Private use).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_in_table_c4 code
abbr Determine whether code is in tableC.4  (Non-character code points).
alias in_table_c4
    stringprep.in_table_c4(${1:code})
    # Determine whether code is in tableC.4  (Non-character code points).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_in_table_c5 code
abbr Determine whether code is in tableC.5  (Surrogate codes).
alias in_table_c5
    stringprep.in_table_c5(${1:code})
    # Determine whether code is in tableC.5  (Surrogate codes).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_in_table_c6 code
abbr Determine whether code is in tableC.6  (Inappropriate for plain text).
alias in_table_c6
    stringprep.in_table_c6(${1:code})
    # Determine whether code is in tableC.6  (Inappropriate for plain text).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_in_table_c7 code
abbr Determine whether code is in tableC.7  (Inappropriate for canonicalrepresentation).
alias in_table_c7
    stringprep.in_table_c7(${1:code})
    # Determine whether code is in tableC.7  (Inappropriate for canonicalrepresentation).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_in_table_c8 code
abbr Determine whether code is in tableC.8  (Change display properties or aredeprecated).
alias in_table_c8
    stringprep.in_table_c8(${1:code})
    # Determine whether code is in tableC.8  (Change display properties or aredeprecated).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_in_table_c9 code
abbr Determine whether code is in tableC.9  (Tagging characters).
alias in_table_c9
    stringprep.in_table_c9(${1:code})
    # Determine whether code is in tableC.9  (Tagging characters).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_in_table_d1 code
abbr Determine whether code is in tableD.1  (Characters with bidirectional property“R” or “AL”).
alias in_table_d1
    stringprep.in_table_d1(${1:code})
    # Determine whether code is in tableD.1  (Characters with bidirectional property“R” or “AL”).
    # https://docs.python.org/2/library/stringprep.html
snippet stringprep_in_table_d2 code
abbr Determine whether code is in tableD.2  (Characters with bidirectional property“L”).
alias in_table_d2
    stringprep.in_table_d2(${1:code})
    # Determine whether code is in tableD.2  (Characters with bidirectional property“L”).
    # https://docs.python.org/2/library/stringprep.html



snippet struct_pack fmt_v1_v2_...
abbr Return a string containing the values v1, v2, ... packed according to thegiven format.  The arguments must match the values required by the 
alias pack
    struct.pack(${1:fmt}, ${2:v1}, ${3:v2}, ${4:...})
    # Return a string containing the values v1, v2, ... packed according to thegiven format.  The arguments must match the values required by the 
    # https://docs.python.org/2/library/struct.html
snippet struct_pack_into fmt_buffer_offset_v1_v2_...
abbr Pack the values v1, v2, ... according to the given format, write thepacked bytes into the writable buffer starting at offset. Note that theo
alias pack_into
    struct.pack_into(${1:fmt}, ${2:buffer}, ${3:offset}, ${4:v1}, ${5:v2}, ${6:...})
    # Pack the values v1, v2, ... according to the given format, write thepacked bytes into the writable buffer starting at offset. Note that theo
    # https://docs.python.org/2/library/struct.html
snippet struct_unpack fmt_string
abbr Unpack the string (presumably packed by pack(fmt, ...)) according to thegiven format.  The result is a tuple even if it contains exactly one
alias unpack
    struct.unpack(${1:fmt}, ${2:string})
    # Unpack the string (presumably packed by pack(fmt, ...)) according to thegiven format.  The result is a tuple even if it contains exactly one
    # https://docs.python.org/2/library/struct.html
snippet struct_unpack_from fmt_buffer_offset=0
abbr Unpack the buffer according to the given format. The result is a tuple evenif it contains exactly one item. The buffer must contain at least
alias unpack_from
    struct.unpack_from(${1:fmt}, ${2:buffer}, ${3:offset=0})
    # Unpack the buffer according to the given format. The result is a tuple evenif it contains exactly one item. The buffer must contain at least
    # https://docs.python.org/2/library/struct.html
snippet struct_calcsize fmt
abbr Return the size of the struct (and hence of the string) corresponding to thegiven format.
alias calcsize
    struct.calcsize(${1:fmt})
    # Return the size of the struct (and hence of the string) corresponding to thegiven format.
    # https://docs.python.org/2/library/struct.html

snippet subprocess_call args_*_stdin=None_stdout=None_stderr=None_shell=False
abbr Run the command described by args.  Wait for command to complete, thenreturn the returncode attribute.
alias call
    subprocess.call(${1:args}, ${2:*}, ${3:stdin=None}, ${4:stdout=None}, ${5:stderr=None}, ${6:shell=False})
    # Run the command described by args.  Wait for command to complete, thenreturn the returncode attribute.
    # https://docs.python.org/2/library/subprocess.html
snippet subprocess_check_call args_*_stdin=None_stdout=None_stderr=None_shell=False
abbr Run command with arguments.  Wait for command to complete. If the returncode was zero then return, otherwise raise CalledProcessError. TheCa
alias check_call
    subprocess.check_call(${1:args}, ${2:*}, ${3:stdin=None}, ${4:stdout=None}, ${5:stderr=None}, ${6:shell=False})
    # Run command with arguments.  Wait for command to complete. If the returncode was zero then return, otherwise raise CalledProcessError. TheCa
    # https://docs.python.org/2/library/subprocess.html
snippet subprocess_check_output args_*_stdin=None_stderr=None_shell=False_universal_newlines=False
abbr Run command with arguments and return its output as a byte string.
alias check_output
    subprocess.check_output(${1:args}, ${2:*}, ${3:stdin=None}, ${4:stderr=None}, ${5:shell=False}, ${6:universal_newlines=False})
    # Run command with arguments and return its output as a byte string.
    # https://docs.python.org/2/library/subprocess.html



snippet sunau_open file_mode
abbr If file is a string, open the file by that name, otherwise treat it as aseekable file-like object. mode can be any of
alias open
    sunau.open(${1:file}, ${2:mode})
    # If file is a string, open the file by that name, otherwise treat it as aseekable file-like object. mode can be any of
    # https://docs.python.org/2/library/sunau.html
snippet sunau_openfp file_mode
abbr A synonym for open(), maintained for backwards compatibility.
alias openfp
    sunau.openfp(${1:file}, ${2:mode})
    # A synonym for open(), maintained for backwards compatibility.
    # https://docs.python.org/2/library/sunau.html

snippet sunaudiodev_open mode
abbr This function opens the audio device and returns a Sun audio device object. Thisobject can then be used to do I/O on. The mode parameter is 
alias open
    sunaudiodev.open(${1:mode})
    # This function opens the audio device and returns a Sun audio device object. Thisobject can then be used to do I/O on. The mode parameter is 
    # https://docs.python.org/2/library/sunaudio.html



snippet symtable_symtable code_filename_compile_type
abbr Return the toplevel SymbolTable for the Python source code.filename is the name of the file containing the code.  compile_type islike the mo
alias symtable
    symtable.symtable(${1:code}, ${2:filename}, ${3:compile_type})
    # Return the toplevel SymbolTable for the Python source code.filename is the name of the file containing the code.  compile_type islike the mo
    # https://docs.python.org/2/library/symtable.html

snippet sys_call_tracing func_args
abbr Call func(*args), while tracing is enabled.  The tracing state is saved,and restored afterwards.  This is intended to be called from a debug
alias call_tracing
    sys.call_tracing(${1:func}, ${2:args})
    # Call func(*args), while tracing is enabled.  The tracing state is saved,and restored afterwards.  This is intended to be called from a debug
    # https://docs.python.org/2/library/sys.html
snippet sys__clear_type_cache 
abbr Clear the internal type cache. The type cache is used to speed up attributeand method lookups. Use the function only to drop unnecessary ref
alias _clear_type_cache
    sys._clear_type_cache()
    # Clear the internal type cache. The type cache is used to speed up attributeand method lookups. Use the function only to drop unnecessary ref
    # https://docs.python.org/2/library/sys.html
snippet sys__current_frames 
abbr Return a dictionary mapping each thread’s identifier to the topmost stack framecurrently active in that thread at the time the function is c
alias _current_frames
    sys._current_frames()
    # Return a dictionary mapping each thread’s identifier to the topmost stack framecurrently active in that thread at the time the function is c
    # https://docs.python.org/2/library/sys.html
snippet sys_displayhook value
abbr If value is not None, this function prints it to sys.stdout, and savesit in __builtin__._.
alias displayhook
    sys.displayhook(${1:value})
    # If value is not None, this function prints it to sys.stdout, and savesit in __builtin__._.
    # https://docs.python.org/2/library/sys.html
snippet sys_excepthook type_value_traceback
abbr This function prints out a given traceback and exception to sys.stderr.
alias excepthook
    sys.excepthook(${1:type}, ${2:value}, ${3:traceback})
    # This function prints out a given traceback and exception to sys.stderr.
    # https://docs.python.org/2/library/sys.html
snippet sys_exc_info 
abbr This function returns a tuple of three values that give information about theexception that is currently being handled.  The information ret
alias exc_info
    sys.exc_info()
    # This function returns a tuple of three values that give information about theexception that is currently being handled.  The information ret
    # https://docs.python.org/2/library/sys.html
snippet sys_exc_clear 
abbr This function clears all information relating to the current or last exceptionthat occurred in the current thread.  After calling this funct
alias exc_clear
    sys.exc_clear()
    # This function clears all information relating to the current or last exceptionthat occurred in the current thread.  After calling this funct
    # https://docs.python.org/2/library/sys.html
snippet sys_exit arg
abbr Exit from Python.  This is implemented by raising the SystemExitexception, so cleanup actions specified by finally clauses of trystatements 
alias exit
    sys.exit(${1:arg})
    # Exit from Python.  This is implemented by raising the SystemExitexception, so cleanup actions specified by finally clauses of trystatements 
    # https://docs.python.org/2/library/sys.html
snippet sys_getcheckinterval 
abbr Return the interpreter’s “check interval”; see setcheckinterval().
alias getcheckinterval
    sys.getcheckinterval()
    # Return the interpreter’s “check interval”; see setcheckinterval().
    # https://docs.python.org/2/library/sys.html
snippet sys_getdefaultencoding 
abbr Return the name of the current default string encoding used by the Unicodeimplementation.
alias getdefaultencoding
    sys.getdefaultencoding()
    # Return the name of the current default string encoding used by the Unicodeimplementation.
    # https://docs.python.org/2/library/sys.html
snippet sys_getdlopenflags 
abbr Return the current value of the flags that are used for dlopen() calls.The flag constants are defined in the dl and DLFCN modules.Availabili
alias getdlopenflags
    sys.getdlopenflags()
    # Return the current value of the flags that are used for dlopen() calls.The flag constants are defined in the dl and DLFCN modules.Availabili
    # https://docs.python.org/2/library/sys.html
snippet sys_getfilesystemencoding 
abbr Return the name of the encoding used to convert Unicode filenames into systemfile names, or None if the system default encoding is used. The
alias getfilesystemencoding
    sys.getfilesystemencoding()
    # Return the name of the encoding used to convert Unicode filenames into systemfile names, or None if the system default encoding is used. The
    # https://docs.python.org/2/library/sys.html
snippet sys_getrefcount object
abbr Return the reference count of the object.  The count returned is generally onehigher than you might expect, because it includes the (tempora
alias getrefcount
    sys.getrefcount(${1:object})
    # Return the reference count of the object.  The count returned is generally onehigher than you might expect, because it includes the (tempora
    # https://docs.python.org/2/library/sys.html
snippet sys_getrecursionlimit 
abbr Return the current value of the recursion limit, the maximum depth of the Pythoninterpreter stack.  This limit prevents infinite recursion f
alias getrecursionlimit
    sys.getrecursionlimit()
    # Return the current value of the recursion limit, the maximum depth of the Pythoninterpreter stack.  This limit prevents infinite recursion f
    # https://docs.python.org/2/library/sys.html
snippet sys_getsizeof object_default
abbr Return the size of an object in bytes. The object can be any type ofobject. All built-in objects will return correct results, but thisdoes n
alias getsizeof
    sys.getsizeof(${1:object}, ${2:default})
    # Return the size of an object in bytes. The object can be any type ofobject. All built-in objects will return correct results, but thisdoes n
    # https://docs.python.org/2/library/sys.html
snippet sys__getframe depth
abbr Return a frame object from the call stack.  If optional integer depth isgiven, return the frame object that many calls below the top of the 
alias _getframe
    sys._getframe(${1:depth})
    # Return a frame object from the call stack.  If optional integer depth isgiven, return the frame object that many calls below the top of the 
    # https://docs.python.org/2/library/sys.html
snippet sys_getprofile 
abbr Get the profiler function as set by setprofile().
alias getprofile
    sys.getprofile()
    # Get the profiler function as set by setprofile().
    # https://docs.python.org/2/library/sys.html
snippet sys_gettrace 
abbr Get the trace function as set by settrace().
alias gettrace
    sys.gettrace()
    # Get the trace function as set by settrace().
    # https://docs.python.org/2/library/sys.html
snippet sys_getwindowsversion 
abbr Return a named tuple describing the Windows versioncurrently running.  The named elements are major, minor,build, platform, service_pack, se
alias getwindowsversion
    sys.getwindowsversion()
    # Return a named tuple describing the Windows versioncurrently running.  The named elements are major, minor,build, platform, service_pack, se
    # https://docs.python.org/2/library/sys.html
snippet sys_setcheckinterval interval
abbr Set the interpreter’s “check interval”.  This integer value determines how oftenthe interpreter checks for periodic things such as thread sw
alias setcheckinterval
    sys.setcheckinterval(${1:interval})
    # Set the interpreter’s “check interval”.  This integer value determines how oftenthe interpreter checks for periodic things such as thread sw
    # https://docs.python.org/2/library/sys.html
snippet sys_setdefaultencoding name
abbr Set the current default string encoding used by the Unicode implementation.  Ifname does not match any available encoding, LookupError is ra
alias setdefaultencoding
    sys.setdefaultencoding(${1:name})
    # Set the current default string encoding used by the Unicode implementation.  Ifname does not match any available encoding, LookupError is ra
    # https://docs.python.org/2/library/sys.html
snippet sys_setdlopenflags n
abbr Set the flags used by the interpreter for dlopen() calls, such as whenthe interpreter loads extension modules.  Among other things, this wil
alias setdlopenflags
    sys.setdlopenflags(${1:n})
    # Set the flags used by the interpreter for dlopen() calls, such as whenthe interpreter loads extension modules.  Among other things, this wil
    # https://docs.python.org/2/library/sys.html
snippet sys_setprofile profilefunc
abbr Set the system’s profile function, which allows you to implement a Python sourcecode profiler in Python.  See chapter The Python Profilers f
alias setprofile
    sys.setprofile(${1:profilefunc})
    # Set the system’s profile function, which allows you to implement a Python sourcecode profiler in Python.  See chapter The Python Profilers f
    # https://docs.python.org/2/library/sys.html
snippet sys_setrecursionlimit limit
abbr Set the maximum depth of the Python interpreter stack to limit.  This limitprevents infinite recursion from causing an overflow of the C sta
alias setrecursionlimit
    sys.setrecursionlimit(${1:limit})
    # Set the maximum depth of the Python interpreter stack to limit.  This limitprevents infinite recursion from causing an overflow of the C sta
    # https://docs.python.org/2/library/sys.html
snippet sys_settrace tracefunc
abbr Set the system’s trace function, which allows you to implement a Pythonsource code debugger in Python.  The function is thread-specific; for
alias settrace
    sys.settrace(${1:tracefunc})
    # Set the system’s trace function, which allows you to implement a Pythonsource code debugger in Python.  The function is thread-specific; for
    # https://docs.python.org/2/library/sys.html
snippet sys_settscdump on_flag
abbr Activate dumping of VM measurements using the Pentium timestamp counter, ifon_flag is true. Deactivate these dumps if on_flag is off. The fu
alias settscdump
    sys.settscdump(${1:on_flag})
    # Activate dumping of VM measurements using the Pentium timestamp counter, ifon_flag is true. Deactivate these dumps if on_flag is off. The fu
    # https://docs.python.org/2/library/sys.html

snippet sysconfig_get_config_vars *args
abbr With no arguments, return a dictionary of all configuration variablesrelevant for the current platform.
alias get_config_vars
    sysconfig.get_config_vars(${1:*args})
    # With no arguments, return a dictionary of all configuration variablesrelevant for the current platform.
    # https://docs.python.org/2/library/sysconfig.html
snippet sysconfig_get_config_var name
abbr Return the value of a single variable name. Equivalent toget_config_vars().get(name).
alias get_config_var
    sysconfig.get_config_var(${1:name})
    # Return the value of a single variable name. Equivalent toget_config_vars().get(name).
    # https://docs.python.org/2/library/sysconfig.html
snippet sysconfig_get_scheme_names 
abbr Return a tuple containing all schemes currently supported insysconfig.
alias get_scheme_names
    sysconfig.get_scheme_names()
    # Return a tuple containing all schemes currently supported insysconfig.
    # https://docs.python.org/2/library/sysconfig.html
snippet sysconfig_get_path_names 
abbr Return a tuple containing all path names currently supported insysconfig.
alias get_path_names
    sysconfig.get_path_names()
    # Return a tuple containing all path names currently supported insysconfig.
    # https://docs.python.org/2/library/sysconfig.html
snippet sysconfig_get_path name_scheme_vars_expand
abbr Return an installation path corresponding to the path name, from theinstall scheme named scheme.
alias get_path
    sysconfig.get_path(${1:name}, ${2:scheme}, ${3:vars}, ${4:expand})
    # Return an installation path corresponding to the path name, from theinstall scheme named scheme.
    # https://docs.python.org/2/library/sysconfig.html
snippet sysconfig_get_paths scheme_vars_expand
abbr Return a dictionary containing all installation paths corresponding to aninstallation scheme. See get_path() for more information.
alias get_paths
    sysconfig.get_paths(${1:scheme}, ${2:vars}, ${3:expand})
    # Return a dictionary containing all installation paths corresponding to aninstallation scheme. See get_path() for more information.
    # https://docs.python.org/2/library/sysconfig.html
snippet sysconfig_get_python_version 
abbr Return the MAJOR.MINOR Python version number as a string.  Similar tosys.version[:3].
alias get_python_version
    sysconfig.get_python_version()
    # Return the MAJOR.MINOR Python version number as a string.  Similar tosys.version[:3].
    # https://docs.python.org/2/library/sysconfig.html
snippet sysconfig_get_platform 
abbr Return a string that identifies the current platform.
alias get_platform
    sysconfig.get_platform()
    # Return a string that identifies the current platform.
    # https://docs.python.org/2/library/sysconfig.html
snippet sysconfig_is_python_build 
abbr Return True if the current Python installation was built from source.
alias is_python_build
    sysconfig.is_python_build()
    # Return True if the current Python installation was built from source.
    # https://docs.python.org/2/library/sysconfig.html
snippet sysconfig_parse_config_h fp_vars
abbr Parse a config.h-style file.
alias parse_config_h
    sysconfig.parse_config_h(${1:fp}, ${2:vars})
    # Parse a config.h-style file.
    # https://docs.python.org/2/library/sysconfig.html
snippet sysconfig_get_config_h_filename 
abbr Return the path of pyconfig.h.
alias get_config_h_filename
    sysconfig.get_config_h_filename()
    # Return the path of pyconfig.h.
    # https://docs.python.org/2/library/sysconfig.html

snippet syslog_syslog message
abbr Send the string message to the system logger.  A trailing newline is addedif necessary.  Each message is tagged with a priority composed of 
alias syslog
    syslog.syslog(${1:message})
    # Send the string message to the system logger.  A trailing newline is addedif necessary.  Each message is tagged with a priority composed of 
    # https://docs.python.org/2/library/syslog.html
snippet syslog_openlog ident_logoption_facility
abbr Logging options of subsequent syslog() calls can be set by callingopenlog().  syslog() will call openlog() with no argumentsif the log is no
alias openlog
    syslog.openlog(${1:ident}, ${2:logoption}, ${3:facility})
    # Logging options of subsequent syslog() calls can be set by callingopenlog().  syslog() will call openlog() with no argumentsif the log is no
    # https://docs.python.org/2/library/syslog.html
snippet syslog_closelog 
abbr Reset the syslog module values and call the system library closelog().
alias closelog
    syslog.closelog()
    # Reset the syslog module values and call the system library closelog().
    # https://docs.python.org/2/library/syslog.html
snippet syslog_setlogmask maskpri
abbr Set the priority mask to maskpri and return the previous mask value.  Callsto syslog() with a priority level not set in maskpri are ignored.
alias setlogmask
    syslog.setlogmask(${1:maskpri})
    # Set the priority mask to maskpri and return the previous mask value.  Callsto syslog() with a priority level not set in maskpri are ignored.
    # https://docs.python.org/2/library/syslog.html

snippet tabnanny_check file_or_dir
abbr If file_or_dir is a directory and not a symbolic link, then recursivelydescend the directory tree named by file_or_dir, checking all .pyfile
alias check
    tabnanny.check(${1:file_or_dir})
    # If file_or_dir is a directory and not a symbolic link, then recursivelydescend the directory tree named by file_or_dir, checking all .pyfile
    # https://docs.python.org/2/library/tabnanny.html
snippet tabnanny_tokeneater type_token_start_end_line
abbr This function is used by check() as a callback parameter to the functiontokenize.tokenize().
alias tokeneater
    tabnanny.tokeneater(${1:type}, ${2:token}, ${3:start}, ${4:end}, ${5:line})
    # This function is used by check() as a callback parameter to the functiontokenize.tokenize().
    # https://docs.python.org/2/library/tabnanny.html

snippet tarfile_open name=None_mode='r'_fileobj=None_bufsize=10240_**kwargs
abbr Return a TarFile object for the pathname name. For detailedinformation on TarFile objects and the keyword arguments that areallowed, see Tar
alias open
    tarfile.open(${1:name=None}, ${2:mode='r'}, ${3:fileobj=None}, ${4:bufsize=10240}, ${5:**kwargs})
    # Return a TarFile object for the pathname name. For detailedinformation on TarFile objects and the keyword arguments that areallowed, see Tar
    # https://docs.python.org/2/library/tarfile.html
snippet tarfile_is_tarfile name
abbr Return True if name is a tar archive file, that the tarfilemodule can read.
alias is_tarfile
    tarfile.is_tarfile(${1:name})
    # Return True if name is a tar archive file, that the tarfilemodule can read.
    # https://docs.python.org/2/library/tarfile.html



snippet tempfile_TemporaryFile mode='w+b'_bufsize=-1_suffix=''_prefix='tmp'_dir=None
abbr Return a file-like object that can be used as a temporary storage area.The file is created using mkstemp(). It will be destroyed as soonas i
alias TemporaryFile
    tempfile.TemporaryFile(${1:mode='w+b'}, ${2:bufsize=-1}, ${3:suffix=''}, ${4:prefix='tmp'}, ${5:dir=None})
    # Return a file-like object that can be used as a temporary storage area.The file is created using mkstemp(). It will be destroyed as soonas i
    # https://docs.python.org/2/library/tempfile.html
snippet tempfile_NamedTemporaryFile mode='w+b'_bufsize=-1_suffix=''_prefix='tmp'_dir=None_delete=True
abbr This function operates exactly as TemporaryFile() does, except thatthe file is guaranteed to have a visible name in the file system (onUnix,
alias NamedTemporaryFile
    tempfile.NamedTemporaryFile(${1:mode='w+b'}, ${2:bufsize=-1}, ${3:suffix=''}, ${4:prefix='tmp'}, ${5:dir=None}, ${6:delete=True})
    # This function operates exactly as TemporaryFile() does, except thatthe file is guaranteed to have a visible name in the file system (onUnix,
    # https://docs.python.org/2/library/tempfile.html
snippet tempfile_SpooledTemporaryFile max_size=0_mode='w+b'_bufsize=-1_suffix=''_prefix='tmp'_dir=None
abbr This function operates exactly as TemporaryFile() does, except thatdata is spooled in memory until the file size exceeds max_size, oruntil t
alias SpooledTemporaryFile
    tempfile.SpooledTemporaryFile(${1:max_size=0}, ${2:mode='w+b'}, ${3:bufsize=-1}, ${4:suffix=''}, ${5:prefix='tmp'}, ${6:dir=None})
    # This function operates exactly as TemporaryFile() does, except thatdata is spooled in memory until the file size exceeds max_size, oruntil t
    # https://docs.python.org/2/library/tempfile.html
snippet tempfile_mkstemp suffix=''_prefix='tmp'_dir=None_text=False
abbr Creates a temporary file in the most secure manner possible.  There areno race conditions in the file’s creation, assuming that the platform
alias mkstemp
    tempfile.mkstemp(${1:suffix=''}, ${2:prefix='tmp'}, ${3:dir=None}, ${4:text=False})
    # Creates a temporary file in the most secure manner possible.  There areno race conditions in the file’s creation, assuming that the platform
    # https://docs.python.org/2/library/tempfile.html
snippet tempfile_mkdtemp suffix=''_prefix='tmp'_dir=None
abbr Creates a temporary directory in the most secure manner possible. Thereare no race conditions in the directory’s creation.  The directory is
alias mkdtemp
    tempfile.mkdtemp(${1:suffix=''}, ${2:prefix='tmp'}, ${3:dir=None})
    # Creates a temporary directory in the most secure manner possible. Thereare no race conditions in the directory’s creation.  The directory is
    # https://docs.python.org/2/library/tempfile.html
snippet tempfile_mktemp suffix=''_prefix='tmp'_dir=None
abbr Deprecated since version 2.3: Use mkstemp() instead.
alias mktemp
    tempfile.mktemp(${1:suffix=''}, ${2:prefix='tmp'}, ${3:dir=None})
    # Deprecated since version 2.3: Use mkstemp() instead.
    # https://docs.python.org/2/library/tempfile.html
snippet tempfile_gettempdir 
abbr Return the directory currently selected to create temporary files in. Iftempdir is not None, this simply returns its contents; otherwise,the
alias gettempdir
    tempfile.gettempdir()
    # Return the directory currently selected to create temporary files in. Iftempdir is not None, this simply returns its contents; otherwise,the
    # https://docs.python.org/2/library/tempfile.html
snippet tempfile_gettempprefix 
abbr Return the filename prefix used to create temporary files.  This does notcontain the directory component.  Using this function is preferred 
alias gettempprefix
    tempfile.gettempprefix()
    # Return the filename prefix used to create temporary files.  This does notcontain the directory component.  Using this function is preferred 
    # https://docs.python.org/2/library/tempfile.html

snippet termios_tcgetattr fd
abbr Return a list containing the tty attributes for file descriptor fd, asfollows: [iflag, oflag, cflag, lflag, ispeed, ospeed, cc] where cc is 
alias tcgetattr
    termios.tcgetattr(${1:fd})
    # Return a list containing the tty attributes for file descriptor fd, asfollows: [iflag, oflag, cflag, lflag, ispeed, ospeed, cc] where cc is 
    # https://docs.python.org/2/library/termios.html
snippet termios_tcsetattr fd_when_attributes
abbr Set the tty attributes for file descriptor fd from the attributes, which isa list like the one returned by tcgetattr().  The when argumentde
alias tcsetattr
    termios.tcsetattr(${1:fd}, ${2:when}, ${3:attributes})
    # Set the tty attributes for file descriptor fd from the attributes, which isa list like the one returned by tcgetattr().  The when argumentde
    # https://docs.python.org/2/library/termios.html
snippet termios_tcsendbreak fd_duration
abbr Send a break on file descriptor fd.  A zero duration sends a break for 0.25–0.5 seconds; a nonzero duration has a system dependent meaning.
alias tcsendbreak
    termios.tcsendbreak(${1:fd}, ${2:duration})
    # Send a break on file descriptor fd.  A zero duration sends a break for 0.25–0.5 seconds; a nonzero duration has a system dependent meaning.
    # https://docs.python.org/2/library/termios.html
snippet termios_tcdrain fd
abbr Wait until all output written to file descriptor fd has been transmitted.
alias tcdrain
    termios.tcdrain(${1:fd})
    # Wait until all output written to file descriptor fd has been transmitted.
    # https://docs.python.org/2/library/termios.html
snippet termios_tcflush fd_queue
abbr Discard queued data on file descriptor fd.  The queue selector specifieswhich queue: TCIFLUSH for the input queue, TCOFLUSH for theoutput qu
alias tcflush
    termios.tcflush(${1:fd}, ${2:queue})
    # Discard queued data on file descriptor fd.  The queue selector specifieswhich queue: TCIFLUSH for the input queue, TCOFLUSH for theoutput qu
    # https://docs.python.org/2/library/termios.html
snippet termios_tcflow fd_action
abbr Suspend or resume input or output on file descriptor fd.  The actionargument can be TCOOFF to suspend output, TCOON to restartoutput, TCIOFF
alias tcflow
    termios.tcflow(${1:fd}, ${2:action})
    # Suspend or resume input or output on file descriptor fd.  The actionargument can be TCOOFF to suspend output, TCOON to restartoutput, TCIOFF
    # https://docs.python.org/2/library/termios.html

snippet test_test_support_forget module_name
abbr Remove the module named module_name from sys.modules and delete anybyte-compiled files of the module.
alias forget
    test.test_support.forget(${1:module_name})
    # Remove the module named module_name from sys.modules and delete anybyte-compiled files of the module.
    # https://docs.python.org/2/library/test.html
snippet test_test_support_is_resource_enabled resource
abbr Return True if resource is enabled and available. The list ofavailable resources is only set when test.regrtest is executing thetests.
alias is_resource_enabled
    test.test_support.is_resource_enabled(${1:resource})
    # Return True if resource is enabled and available. The list ofavailable resources is only set when test.regrtest is executing thetests.
    # https://docs.python.org/2/library/test.html
snippet test_test_support_requires resource_msg
abbr Raise ResourceDenied if resource is not available. msg is theargument to ResourceDenied if it is raised. Always returnsTrue if called by a f
alias requires
    test.test_support.requires(${1:resource}, ${2:msg})
    # Raise ResourceDenied if resource is not available. msg is theargument to ResourceDenied if it is raised. Always returnsTrue if called by a f
    # https://docs.python.org/2/library/test.html
snippet test_test_support_findfile filename
abbr Return the path to the file named filename. If no match is foundfilename is returned. This does not equal a failure since it could be thepat
alias findfile
    test.test_support.findfile(${1:filename})
    # Return the path to the file named filename. If no match is foundfilename is returned. This does not equal a failure since it could be thepat
    # https://docs.python.org/2/library/test.html
snippet test_test_support_run_unittest *classes
abbr Execute unittest.TestCase subclasses passed to the function. Thefunction scans the classes for methods starting with the prefix test_and exe
alias run_unittest
    test.test_support.run_unittest(${1:*classes})
    # Execute unittest.TestCase subclasses passed to the function. Thefunction scans the classes for methods starting with the prefix test_and exe
    # https://docs.python.org/2/library/test.html
snippet test_test_support_check_warnings *filters_quiet=True
abbr A convenience wrapper for warnings.catch_warnings() that makes iteasier to test that a warning was correctly raised.  It is approximatelyequ
alias check_warnings
    test.test_support.check_warnings(${1:*filters}, ${2:quiet=True})
    # A convenience wrapper for warnings.catch_warnings() that makes iteasier to test that a warning was correctly raised.  It is approximatelyequ
    # https://docs.python.org/2/library/test.html
snippet test_test_support_check_py3k_warnings *filters_quiet=False
abbr Similar to check_warnings(), but for Python 3 compatibility warnings.If sys.py3kwarning == 1, it checks if the warning is effectively raised
alias check_py3k_warnings
    test.test_support.check_py3k_warnings(${1:*filters}, ${2:quiet=False})
    # Similar to check_warnings(), but for Python 3 compatibility warnings.If sys.py3kwarning == 1, it checks if the warning is effectively raised
    # https://docs.python.org/2/library/test.html
snippet test_test_support_captured_stdout 
abbr This is a context manager that runs the with statement body usinga StringIO.StringIO object as sys.stdout.  That object can beretrieved usin
alias captured_stdout
    test.test_support.captured_stdout()
    # This is a context manager that runs the with statement body usinga StringIO.StringIO object as sys.stdout.  That object can beretrieved usin
    # https://docs.python.org/2/library/test.html
snippet test_test_support_import_module name_deprecated=False
abbr This function imports and returns the named module. Unlike a normalimport, this function raises unittest.SkipTest if the modulecannot be imp
alias import_module
    test.test_support.import_module(${1:name}, ${2:deprecated=False})
    # This function imports and returns the named module. Unlike a normalimport, this function raises unittest.SkipTest if the modulecannot be imp
    # https://docs.python.org/2/library/test.html
snippet test_test_support_import_fresh_module name_fresh=()_blocked=()_deprecated=False
abbr This function imports and returns a fresh copy of the named Python moduleby removing the named module from sys.modules before doing the impo
alias import_fresh_module
    test.test_support.import_fresh_module(${1:name}, ${2:fresh=()}, ${3:blocked=()}, ${4:deprecated=False})
    # This function imports and returns a fresh copy of the named Python moduleby removing the named module from sys.modules before doing the impo
    # https://docs.python.org/2/library/test.html

snippet textwrap_wrap text_width_...
abbr Wraps the single paragraph in text (a string) so every line is at most widthcharacters long.  Returns a list of output lines, without final 
alias wrap
    textwrap.wrap(${1:text}, ${2:width}, ${3:...})
    # Wraps the single paragraph in text (a string) so every line is at most widthcharacters long.  Returns a list of output lines, without final 
    # https://docs.python.org/2/library/textwrap.html
snippet textwrap_fill text_width_...
abbr Wraps the single paragraph in text, and returns a single string containing thewrapped paragraph.  fill() is shorthand for
alias fill
    textwrap.fill(${1:text}, ${2:width}, ${3:...})
    # Wraps the single paragraph in text, and returns a single string containing thewrapped paragraph.  fill() is shorthand for
    # https://docs.python.org/2/library/textwrap.html
snippet textwrap_dedent text
abbr Remove any common leading whitespace from every line in text.
alias dedent
    textwrap.dedent(${1:text})
    # Remove any common leading whitespace from every line in text.
    # https://docs.python.org/2/library/textwrap.html

snippet thread_start_new_thread function_args_kwargs
abbr Start a new thread and return its identifier.  The thread executes the functionfunction with the argument list args (which must be a tuple).
alias start_new_thread
    thread.start_new_thread(${1:function}, ${2:args}, ${3:kwargs})
    # Start a new thread and return its identifier.  The thread executes the functionfunction with the argument list args (which must be a tuple).
    # https://docs.python.org/2/library/thread.html
snippet thread_interrupt_main 
abbr Raise a KeyboardInterrupt exception in the main thread.  A subthread canuse this function to interrupt the main thread.
alias interrupt_main
    thread.interrupt_main()
    # Raise a KeyboardInterrupt exception in the main thread.  A subthread canuse this function to interrupt the main thread.
    # https://docs.python.org/2/library/thread.html
snippet thread_exit 
abbr Raise the SystemExit exception.  When not caught, this will cause thethread to exit silently.
alias exit
    thread.exit()
    # Raise the SystemExit exception.  When not caught, this will cause thethread to exit silently.
    # https://docs.python.org/2/library/thread.html
snippet thread_allocate_lock 
abbr Return a new lock object.  Methods of locks are described below.  The lock isinitially unlocked.
alias allocate_lock
    thread.allocate_lock()
    # Return a new lock object.  Methods of locks are described below.  The lock isinitially unlocked.
    # https://docs.python.org/2/library/thread.html
snippet thread_get_ident 
abbr Return the ‘thread identifier’ of the current thread.  This is a nonzerointeger.  Its value has no direct meaning; it is intended as a magic
alias get_ident
    thread.get_ident()
    # Return the ‘thread identifier’ of the current thread.  This is a nonzerointeger.  Its value has no direct meaning; it is intended as a magic
    # https://docs.python.org/2/library/thread.html
snippet thread_stack_size size
abbr Return the thread stack size used when creating new threads.  The optionalsize argument specifies the stack size to be used for subsequently
alias stack_size
    thread.stack_size(${1:size})
    # Return the thread stack size used when creating new threads.  The optionalsize argument specifies the stack size to be used for subsequently
    # https://docs.python.org/2/library/thread.html

snippet threading_active_count 
abbr Return the number of Thread objects currently alive.  The returnedcount is equal to the length of the list returned by enumerate().
alias active_count
    threading.active_count()
    # Return the number of Thread objects currently alive.  The returnedcount is equal to the length of the list returned by enumerate().
    # https://docs.python.org/2/library/threading.html
snippet threading_activeCount 
abbr Return the number of Thread objects currently alive.  The returnedcount is equal to the length of the list returned by enumerate().
alias activeCount
    threading.activeCount()
    # Return the number of Thread objects currently alive.  The returnedcount is equal to the length of the list returned by enumerate().
    # https://docs.python.org/2/library/threading.html
snippet threading_current_thread 
abbr Return the current Thread object, corresponding to the caller’s threadof control.  If the caller’s thread of control was not created through
alias current_thread
    threading.current_thread()
    # Return the current Thread object, corresponding to the caller’s threadof control.  If the caller’s thread of control was not created through
    # https://docs.python.org/2/library/threading.html
snippet threading_currentThread 
abbr Return the current Thread object, corresponding to the caller’s threadof control.  If the caller’s thread of control was not created through
alias currentThread
    threading.currentThread()
    # Return the current Thread object, corresponding to the caller’s threadof control.  If the caller’s thread of control was not created through
    # https://docs.python.org/2/library/threading.html
snippet threading_enumerate 
abbr Return a list of all Thread objects currently alive.  The listincludes daemonic threads, dummy thread objects created bycurrent_thread(), an
alias enumerate
    threading.enumerate()
    # Return a list of all Thread objects currently alive.  The listincludes daemonic threads, dummy thread objects created bycurrent_thread(), an
    # https://docs.python.org/2/library/threading.html
snippet threading_Lock 
abbr A factory function that returns a new primitive lock object.  Once a thread hasacquired it, subsequent attempts to acquire it block, until i
alias Lock
    threading.Lock()
    # A factory function that returns a new primitive lock object.  Once a thread hasacquired it, subsequent attempts to acquire it block, until i
    # https://docs.python.org/2/library/threading.html
snippet threading_RLock 
abbr A factory function that returns a new reentrant lock object. A reentrant lockmust be released by the thread that acquired it. Once a thread 
alias RLock
    threading.RLock()
    # A factory function that returns a new reentrant lock object. A reentrant lockmust be released by the thread that acquired it. Once a thread 
    # https://docs.python.org/2/library/threading.html
snippet threading_BoundedSemaphore value
abbr A factory function that returns a new bounded semaphore object.  A boundedsemaphore checks to make sure its current value doesn’t exceed its
alias BoundedSemaphore
    threading.BoundedSemaphore(${1:value})
    # A factory function that returns a new bounded semaphore object.  A boundedsemaphore checks to make sure its current value doesn’t exceed its
    # https://docs.python.org/2/library/threading.html
snippet threading_settrace func
abbr Set a trace function for all threads started from the threading module.The func will be passed to  sys.settrace() for each thread, before it
alias settrace
    threading.settrace(${1:func})
    # Set a trace function for all threads started from the threading module.The func will be passed to  sys.settrace() for each thread, before it
    # https://docs.python.org/2/library/threading.html
snippet threading_setprofile func
abbr Set a profile function for all threads started from the threading module.The func will be passed to  sys.setprofile() for each thread, befor
alias setprofile
    threading.setprofile(${1:func})
    # Set a profile function for all threads started from the threading module.The func will be passed to  sys.setprofile() for each thread, befor
    # https://docs.python.org/2/library/threading.html
snippet threading_stack_size size
abbr Return the thread stack size used when creating new threads.  The optionalsize argument specifies the stack size to be used for subsequently
alias stack_size
    threading.stack_size(${1:size})
    # Return the thread stack size used when creating new threads.  The optionalsize argument specifies the stack size to be used for subsequently
    # https://docs.python.org/2/library/threading.html

snippet time_asctime t
abbr Convert a tuple or struct_time representing a time as returned bygmtime() or localtime() to a 24-character string of the followingform: 'Sun
alias asctime
    time.asctime(${1:t})
    # Convert a tuple or struct_time representing a time as returned bygmtime() or localtime() to a 24-character string of the followingform: 'Sun
    # https://docs.python.org/2/library/time.html
snippet time_clock 
abbr On Unix, return the current processor time as a floating point number expressedin seconds.  The precision, and in fact the very definition o
alias clock
    time.clock()
    # On Unix, return the current processor time as a floating point number expressedin seconds.  The precision, and in fact the very definition o
    # https://docs.python.org/2/library/time.html
snippet time_ctime secs
abbr Convert a time expressed in seconds since the epoch to a string representinglocal time. If secs is not provided or None, the current time as
alias ctime
    time.ctime(${1:secs})
    # Convert a time expressed in seconds since the epoch to a string representinglocal time. If secs is not provided or None, the current time as
    # https://docs.python.org/2/library/time.html
snippet time_gmtime secs
abbr Convert a time expressed in seconds since the epoch to a struct_time inUTC in which the dst flag is always zero.  If secs is not provided or
alias gmtime
    time.gmtime(${1:secs})
    # Convert a time expressed in seconds since the epoch to a struct_time inUTC in which the dst flag is always zero.  If secs is not provided or
    # https://docs.python.org/2/library/time.html
snippet time_localtime secs
abbr Like gmtime() but converts to local time.  If secs is not provided orNone, the current time as returned by time() is used.  The dstflag is s
alias localtime
    time.localtime(${1:secs})
    # Like gmtime() but converts to local time.  If secs is not provided orNone, the current time as returned by time() is used.  The dstflag is s
    # https://docs.python.org/2/library/time.html
snippet time_mktime t
abbr This is the inverse function of localtime().  Its argument is thestruct_time or full 9-tuple (since the dst flag is needed; use -1as the dst
alias mktime
    time.mktime(${1:t})
    # This is the inverse function of localtime().  Its argument is thestruct_time or full 9-tuple (since the dst flag is needed; use -1as the dst
    # https://docs.python.org/2/library/time.html
snippet time_sleep secs
abbr Suspend execution for the given number of seconds.  The argument may be afloating point number to indicate a more precise sleep time. The ac
alias sleep
    time.sleep(${1:secs})
    # Suspend execution for the given number of seconds.  The argument may be afloating point number to indicate a more precise sleep time. The ac
    # https://docs.python.org/2/library/time.html
snippet time_strftime format_t
abbr Convert a tuple or struct_time representing a time as returned bygmtime() or localtime() to a string as specified by the formatargument.  If
alias strftime
    time.strftime(${1:format}, ${2:t})
    # Convert a tuple or struct_time representing a time as returned bygmtime() or localtime() to a string as specified by the formatargument.  If
    # https://docs.python.org/2/library/time.html
snippet time_strptime string_format
abbr Parse a string representing a time according to a format.  The return  value isa struct_time as returned by gmtime() or localtime().
alias strptime
    time.strptime(${1:string}, ${2:format})
    # Parse a string representing a time according to a format.  The return  value isa struct_time as returned by gmtime() or localtime().
    # https://docs.python.org/2/library/time.html
snippet time_time 
abbr Return the time in seconds since the epoch as a floating point number.Note that even though the time is always returned as a floating pointn
alias time
    time.time()
    # Return the time in seconds since the epoch as a floating point number.Note that even though the time is always returned as a floating pointn
    # https://docs.python.org/2/library/time.html
snippet time_tzset 
abbr Resets the time conversion rules used by the library routines. The environmentvariable TZ specifies how this is done.
alias tzset
    time.tzset()
    # Resets the time conversion rules used by the library routines. The environmentvariable TZ specifies how this is done.
    # https://docs.python.org/2/library/time.html

snippet timeit_timeit stmt='pass'_setup='pass'_timer=<default timer>_number=1000000
abbr Create a Timer instance with the given statement, setup code andtimer function and run its timeit() method with number executions.
alias timeit
    timeit.timeit(${1:stmt='pass'}, ${2:setup='pass'}, ${3:timer=<default timer>}, ${4:number=1000000})
    # Create a Timer instance with the given statement, setup code andtimer function and run its timeit() method with number executions.
    # https://docs.python.org/2/library/timeit.html
snippet timeit_repeat stmt='pass'_setup='pass'_timer=<default timer>_repeat=3_number=1000000
abbr Create a Timer instance with the given statement, setup code andtimer function and run its repeat() method with the given repeatcount and nu
alias repeat
    timeit.repeat(${1:stmt='pass'}, ${2:setup='pass'}, ${3:timer=<default timer>}, ${4:repeat=3}, ${5:number=1000000})
    # Create a Timer instance with the given statement, setup code andtimer function and run its repeat() method with the given repeatcount and nu
    # https://docs.python.org/2/library/timeit.html
snippet timeit_default_timer 
abbr Define a default timer, in a platform-specific manner.  On Windows,time.clock() has microsecond granularity, but time.time()‘sgranularity is
alias default_timer
    timeit.default_timer()
    # Define a default timer, in a platform-specific manner.  On Windows,time.clock() has microsecond granularity, but time.time()‘sgranularity is
    # https://docs.python.org/2/library/timeit.html





snippet Tkinter_Tcl screenName=None_baseName=None_className='Tk'_useTk=0
abbr The Tcl() function is a factory function which creates an object much likethat created by the Tk class, except that it does not initialize t
alias Tcl
    Tkinter.Tcl(${1:screenName=None}, ${2:baseName=None}, ${3:className='Tk'}, ${4:useTk=0})
    # The Tcl() function is a factory function which creates an object much likethat created by the Tk class, except that it does not initialize t
    # https://docs.python.org/2/library/tkinter.html

snippet token_ISTERMINAL x
abbr Return true for terminal token values.
alias ISTERMINAL
    token.ISTERMINAL(${1:x})
    # Return true for terminal token values.
    # https://docs.python.org/2/library/token.html
snippet token_ISNONTERMINAL x
abbr Return true for non-terminal token values.
alias ISNONTERMINAL
    token.ISNONTERMINAL(${1:x})
    # Return true for non-terminal token values.
    # https://docs.python.org/2/library/token.html
snippet token_ISEOF x
abbr Return true if x is the marker indicating the end of input.
alias ISEOF
    token.ISEOF(${1:x})
    # Return true if x is the marker indicating the end of input.
    # https://docs.python.org/2/library/token.html

snippet tokenize_generate_tokens readline
abbr The generate_tokens() generator requires one argument, readline,which must be a callable object which provides the same interface as theread
alias generate_tokens
    tokenize.generate_tokens(${1:readline})
    # The generate_tokens() generator requires one argument, readline,which must be a callable object which provides the same interface as theread
    # https://docs.python.org/2/library/tokenize.html
snippet tokenize_tokenize readline_tokeneater
abbr The tokenize() function accepts two parameters: one representing the inputstream, and one providing an output mechanism for tokenize().
alias tokenize
    tokenize.tokenize(${1:readline}, ${2:tokeneater})
    # The tokenize() function accepts two parameters: one representing the inputstream, and one providing an output mechanism for tokenize().
    # https://docs.python.org/2/library/tokenize.html
snippet tokenize_untokenize iterable
abbr Converts tokens back into Python source code.  The iterable must returnsequences with at least two elements, the token type and the token st
alias untokenize
    tokenize.untokenize(${1:iterable})
    # Converts tokens back into Python source code.  The iterable must returnsequences with at least two elements, the token type and the token st
    # https://docs.python.org/2/library/tokenize.html



snippet traceback_print_tb traceback_limit_file
abbr Print up to limit stack trace entries from traceback.  If limit is omittedor None, all entries are printed. If file is omitted or None, theo
alias print_tb
    traceback.print_tb(${1:traceback}, ${2:limit}, ${3:file})
    # Print up to limit stack trace entries from traceback.  If limit is omittedor None, all entries are printed. If file is omitted or None, theo
    # https://docs.python.org/2/library/traceback.html
snippet traceback_print_exception type_value_traceback_limit_file
abbr Print exception information and up to limit stack trace entries fromtraceback to file. This differs from print_tb() in the following ways:(1
alias print_exception
    traceback.print_exception(${1:type}, ${2:value}, ${3:traceback}, ${4:limit}, ${5:file})
    # Print exception information and up to limit stack trace entries fromtraceback to file. This differs from print_tb() in the following ways:(1
    # https://docs.python.org/2/library/traceback.html
snippet traceback_print_exc limit_file
abbr This is a shorthand for print_exception(sys.exc_type, sys.exc_value,sys.exc_traceback, limit, file).  (In fact, it uses sys.exc_info() toret
alias print_exc
    traceback.print_exc(${1:limit}, ${2:file})
    # This is a shorthand for print_exception(sys.exc_type, sys.exc_value,sys.exc_traceback, limit, file).  (In fact, it uses sys.exc_info() toret
    # https://docs.python.org/2/library/traceback.html
snippet traceback_format_exc limit
abbr This is like print_exc(limit) but returns a string instead of printing to afile.
alias format_exc
    traceback.format_exc(${1:limit})
    # This is like print_exc(limit) but returns a string instead of printing to afile.
    # https://docs.python.org/2/library/traceback.html
snippet traceback_print_last limit_file
abbr This is a shorthand for print_exception(sys.last_type, sys.last_value,sys.last_traceback, limit, file).  In general it will work only aftera
alias print_last
    traceback.print_last(${1:limit}, ${2:file})
    # This is a shorthand for print_exception(sys.last_type, sys.last_value,sys.last_traceback, limit, file).  In general it will work only aftera
    # https://docs.python.org/2/library/traceback.html
snippet traceback_print_stack f_limit_file
abbr This function prints a stack trace from its invocation point.  The optional fargument can be used to specify an alternate stack frame to sta
alias print_stack
    traceback.print_stack(${1:f}, ${2:limit}, ${3:file})
    # This function prints a stack trace from its invocation point.  The optional fargument can be used to specify an alternate stack frame to sta
    # https://docs.python.org/2/library/traceback.html
snippet traceback_extract_tb traceback_limit
abbr Return a list of up to limit “pre-processed” stack trace entries extractedfrom the traceback object traceback.  It is useful for alternate f
alias extract_tb
    traceback.extract_tb(${1:traceback}, ${2:limit})
    # Return a list of up to limit “pre-processed” stack trace entries extractedfrom the traceback object traceback.  It is useful for alternate f
    # https://docs.python.org/2/library/traceback.html
snippet traceback_extract_stack f_limit
abbr Extract the raw traceback from the current stack frame.  The return value hasthe same format as for extract_tb().  The optional f and limita
alias extract_stack
    traceback.extract_stack(${1:f}, ${2:limit})
    # Extract the raw traceback from the current stack frame.  The return value hasthe same format as for extract_tb().  The optional f and limita
    # https://docs.python.org/2/library/traceback.html
snippet traceback_format_list list
abbr Given a list of tuples as returned by extract_tb() orextract_stack(), return a list of strings ready for printing.  Each stringin the result
alias format_list
    traceback.format_list(${1:list})
    # Given a list of tuples as returned by extract_tb() orextract_stack(), return a list of strings ready for printing.  Each stringin the result
    # https://docs.python.org/2/library/traceback.html
snippet traceback_format_exception_only type_value
abbr Format the exception part of a traceback.  The arguments are the exception typeand value such as given by sys.last_type and sys.last_value. 
alias format_exception_only
    traceback.format_exception_only(${1:type}, ${2:value})
    # Format the exception part of a traceback.  The arguments are the exception typeand value such as given by sys.last_type and sys.last_value. 
    # https://docs.python.org/2/library/traceback.html
snippet traceback_format_exception type_value_tb_limit
abbr Format a stack trace and the exception information.  The arguments  have thesame meaning as the corresponding arguments to print_exception()
alias format_exception
    traceback.format_exception(${1:type}, ${2:value}, ${3:tb}, ${4:limit})
    # Format a stack trace and the exception information.  The arguments  have thesame meaning as the corresponding arguments to print_exception()
    # https://docs.python.org/2/library/traceback.html
snippet traceback_format_tb tb_limit
abbr A shorthand for format_list(extract_tb(tb, limit)).
alias format_tb
    traceback.format_tb(${1:tb}, ${2:limit})
    # A shorthand for format_list(extract_tb(tb, limit)).
    # https://docs.python.org/2/library/traceback.html
snippet traceback_format_stack f_limit
abbr A shorthand for format_list(extract_stack(f, limit)).
alias format_stack
    traceback.format_stack(${1:f}, ${2:limit})
    # A shorthand for format_list(extract_stack(f, limit)).
    # https://docs.python.org/2/library/traceback.html
snippet traceback_tb_lineno tb
abbr This function returns the current line number set in the traceback object.  Thisfunction was necessary because in versions of Python prior t
alias tb_lineno
    traceback.tb_lineno(${1:tb})
    # This function returns the current line number set in the traceback object.  Thisfunction was necessary because in versions of Python prior t
    # https://docs.python.org/2/library/traceback.html



snippet tty_setraw fd_when
abbr Change the mode of the file descriptor fd to raw. If when is omitted, itdefaults to termios.TCSAFLUSH, and is passed totermios.tcsetattr().
alias setraw
    tty.setraw(${1:fd}, ${2:when})
    # Change the mode of the file descriptor fd to raw. If when is omitted, itdefaults to termios.TCSAFLUSH, and is passed totermios.tcsetattr().
    # https://docs.python.org/2/library/tty.html
snippet tty_setcbreak fd_when
abbr Change the mode of file descriptor fd to cbreak. If when is omitted, itdefaults to termios.TCSAFLUSH, and is passed totermios.tcsetattr().
alias setcbreak
    tty.setcbreak(${1:fd}, ${2:when})
    # Change the mode of file descriptor fd to cbreak. If when is omitted, itdefaults to termios.TCSAFLUSH, and is passed totermios.tcsetattr().
    # https://docs.python.org/2/library/tty.html

snippet turtle_forward distance
abbr Move the turtle forward by the specified distance, in the direction theturtle is headed.
alias forward
    turtle.forward(${1:distance})
    # Move the turtle forward by the specified distance, in the direction theturtle is headed.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_fd distance
abbr Move the turtle forward by the specified distance, in the direction theturtle is headed.
alias fd
    turtle.fd(${1:distance})
    # Move the turtle forward by the specified distance, in the direction theturtle is headed.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_back distance
abbr Move the turtle backward by distance, opposite to the direction theturtle is headed.  Do not change the turtle’s heading.
alias back
    turtle.back(${1:distance})
    # Move the turtle backward by distance, opposite to the direction theturtle is headed.  Do not change the turtle’s heading.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_bk distance
abbr Move the turtle backward by distance, opposite to the direction theturtle is headed.  Do not change the turtle’s heading.
alias bk
    turtle.bk(${1:distance})
    # Move the turtle backward by distance, opposite to the direction theturtle is headed.  Do not change the turtle’s heading.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_backward distance
abbr Move the turtle backward by distance, opposite to the direction theturtle is headed.  Do not change the turtle’s heading.
alias backward
    turtle.backward(${1:distance})
    # Move the turtle backward by distance, opposite to the direction theturtle is headed.  Do not change the turtle’s heading.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_right angle
abbr Turn turtle right by angle units.  (Units are by default degrees, butcan be set via the degrees() and radians() functions.)  Angleorientatio
alias right
    turtle.right(${1:angle})
    # Turn turtle right by angle units.  (Units are by default degrees, butcan be set via the degrees() and radians() functions.)  Angleorientatio
    # https://docs.python.org/2/library/turtle.html
snippet turtle_rt angle
abbr Turn turtle right by angle units.  (Units are by default degrees, butcan be set via the degrees() and radians() functions.)  Angleorientatio
alias rt
    turtle.rt(${1:angle})
    # Turn turtle right by angle units.  (Units are by default degrees, butcan be set via the degrees() and radians() functions.)  Angleorientatio
    # https://docs.python.org/2/library/turtle.html
snippet turtle_left angle
abbr Turn turtle left by angle units.  (Units are by default degrees, butcan be set via the degrees() and radians() functions.)  Angleorientation
alias left
    turtle.left(${1:angle})
    # Turn turtle left by angle units.  (Units are by default degrees, butcan be set via the degrees() and radians() functions.)  Angleorientation
    # https://docs.python.org/2/library/turtle.html
snippet turtle_lt angle
abbr Turn turtle left by angle units.  (Units are by default degrees, butcan be set via the degrees() and radians() functions.)  Angleorientation
alias lt
    turtle.lt(${1:angle})
    # Turn turtle left by angle units.  (Units are by default degrees, butcan be set via the degrees() and radians() functions.)  Angleorientation
    # https://docs.python.org/2/library/turtle.html
snippet turtle_goto x_y=None
abbr If y is None, x must be a pair of coordinates or a Vec2D(e.g. as returned by pos()).
alias goto
    turtle.goto(${1:x}, ${2:y=None})
    # If y is None, x must be a pair of coordinates or a Vec2D(e.g. as returned by pos()).
    # https://docs.python.org/2/library/turtle.html
snippet turtle_setpos x_y=None
abbr If y is None, x must be a pair of coordinates or a Vec2D(e.g. as returned by pos()).
alias setpos
    turtle.setpos(${1:x}, ${2:y=None})
    # If y is None, x must be a pair of coordinates or a Vec2D(e.g. as returned by pos()).
    # https://docs.python.org/2/library/turtle.html
snippet turtle_setposition x_y=None
abbr If y is None, x must be a pair of coordinates or a Vec2D(e.g. as returned by pos()).
alias setposition
    turtle.setposition(${1:x}, ${2:y=None})
    # If y is None, x must be a pair of coordinates or a Vec2D(e.g. as returned by pos()).
    # https://docs.python.org/2/library/turtle.html
snippet turtle_setx x
abbr Set the turtle’s first coordinate to x, leave second coordinateunchanged.
alias setx
    turtle.setx(${1:x})
    # Set the turtle’s first coordinate to x, leave second coordinateunchanged.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_sety y
abbr Set the turtle’s second coordinate to y, leave first coordinate unchanged.
alias sety
    turtle.sety(${1:y})
    # Set the turtle’s second coordinate to y, leave first coordinate unchanged.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_setheading to_angle
abbr Set the orientation of the turtle to to_angle.  Here are some commondirections in degrees:
alias setheading
    turtle.setheading(${1:to_angle})
    # Set the orientation of the turtle to to_angle.  Here are some commondirections in degrees:
    # https://docs.python.org/2/library/turtle.html
snippet turtle_seth to_angle
abbr Set the orientation of the turtle to to_angle.  Here are some commondirections in degrees:
alias seth
    turtle.seth(${1:to_angle})
    # Set the orientation of the turtle to to_angle.  Here are some commondirections in degrees:
    # https://docs.python.org/2/library/turtle.html
snippet turtle_home 
abbr Move turtle to the origin – coordinates (0,0) – and set its heading toits start-orientation (which depends on the mode, see mode()).
alias home
    turtle.home()
    # Move turtle to the origin – coordinates (0,0) – and set its heading toits start-orientation (which depends on the mode, see mode()).
    # https://docs.python.org/2/library/turtle.html
snippet turtle_circle radius_extent=None_steps=None
abbr Draw a circle with given radius.  The center is radius units left ofthe turtle; extent – an angle – determines which part of the circleis dr
alias circle
    turtle.circle(${1:radius}, ${2:extent=None}, ${3:steps=None})
    # Draw a circle with given radius.  The center is radius units left ofthe turtle; extent – an angle – determines which part of the circleis dr
    # https://docs.python.org/2/library/turtle.html
snippet turtle_dot size=None_*color
abbr Draw a circular dot with diameter size, using color.  If size isnot given, the maximum of pensize+4 and 2*pensize is used.
alias dot
    turtle.dot(${1:size=None}, ${2:*color})
    # Draw a circular dot with diameter size, using color.  If size isnot given, the maximum of pensize+4 and 2*pensize is used.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_stamp 
abbr Stamp a copy of the turtle shape onto the canvas at the current turtleposition.  Return a stamp_id for that stamp, which can be used to dele
alias stamp
    turtle.stamp()
    # Stamp a copy of the turtle shape onto the canvas at the current turtleposition.  Return a stamp_id for that stamp, which can be used to dele
    # https://docs.python.org/2/library/turtle.html
snippet turtle_clearstamp stampid
abbr Delete stamp with given stampid.
alias clearstamp
    turtle.clearstamp(${1:stampid})
    # Delete stamp with given stampid.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_clearstamps n=None
abbr Delete all or first/last n of turtle’s stamps.  If n is None, deleteall stamps, if n > 0 delete first n stamps, else if n < 0 deletelast n s
alias clearstamps
    turtle.clearstamps(${1:n=None})
    # Delete all or first/last n of turtle’s stamps.  If n is None, deleteall stamps, if n > 0 delete first n stamps, else if n < 0 deletelast n s
    # https://docs.python.org/2/library/turtle.html
snippet turtle_undo 
abbr Undo (repeatedly) the last turtle action(s).  Number of availableundo actions is determined by the size of the undobuffer.
alias undo
    turtle.undo()
    # Undo (repeatedly) the last turtle action(s).  Number of availableundo actions is determined by the size of the undobuffer.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_speed speed=None
abbr Set the turtle’s speed to an integer value in the range 0..10.  If noargument is given, return current speed.
alias speed
    turtle.speed(${1:speed=None})
    # Set the turtle’s speed to an integer value in the range 0..10.  If noargument is given, return current speed.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_position 
abbr Return the turtle’s current location (x,y) (as a Vec2D vector).
alias position
    turtle.position()
    # Return the turtle’s current location (x,y) (as a Vec2D vector).
    # https://docs.python.org/2/library/turtle.html
snippet turtle_pos 
abbr Return the turtle’s current location (x,y) (as a Vec2D vector).
alias pos
    turtle.pos()
    # Return the turtle’s current location (x,y) (as a Vec2D vector).
    # https://docs.python.org/2/library/turtle.html
snippet turtle_towards x_y=None
abbr Return the angle between the line from turtle position to position specifiedby (x,y), the vector or the other turtle.  This depends on the t
alias towards
    turtle.towards(${1:x}, ${2:y=None})
    # Return the angle between the line from turtle position to position specifiedby (x,y), the vector or the other turtle.  This depends on the t
    # https://docs.python.org/2/library/turtle.html
snippet turtle_xcor 
abbr Return the turtle’s x coordinate.
alias xcor
    turtle.xcor()
    # Return the turtle’s x coordinate.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_ycor 
abbr Return the turtle’s y coordinate.
alias ycor
    turtle.ycor()
    # Return the turtle’s y coordinate.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_heading 
abbr Return the turtle’s current heading (value depends on the turtle mode, seemode()).
alias heading
    turtle.heading()
    # Return the turtle’s current heading (value depends on the turtle mode, seemode()).
    # https://docs.python.org/2/library/turtle.html
snippet turtle_distance x_y=None
abbr Return the distance from the turtle to (x,y), the given vector, or the givenother turtle, in turtle step units.
alias distance
    turtle.distance(${1:x}, ${2:y=None})
    # Return the distance from the turtle to (x,y), the given vector, or the givenother turtle, in turtle step units.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_degrees fullcircle=360.0
abbr Set angle measurement units, i.e. set number of “degrees” for a full circle.Default value is 360 degrees.
alias degrees
    turtle.degrees(${1:fullcircle=360.0})
    # Set angle measurement units, i.e. set number of “degrees” for a full circle.Default value is 360 degrees.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_radians 
abbr Set the angle measurement units to radians.  Equivalent todegrees(2*math.pi).
alias radians
    turtle.radians()
    # Set the angle measurement units to radians.  Equivalent todegrees(2*math.pi).
    # https://docs.python.org/2/library/turtle.html
snippet turtle_pendown 
abbr Pull the pen down – drawing when moving.
alias pendown
    turtle.pendown()
    # Pull the pen down – drawing when moving.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_pd 
abbr Pull the pen down – drawing when moving.
alias pd
    turtle.pd()
    # Pull the pen down – drawing when moving.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_down 
abbr Pull the pen down – drawing when moving.
alias down
    turtle.down()
    # Pull the pen down – drawing when moving.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_penup 
abbr Pull the pen up – no drawing when moving.
alias penup
    turtle.penup()
    # Pull the pen up – no drawing when moving.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_pu 
abbr Pull the pen up – no drawing when moving.
alias pu
    turtle.pu()
    # Pull the pen up – no drawing when moving.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_up 
abbr Pull the pen up – no drawing when moving.
alias up
    turtle.up()
    # Pull the pen up – no drawing when moving.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_pensize width=None
abbr Set the line thickness to width or return it.  If resizemode is set to“auto” and turtleshape is a polygon, that polygon is drawn with the sa
alias pensize
    turtle.pensize(${1:width=None})
    # Set the line thickness to width or return it.  If resizemode is set to“auto” and turtleshape is a polygon, that polygon is drawn with the sa
    # https://docs.python.org/2/library/turtle.html
snippet turtle_width width=None
abbr Set the line thickness to width or return it.  If resizemode is set to“auto” and turtleshape is a polygon, that polygon is drawn with the sa
alias width
    turtle.width(${1:width=None})
    # Set the line thickness to width or return it.  If resizemode is set to“auto” and turtleshape is a polygon, that polygon is drawn with the sa
    # https://docs.python.org/2/library/turtle.html
snippet turtle_pen pen=None_**pendict
abbr Return or set the pen’s attributes in a “pen-dictionary” with the followingkey/value pairs:
alias pen
    turtle.pen(${1:pen=None}, ${2:**pendict})
    # Return or set the pen’s attributes in a “pen-dictionary” with the followingkey/value pairs:
    # https://docs.python.org/2/library/turtle.html
snippet turtle_isdown 
abbr Return True if pen is down, False if it’s up.
alias isdown
    turtle.isdown()
    # Return True if pen is down, False if it’s up.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_pencolor *args
abbr Return or set the pencolor.
alias pencolor
    turtle.pencolor(${1:*args})
    # Return or set the pencolor.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_fillcolor *args
abbr Return or set the fillcolor.
alias fillcolor
    turtle.fillcolor(${1:*args})
    # Return or set the fillcolor.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_color *args
abbr Return or set pencolor and fillcolor.
alias color
    turtle.color(${1:*args})
    # Return or set pencolor and fillcolor.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_fill flag
abbr Call fill(True) before drawing the shape you want to fill, andfill(False) when done.  When used without argument: return fillstate(True if f
alias fill
    turtle.fill(${1:flag})
    # Call fill(True) before drawing the shape you want to fill, andfill(False) when done.  When used without argument: return fillstate(True if f
    # https://docs.python.org/2/library/turtle.html
snippet turtle_begin_fill 
abbr Call just before drawing a shape to be filled.  Equivalent to fill(True).
alias begin_fill
    turtle.begin_fill()
    # Call just before drawing a shape to be filled.  Equivalent to fill(True).
    # https://docs.python.org/2/library/turtle.html
snippet turtle_end_fill 
abbr Fill the shape drawn after the last call to begin_fill().  Equivalentto fill(False).
alias end_fill
    turtle.end_fill()
    # Fill the shape drawn after the last call to begin_fill().  Equivalentto fill(False).
    # https://docs.python.org/2/library/turtle.html
snippet turtle_reset 
abbr Delete the turtle’s drawings from the screen, re-center the turtle and setvariables to the default values.
alias reset
    turtle.reset()
    # Delete the turtle’s drawings from the screen, re-center the turtle and setvariables to the default values.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_clear 
abbr Delete the turtle’s drawings from the screen.  Do not move turtle.  State andposition of the turtle as well as drawings of other turtles are
alias clear
    turtle.clear()
    # Delete the turtle’s drawings from the screen.  Do not move turtle.  State andposition of the turtle as well as drawings of other turtles are
    # https://docs.python.org/2/library/turtle.html
snippet turtle_write arg_move=False_align="left"_font=("Arial"_8_"normal")
abbr Write text - the string representation of arg - at the current turtleposition according to align (“left”, “center” or right”) and with the g
alias write
    turtle.write(${1:arg}, ${2:move=False}, ${3:align="left"}, ${4:font=("Arial"}, ${5:8}, ${6:"normal")})
    # Write text - the string representation of arg - at the current turtleposition according to align (“left”, “center” or right”) and with the g
    # https://docs.python.org/2/library/turtle.html
snippet turtle_hideturtle 
abbr Make the turtle invisible.  It’s a good idea to do this while you’re in themiddle of doing some complex drawing, because hiding the turtle s
alias hideturtle
    turtle.hideturtle()
    # Make the turtle invisible.  It’s a good idea to do this while you’re in themiddle of doing some complex drawing, because hiding the turtle s
    # https://docs.python.org/2/library/turtle.html
snippet turtle_ht 
abbr Make the turtle invisible.  It’s a good idea to do this while you’re in themiddle of doing some complex drawing, because hiding the turtle s
alias ht
    turtle.ht()
    # Make the turtle invisible.  It’s a good idea to do this while you’re in themiddle of doing some complex drawing, because hiding the turtle s
    # https://docs.python.org/2/library/turtle.html
snippet turtle_showturtle 
abbr Make the turtle visible.
alias showturtle
    turtle.showturtle()
    # Make the turtle visible.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_st 
abbr Make the turtle visible.
alias st
    turtle.st()
    # Make the turtle visible.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_isvisible 
abbr Return True if the Turtle is shown, False if it’s hidden.
alias isvisible
    turtle.isvisible()
    # Return True if the Turtle is shown, False if it’s hidden.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_shape name=None
abbr Set turtle shape to shape with given name or, if name is not given, returnname of current shape.  Shape with name must exist in the TurtleSc
alias shape
    turtle.shape(${1:name=None})
    # Set turtle shape to shape with given name or, if name is not given, returnname of current shape.  Shape with name must exist in the TurtleSc
    # https://docs.python.org/2/library/turtle.html
snippet turtle_resizemode rmode=None
abbr Set resizemode to one of the values: “auto”, “user”, “noresize”.  If rmodeis not given, return current resizemode.  Different resizemodes ha
alias resizemode
    turtle.resizemode(${1:rmode=None})
    # Set resizemode to one of the values: “auto”, “user”, “noresize”.  If rmodeis not given, return current resizemode.  Different resizemodes ha
    # https://docs.python.org/2/library/turtle.html
snippet turtle_shapesize stretch_wid=None_stretch_len=None_outline=None
abbr Return or set the pen’s attributes x/y-stretchfactors and/or outline.  Setresizemode to “user”.  If and only if resizemode is set to “user”,
alias shapesize
    turtle.shapesize(${1:stretch_wid=None}, ${2:stretch_len=None}, ${3:outline=None})
    # Return or set the pen’s attributes x/y-stretchfactors and/or outline.  Setresizemode to “user”.  If and only if resizemode is set to “user”,
    # https://docs.python.org/2/library/turtle.html
snippet turtle_turtlesize stretch_wid=None_stretch_len=None_outline=None
abbr Return or set the pen’s attributes x/y-stretchfactors and/or outline.  Setresizemode to “user”.  If and only if resizemode is set to “user”,
alias turtlesize
    turtle.turtlesize(${1:stretch_wid=None}, ${2:stretch_len=None}, ${3:outline=None})
    # Return or set the pen’s attributes x/y-stretchfactors and/or outline.  Setresizemode to “user”.  If and only if resizemode is set to “user”,
    # https://docs.python.org/2/library/turtle.html
snippet turtle_tilt angle
abbr Rotate the turtleshape by angle from its current tilt-angle, but do notchange the turtle’s heading (direction of movement).
alias tilt
    turtle.tilt(${1:angle})
    # Rotate the turtleshape by angle from its current tilt-angle, but do notchange the turtle’s heading (direction of movement).
    # https://docs.python.org/2/library/turtle.html
snippet turtle_settiltangle angle
abbr Rotate the turtleshape to point in the direction specified by angle,regardless of its current tilt-angle.  Do not change the turtle’s headin
alias settiltangle
    turtle.settiltangle(${1:angle})
    # Rotate the turtleshape to point in the direction specified by angle,regardless of its current tilt-angle.  Do not change the turtle’s headin
    # https://docs.python.org/2/library/turtle.html
snippet turtle_tiltangle 
abbr Return the current tilt-angle, i.e. the angle between the orientation of theturtleshape and the heading of the turtle (its direction of move
alias tiltangle
    turtle.tiltangle()
    # Return the current tilt-angle, i.e. the angle between the orientation of theturtleshape and the heading of the turtle (its direction of move
    # https://docs.python.org/2/library/turtle.html
snippet turtle_onclick fun_btn=1_add=None
abbr Bind fun to mouse-click events on this turtle.  If fun is None,existing bindings are removed.  Example for the anonymous turtle, i.e. thepro
alias onclick
    turtle.onclick(${1:fun}, ${2:btn=1}, ${3:add=None})
    # Bind fun to mouse-click events on this turtle.  If fun is None,existing bindings are removed.  Example for the anonymous turtle, i.e. thepro
    # https://docs.python.org/2/library/turtle.html
snippet turtle_onrelease fun_btn=1_add=None
abbr Bind fun to mouse-button-release events on this turtle.  If fun isNone, existing bindings are removed.
alias onrelease
    turtle.onrelease(${1:fun}, ${2:btn=1}, ${3:add=None})
    # Bind fun to mouse-button-release events on this turtle.  If fun isNone, existing bindings are removed.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_ondrag fun_btn=1_add=None
abbr Bind fun to mouse-move events on this turtle.  If fun is None,existing bindings are removed.
alias ondrag
    turtle.ondrag(${1:fun}, ${2:btn=1}, ${3:add=None})
    # Bind fun to mouse-move events on this turtle.  If fun is None,existing bindings are removed.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_mainloop 
abbr Starts event loop - calling Tkinter’s mainloop function. Must be the laststatement in a turtle graphics program.
alias mainloop
    turtle.mainloop()
    # Starts event loop - calling Tkinter’s mainloop function. Must be the laststatement in a turtle graphics program.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_done 
abbr Starts event loop - calling Tkinter’s mainloop function. Must be the laststatement in a turtle graphics program.
alias done
    turtle.done()
    # Starts event loop - calling Tkinter’s mainloop function. Must be the laststatement in a turtle graphics program.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_begin_poly 
abbr Start recording the vertices of a polygon.  Current turtle position is firstvertex of polygon.
alias begin_poly
    turtle.begin_poly()
    # Start recording the vertices of a polygon.  Current turtle position is firstvertex of polygon.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_end_poly 
abbr Stop recording the vertices of a polygon.  Current turtle position is lastvertex of polygon.  This will be connected with the first vertex.
alias end_poly
    turtle.end_poly()
    # Stop recording the vertices of a polygon.  Current turtle position is lastvertex of polygon.  This will be connected with the first vertex.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_get_poly 
abbr Return the last recorded polygon.
alias get_poly
    turtle.get_poly()
    # Return the last recorded polygon.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_clone 
abbr Create and return a clone of the turtle with same position, heading andturtle properties.
alias clone
    turtle.clone()
    # Create and return a clone of the turtle with same position, heading andturtle properties.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_getturtle 
abbr Return the Turtle object itself.  Only reasonable use: as a function toreturn the “anonymous turtle”:
alias getturtle
    turtle.getturtle()
    # Return the Turtle object itself.  Only reasonable use: as a function toreturn the “anonymous turtle”:
    # https://docs.python.org/2/library/turtle.html
snippet turtle_getpen 
abbr Return the Turtle object itself.  Only reasonable use: as a function toreturn the “anonymous turtle”:
alias getpen
    turtle.getpen()
    # Return the Turtle object itself.  Only reasonable use: as a function toreturn the “anonymous turtle”:
    # https://docs.python.org/2/library/turtle.html
snippet turtle_getscreen 
abbr Return the TurtleScreen object the turtle is drawing on.TurtleScreen methods can then be called for that object.
alias getscreen
    turtle.getscreen()
    # Return the TurtleScreen object the turtle is drawing on.TurtleScreen methods can then be called for that object.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_setundobuffer size
abbr Set or disable undobuffer.  If size is an integer an empty undobuffer ofgiven size is installed.  size gives the maximum number of turtle ac
alias setundobuffer
    turtle.setundobuffer(${1:size})
    # Set or disable undobuffer.  If size is an integer an empty undobuffer ofgiven size is installed.  size gives the maximum number of turtle ac
    # https://docs.python.org/2/library/turtle.html
snippet turtle_undobufferentries 
abbr Return number of entries in the undobuffer.
alias undobufferentries
    turtle.undobufferentries()
    # Return number of entries in the undobuffer.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_tracer flag=None_delay=None
abbr A replica of the corresponding TurtleScreen method.
alias tracer
    turtle.tracer(${1:flag=None}, ${2:delay=None})
    # A replica of the corresponding TurtleScreen method.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_window_width 
abbr Both are replicas of the corresponding TurtleScreen methods.
alias window_width
    turtle.window_width()
    # Both are replicas of the corresponding TurtleScreen methods.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_window_height 
abbr Both are replicas of the corresponding TurtleScreen methods.
alias window_height
    turtle.window_height()
    # Both are replicas of the corresponding TurtleScreen methods.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_bgcolor *args
abbr Set or return background color of the TurtleScreen.
alias bgcolor
    turtle.bgcolor(${1:*args})
    # Set or return background color of the TurtleScreen.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_bgpic picname=None
abbr Set background image or return name of current backgroundimage.  If picnameis a filename, set the corresponding image as background.  If pic
alias bgpic
    turtle.bgpic(${1:picname=None})
    # Set background image or return name of current backgroundimage.  If picnameis a filename, set the corresponding image as background.  If pic
    # https://docs.python.org/2/library/turtle.html
snippet turtle_clearscreen 
abbr Delete all drawings and all turtles from the TurtleScreen.  Reset the nowempty TurtleScreen to its initial state: white background, no backg
alias clearscreen
    turtle.clearscreen()
    # Delete all drawings and all turtles from the TurtleScreen.  Reset the nowempty TurtleScreen to its initial state: white background, no backg
    # https://docs.python.org/2/library/turtle.html
snippet turtle_resetscreen 
abbr Reset all Turtles on the Screen to their initial state.
alias resetscreen
    turtle.resetscreen()
    # Reset all Turtles on the Screen to their initial state.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_screensize canvwidth=None_canvheight=None_bg=None
abbr If no arguments are given, return current (canvaswidth, canvasheight).  Elseresize the canvas the turtles are drawing on.  Do not alter the 
alias screensize
    turtle.screensize(${1:canvwidth=None}, ${2:canvheight=None}, ${3:bg=None})
    # If no arguments are given, return current (canvaswidth, canvasheight).  Elseresize the canvas the turtles are drawing on.  Do not alter the 
    # https://docs.python.org/2/library/turtle.html
snippet turtle_setworldcoordinates llx_lly_urx_ury
abbr Set up user-defined coordinate system and switch to mode “world” ifnecessary.  This performs a screen.reset().  If mode “world” is alreadyac
alias setworldcoordinates
    turtle.setworldcoordinates(${1:llx}, ${2:lly}, ${3:urx}, ${4:ury})
    # Set up user-defined coordinate system and switch to mode “world” ifnecessary.  This performs a screen.reset().  If mode “world” is alreadyac
    # https://docs.python.org/2/library/turtle.html
snippet turtle_delay delay=None
abbr Set or return the drawing delay in milliseconds.  (This is approximatelythe time interval between two consecutive canvas updates.)  The long
alias delay
    turtle.delay(${1:delay=None})
    # Set or return the drawing delay in milliseconds.  (This is approximatelythe time interval between two consecutive canvas updates.)  The long
    # https://docs.python.org/2/library/turtle.html
snippet turtle_update 
abbr Perform a TurtleScreen update. To be used when tracer is turned off.
alias update
    turtle.update()
    # Perform a TurtleScreen update. To be used when tracer is turned off.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_listen xdummy=None_ydummy=None
abbr Set focus on TurtleScreen (in order to collect key-events).  Dummy argumentsare provided in order to be able to pass listen() to the onclick
alias listen
    turtle.listen(${1:xdummy=None}, ${2:ydummy=None})
    # Set focus on TurtleScreen (in order to collect key-events).  Dummy argumentsare provided in order to be able to pass listen() to the onclick
    # https://docs.python.org/2/library/turtle.html
snippet turtle_onkey fun_key
abbr Bind fun to key-release event of key.  If fun is None, event bindingsare removed. Remark: in order to be able to register key-events, Turtle
alias onkey
    turtle.onkey(${1:fun}, ${2:key})
    # Bind fun to key-release event of key.  If fun is None, event bindingsare removed. Remark: in order to be able to register key-events, Turtle
    # https://docs.python.org/2/library/turtle.html
snippet turtle_onscreenclick fun_btn=1_add=None
abbr Bind fun to mouse-click events on this screen.  If fun is None,existing bindings are removed.
alias onscreenclick
    turtle.onscreenclick(${1:fun}, ${2:btn=1}, ${3:add=None})
    # Bind fun to mouse-click events on this screen.  If fun is None,existing bindings are removed.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_ontimer fun_t=0
abbr Install a timer that calls fun after t milliseconds.
alias ontimer
    turtle.ontimer(${1:fun}, ${2:t=0})
    # Install a timer that calls fun after t milliseconds.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_mode mode=None
abbr Set turtle mode (“standard”, “logo” or “world”) and perform reset.  If modeis not given, current mode is returned.
alias mode
    turtle.mode(${1:mode=None})
    # Set turtle mode (“standard”, “logo” or “world”) and perform reset.  If modeis not given, current mode is returned.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_colormode cmode=None
abbr Return the colormode or set it to 1.0 or 255.  Subsequently r, g, bvalues of color triples have to be in the range 0..cmode.
alias colormode
    turtle.colormode(${1:cmode=None})
    # Return the colormode or set it to 1.0 or 255.  Subsequently r, g, bvalues of color triples have to be in the range 0..cmode.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_getcanvas 
abbr Return the Canvas of this TurtleScreen.  Useful for insiders who know what todo with a Tkinter Canvas.
alias getcanvas
    turtle.getcanvas()
    # Return the Canvas of this TurtleScreen.  Useful for insiders who know what todo with a Tkinter Canvas.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_getshapes 
abbr Return a list of names of all currently available turtle shapes.
alias getshapes
    turtle.getshapes()
    # Return a list of names of all currently available turtle shapes.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_register_shape name_shape=None
abbr There are three different ways to call this function:
alias register_shape
    turtle.register_shape(${1:name}, ${2:shape=None})
    # There are three different ways to call this function:
    # https://docs.python.org/2/library/turtle.html
snippet turtle_addshape name_shape=None
abbr There are three different ways to call this function:
alias addshape
    turtle.addshape(${1:name}, ${2:shape=None})
    # There are three different ways to call this function:
    # https://docs.python.org/2/library/turtle.html
snippet turtle_turtles 
abbr Return the list of turtles on the screen.
alias turtles
    turtle.turtles()
    # Return the list of turtles on the screen.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_bye 
abbr Shut the turtlegraphics window.
alias bye
    turtle.bye()
    # Shut the turtlegraphics window.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_exitonclick 
abbr Bind bye() method to mouse clicks on the Screen.
alias exitonclick
    turtle.exitonclick()
    # Bind bye() method to mouse clicks on the Screen.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_setup width=_CFG["width"], height=_CFG["height"], startx=_CFG["leftright"], starty=_CFG["topbottom"]
abbr Set the size and position of the main window.  Default values of argumentsare stored in the configuration dictionary and can be changed via 
alias setup
    turtle.setup(${1:width=_CFG["width"], height=_CFG["height"], startx=_CFG["leftright"], starty=_CFG["topbottom"]})
    # Set the size and position of the main window.  Default values of argumentsare stored in the configuration dictionary and can be changed via 
    # https://docs.python.org/2/library/turtle.html
snippet turtle_title titlestring
abbr Set title of turtle window to titlestring.
alias title
    turtle.title(${1:titlestring})
    # Set title of turtle window to titlestring.
    # https://docs.python.org/2/library/turtle.html
snippet turtle_write_docstringdict filename="turtle_docstringdict"
abbr Create and write docstring-dictionary to a Python script with the givenfilename.  This function has to be called explicitly (it is not used 
alias write_docstringdict
    turtle.write_docstringdict(${1:filename="turtle_docstringdict"})
    # Create and write docstring-dictionary to a Python script with the givenfilename.  This function has to be called explicitly (it is not used 
    # https://docs.python.org/2/library/turtle.html





snippet unicodedata_lookup name
abbr Look up character by name.  If a character with the given name is found, returnthe corresponding Unicode character.  If not found, KeyError 
alias lookup
    unicodedata.lookup(${1:name})
    # Look up character by name.  If a character with the given name is found, returnthe corresponding Unicode character.  If not found, KeyError 
    # https://docs.python.org/2/library/unicodedata.html
snippet unicodedata_name unichr_default
abbr Returns the name assigned to the Unicode character unichr as a string. If noname is defined, default is returned, or, if not given, ValueErr
alias name
    unicodedata.name(${1:unichr}, ${2:default})
    # Returns the name assigned to the Unicode character unichr as a string. If noname is defined, default is returned, or, if not given, ValueErr
    # https://docs.python.org/2/library/unicodedata.html
snippet unicodedata_decimal unichr_default
abbr Returns the decimal value assigned to the Unicode character unichr as integer.If no such value is defined, default is returned, or, if not g
alias decimal
    unicodedata.decimal(${1:unichr}, ${2:default})
    # Returns the decimal value assigned to the Unicode character unichr as integer.If no such value is defined, default is returned, or, if not g
    # https://docs.python.org/2/library/unicodedata.html
snippet unicodedata_digit unichr_default
abbr Returns the digit value assigned to the Unicode character unichr as integer.If no such value is defined, default is returned, or, if not giv
alias digit
    unicodedata.digit(${1:unichr}, ${2:default})
    # Returns the digit value assigned to the Unicode character unichr as integer.If no such value is defined, default is returned, or, if not giv
    # https://docs.python.org/2/library/unicodedata.html
snippet unicodedata_numeric unichr_default
abbr Returns the numeric value assigned to the Unicode character unichr as float.If no such value is defined, default is returned, or, if not giv
alias numeric
    unicodedata.numeric(${1:unichr}, ${2:default})
    # Returns the numeric value assigned to the Unicode character unichr as float.If no such value is defined, default is returned, or, if not giv
    # https://docs.python.org/2/library/unicodedata.html
snippet unicodedata_category unichr
abbr Returns the general category assigned to the Unicode character unichr asstring.
alias category
    unicodedata.category(${1:unichr})
    # Returns the general category assigned to the Unicode character unichr asstring.
    # https://docs.python.org/2/library/unicodedata.html
snippet unicodedata_bidirectional unichr
abbr Returns the bidirectional class assigned to the Unicode character unichr asstring. If no such value is defined, an empty string is returned.
alias bidirectional
    unicodedata.bidirectional(${1:unichr})
    # Returns the bidirectional class assigned to the Unicode character unichr asstring. If no such value is defined, an empty string is returned.
    # https://docs.python.org/2/library/unicodedata.html
snippet unicodedata_combining unichr
abbr Returns the canonical combining class assigned to the Unicode character unichras integer. Returns 0 if no combining class is defined.
alias combining
    unicodedata.combining(${1:unichr})
    # Returns the canonical combining class assigned to the Unicode character unichras integer. Returns 0 if no combining class is defined.
    # https://docs.python.org/2/library/unicodedata.html
snippet unicodedata_east_asian_width unichr
abbr Returns the east asian width assigned to the Unicode character unichr asstring.
alias east_asian_width
    unicodedata.east_asian_width(${1:unichr})
    # Returns the east asian width assigned to the Unicode character unichr asstring.
    # https://docs.python.org/2/library/unicodedata.html
snippet unicodedata_mirrored unichr
abbr Returns the mirrored property assigned to the Unicode character unichr asinteger. Returns 1 if the character has been identified as a “mirro
alias mirrored
    unicodedata.mirrored(${1:unichr})
    # Returns the mirrored property assigned to the Unicode character unichr asinteger. Returns 1 if the character has been identified as a “mirro
    # https://docs.python.org/2/library/unicodedata.html
snippet unicodedata_decomposition unichr
abbr Returns the character decomposition mapping assigned to the Unicode characterunichr as string. An empty string is returned in case no such m
alias decomposition
    unicodedata.decomposition(${1:unichr})
    # Returns the character decomposition mapping assigned to the Unicode characterunichr as string. An empty string is returned in case no such m
    # https://docs.python.org/2/library/unicodedata.html
snippet unicodedata_normalize form_unistr
abbr Return the normal form form for the Unicode string unistr. Valid values forform are ‘NFC’, ‘NFKC’, ‘NFD’, and ‘NFKD’.
alias normalize
    unicodedata.normalize(${1:form}, ${2:unistr})
    # Return the normal form form for the Unicode string unistr. Valid values forform are ‘NFC’, ‘NFKC’, ‘NFD’, and ‘NFKD’.
    # https://docs.python.org/2/library/unicodedata.html

snippet unittest_skip reason
abbr Unconditionally skip the decorated test.  reason should describe why thetest is being skipped.
alias skip
    unittest.skip(${1:reason})
    # Unconditionally skip the decorated test.  reason should describe why thetest is being skipped.
    # https://docs.python.org/2/library/unittest.html
snippet unittest_skipIf condition_reason
abbr Skip the decorated test if condition is true.
alias skipIf
    unittest.skipIf(${1:condition}, ${2:reason})
    # Skip the decorated test if condition is true.
    # https://docs.python.org/2/library/unittest.html
snippet unittest_skipUnless condition_reason
abbr Skip the decorated test unless condition is true.
alias skipUnless
    unittest.skipUnless(${1:condition}, ${2:reason})
    # Skip the decorated test unless condition is true.
    # https://docs.python.org/2/library/unittest.html
snippet unittest_expectedFailure 
abbr Mark the test as an expected failure.  If the test fails when run, the testis not counted as a failure.
alias expectedFailure
    unittest.expectedFailure()
    # Mark the test as an expected failure.  If the test fails when run, the testis not counted as a failure.
    # https://docs.python.org/2/library/unittest.html
snippet unittest_main module_defaultTest_argv_testRunner_testLoader_exit_verbosity_failfast_catchbreak_buffer
abbr A command-line program that loads a set of tests from module and runs them;this is primarily for making test modules conveniently executable
alias main
    unittest.main(${1:module}, ${2:defaultTest}, ${3:argv}, ${4:testRunner}, ${5:testLoader}, ${6:exit}, ${7:verbosity}, ${8:failfast}, ${9:catchbreak}, ${10:buffer})
    # A command-line program that loads a set of tests from module and runs them;this is primarily for making test modules conveniently executable
    # https://docs.python.org/2/library/unittest.html
snippet unittest_installHandler 
abbr Install the control-c handler. When a signal.SIGINT is received(usually in response to the user pressing control-c) all registered resultsha
alias installHandler
    unittest.installHandler()
    # Install the control-c handler. When a signal.SIGINT is received(usually in response to the user pressing control-c) all registered resultsha
    # https://docs.python.org/2/library/unittest.html
snippet unittest_registerResult result
abbr Register a TestResult object for control-c handling. Registering aresult stores a weak reference to it, so it doesn’t prevent the result fro
alias registerResult
    unittest.registerResult(${1:result})
    # Register a TestResult object for control-c handling. Registering aresult stores a weak reference to it, so it doesn’t prevent the result fro
    # https://docs.python.org/2/library/unittest.html
snippet unittest_removeResult result
abbr Remove a registered result. Once a result has been removed thenstop() will no longer be called on that result object inresponse to a control
alias removeResult
    unittest.removeResult(${1:result})
    # Remove a registered result. Once a result has been removed thenstop() will no longer be called on that result object inresponse to a control
    # https://docs.python.org/2/library/unittest.html
snippet unittest_removeHandler function=None
abbr When called without arguments this function removes the control-c handlerif it has been installed. This function can also be used as a test 
alias removeHandler
    unittest.removeHandler(${1:function=None})
    # When called without arguments this function removes the control-c handlerif it has been installed. This function can also be used as a test 
    # https://docs.python.org/2/library/unittest.html



snippet urllib_urlopen url_data_proxies
abbr Open a network object denoted by a URL for reading.  If the URL does nothave a scheme identifier, or if it has file: as its schemeidentifier
alias urlopen
    urllib.urlopen(${1:url}, ${2:data}, ${3:proxies})
    # Open a network object denoted by a URL for reading.  If the URL does nothave a scheme identifier, or if it has file: as its schemeidentifier
    # https://docs.python.org/2/library/urllib.html
snippet urllib_urlretrieve url_filename_reporthook_data
abbr Copy a network object denoted by a URL to a local file, if necessary. If the URLpoints to a local file, or a valid cached copy of the object
alias urlretrieve
    urllib.urlretrieve(${1:url}, ${2:filename}, ${3:reporthook}, ${4:data})
    # Copy a network object denoted by a URL to a local file, if necessary. If the URLpoints to a local file, or a valid cached copy of the object
    # https://docs.python.org/2/library/urllib.html
snippet urllib_urlcleanup 
abbr Clear the cache that may have been built up by previous calls tourlretrieve().
alias urlcleanup
    urllib.urlcleanup()
    # Clear the cache that may have been built up by previous calls tourlretrieve().
    # https://docs.python.org/2/library/urllib.html
snippet urllib_quote string_safe
abbr Replace special characters in string using the %xx escape. Letters,digits, and the characters '_.-' are never quoted. By default, thisfuncti
alias quote
    urllib.quote(${1:string}, ${2:safe})
    # Replace special characters in string using the %xx escape. Letters,digits, and the characters '_.-' are never quoted. By default, thisfuncti
    # https://docs.python.org/2/library/urllib.html
snippet urllib_quote_plus string_safe
abbr Like quote(), but also replaces spaces by plus signs, as required forquoting HTML form values when building up a query string to go into a U
alias quote_plus
    urllib.quote_plus(${1:string}, ${2:safe})
    # Like quote(), but also replaces spaces by plus signs, as required forquoting HTML form values when building up a query string to go into a U
    # https://docs.python.org/2/library/urllib.html
snippet urllib_unquote string
abbr Replace %xx escapes by their single-character equivalent.
alias unquote
    urllib.unquote(${1:string})
    # Replace %xx escapes by their single-character equivalent.
    # https://docs.python.org/2/library/urllib.html
snippet urllib_unquote_plus string
abbr Like unquote(), but also replaces plus signs by spaces, as required forunquoting HTML form values.
alias unquote_plus
    urllib.unquote_plus(${1:string})
    # Like unquote(), but also replaces plus signs by spaces, as required forunquoting HTML form values.
    # https://docs.python.org/2/library/urllib.html
snippet urllib_urlencode query_doseq
abbr Convert a mapping object or a sequence of two-element tuples to a“percent-encoded” string, suitable to pass to urlopen() above as theoptiona
alias urlencode
    urllib.urlencode(${1:query}, ${2:doseq})
    # Convert a mapping object or a sequence of two-element tuples to a“percent-encoded” string, suitable to pass to urlopen() above as theoptiona
    # https://docs.python.org/2/library/urllib.html
snippet urllib_pathname2url path
abbr Convert the pathname path from the local syntax for a path to the form used inthe path component of a URL.  This does not produce a complete
alias pathname2url
    urllib.pathname2url(${1:path})
    # Convert the pathname path from the local syntax for a path to the form used inthe path component of a URL.  This does not produce a complete
    # https://docs.python.org/2/library/urllib.html
snippet urllib_url2pathname path
abbr Convert the path component path from an percent-encoded URL to the local syntax for apath.  This does not accept a complete URL.  This funct
alias url2pathname
    urllib.url2pathname(${1:path})
    # Convert the path component path from an percent-encoded URL to the local syntax for apath.  This does not accept a complete URL.  This funct
    # https://docs.python.org/2/library/urllib.html
snippet urllib_getproxies 
abbr This helper function returns a dictionary of scheme to proxy server URLmappings. It scans the environment for variables named <scheme>_proxy
alias getproxies
    urllib.getproxies()
    # This helper function returns a dictionary of scheme to proxy server URLmappings. It scans the environment for variables named <scheme>_proxy
    # https://docs.python.org/2/library/urllib.html

snippet urllib2_urlopen url[, data][, timeout]
abbr Open the URL url, which can be either a string or a Request object.
alias urlopen
    urllib2.urlopen(${1:url[, data][, timeout]})
    # Open the URL url, which can be either a string or a Request object.
    # https://docs.python.org/2/library/urllib2.html
snippet urllib2_install_opener opener
abbr Install an OpenerDirector instance as the default global opener.Installing an opener is only necessary if you want urlopen to use that opene
alias install_opener
    urllib2.install_opener(${1:opener})
    # Install an OpenerDirector instance as the default global opener.Installing an opener is only necessary if you want urlopen to use that opene
    # https://docs.python.org/2/library/urllib2.html
snippet urllib2_build_opener handler_...
abbr Return an OpenerDirector instance, which chains the handlers in theorder given. handlers can be either instances of BaseHandler, orsubclasse
alias build_opener
    urllib2.build_opener(${1:handler}, ${2:...})
    # Return an OpenerDirector instance, which chains the handlers in theorder given. handlers can be either instances of BaseHandler, orsubclasse
    # https://docs.python.org/2/library/urllib2.html

snippet urlparse_urlparse urlstring_scheme_allow_fragments
abbr Parse a URL into six components, returning a 6-tuple.  This corresponds to thegeneral structure of a URL: scheme://netloc/path;parameters?qu
alias urlparse
    urlparse.urlparse(${1:urlstring}, ${2:scheme}, ${3:allow_fragments})
    # Parse a URL into six components, returning a 6-tuple.  This corresponds to thegeneral structure of a URL: scheme://netloc/path;parameters?qu
    # https://docs.python.org/2/library/urlparse.html
snippet urlparse_parse_qs qs_keep_blank_values_strict_parsing
abbr Parse a query string given as a string argument (data of typeapplication/x-www-form-urlencoded).  Data are returned as adictionary.  The dic
alias parse_qs
    urlparse.parse_qs(${1:qs}, ${2:keep_blank_values}, ${3:strict_parsing})
    # Parse a query string given as a string argument (data of typeapplication/x-www-form-urlencoded).  Data are returned as adictionary.  The dic
    # https://docs.python.org/2/library/urlparse.html
snippet urlparse_parse_qsl qs_keep_blank_values_strict_parsing
abbr Parse a query string given as a string argument (data of typeapplication/x-www-form-urlencoded).  Data are returned as a list ofname, value 
alias parse_qsl
    urlparse.parse_qsl(${1:qs}, ${2:keep_blank_values}, ${3:strict_parsing})
    # Parse a query string given as a string argument (data of typeapplication/x-www-form-urlencoded).  Data are returned as a list ofname, value 
    # https://docs.python.org/2/library/urlparse.html
snippet urlparse_urlunparse parts
abbr Construct a URL from a tuple as returned by urlparse(). The parts argumentcan be any six-item iterable. This may result in a slightly differ
alias urlunparse
    urlparse.urlunparse(${1:parts})
    # Construct a URL from a tuple as returned by urlparse(). The parts argumentcan be any six-item iterable. This may result in a slightly differ
    # https://docs.python.org/2/library/urlparse.html
snippet urlparse_urlsplit urlstring_scheme_allow_fragments
abbr This is similar to urlparse(), but does not split the params from the URL.This should generally be used instead of urlparse() if the more re
alias urlsplit
    urlparse.urlsplit(${1:urlstring}, ${2:scheme}, ${3:allow_fragments})
    # This is similar to urlparse(), but does not split the params from the URL.This should generally be used instead of urlparse() if the more re
    # https://docs.python.org/2/library/urlparse.html
snippet urlparse_urlunsplit parts
abbr Combine the elements of a tuple as returned by urlsplit() into a completeURL as a string. The parts argument can be any five-item iterable. 
alias urlunsplit
    urlparse.urlunsplit(${1:parts})
    # Combine the elements of a tuple as returned by urlsplit() into a completeURL as a string. The parts argument can be any five-item iterable. 
    # https://docs.python.org/2/library/urlparse.html
snippet urlparse_urljoin base_url_allow_fragments
abbr Construct a full (“absolute”) URL by combining a “base URL” (base) withanother URL (url).  Informally, this uses components of the base URL,
alias urljoin
    urlparse.urljoin(${1:base}, ${2:url}, ${3:allow_fragments})
    # Construct a full (“absolute”) URL by combining a “base URL” (base) withanother URL (url).  Informally, this uses components of the base URL,
    # https://docs.python.org/2/library/urlparse.html
snippet urlparse_urldefrag url
abbr If url contains a fragment identifier, returns a modified version of urlwith no fragment identifier, and the fragment identifier as a separa
alias urldefrag
    urlparse.urldefrag(${1:url})
    # If url contains a fragment identifier, returns a modified version of urlwith no fragment identifier, and the fragment identifier as a separa
    # https://docs.python.org/2/library/urlparse.html





snippet uu_encode in_file_out_file_name_mode
abbr Uuencode file in_file into file out_file.  The uuencoded file will have theheader specifying name and mode as the defaults for the results o
alias encode
    uu.encode(${1:in_file}, ${2:out_file}, ${3:name}, ${4:mode})
    # Uuencode file in_file into file out_file.  The uuencoded file will have theheader specifying name and mode as the defaults for the results o
    # https://docs.python.org/2/library/uu.html
snippet uu_decode in_file_out_file_mode_quiet
abbr This call decodes uuencoded file in_file placing the result on fileout_file. If out_file is a pathname, mode is used to set the permissionbi
alias decode
    uu.decode(${1:in_file}, ${2:out_file}, ${3:mode}, ${4:quiet})
    # This call decodes uuencoded file in_file placing the result on fileout_file. If out_file is a pathname, mode is used to set the permissionbi
    # https://docs.python.org/2/library/uu.html

snippet uuid_getnode 
abbr Get the hardware address as a 48-bit positive integer.  The first time thisruns, it may launch a separate program, which could be quite slow
alias getnode
    uuid.getnode()
    # Get the hardware address as a 48-bit positive integer.  The first time thisruns, it may launch a separate program, which could be quite slow
    # https://docs.python.org/2/library/uuid.html
snippet uuid_uuid1 node_clock_seq
abbr Generate a UUID from a host ID, sequence number, and the current time. If nodeis not given, getnode() is used to obtain the hardware address
alias uuid1
    uuid.uuid1(${1:node}, ${2:clock_seq})
    # Generate a UUID from a host ID, sequence number, and the current time. If nodeis not given, getnode() is used to obtain the hardware address
    # https://docs.python.org/2/library/uuid.html
snippet uuid_uuid3 namespace_name
abbr Generate a UUID based on the MD5 hash of a namespace identifier (which is aUUID) and a name (which is a string).
alias uuid3
    uuid.uuid3(${1:namespace}, ${2:name})
    # Generate a UUID based on the MD5 hash of a namespace identifier (which is aUUID) and a name (which is a string).
    # https://docs.python.org/2/library/uuid.html
snippet uuid_uuid4 
abbr Generate a random UUID.
alias uuid4
    uuid.uuid4()
    # Generate a random UUID.
    # https://docs.python.org/2/library/uuid.html
snippet uuid_uuid5 namespace_name
abbr Generate a UUID based on the SHA-1 hash of a namespace identifier (which is aUUID) and a name (which is a string).
alias uuid5
    uuid.uuid5(${1:namespace}, ${2:name})
    # Generate a UUID based on the SHA-1 hash of a namespace identifier (which is aUUID) and a name (which is a string).
    # https://docs.python.org/2/library/uuid.html

snippet warnings_warn message_category_stacklevel
abbr Issue a warning, or maybe ignore it or raise an exception.  The categoryargument, if given, must be a warning category class (see above); it
alias warn
    warnings.warn(${1:message}, ${2:category}, ${3:stacklevel})
    # Issue a warning, or maybe ignore it or raise an exception.  The categoryargument, if given, must be a warning category class (see above); it
    # https://docs.python.org/2/library/warnings.html
snippet warnings_warn_explicit message_category_filename_lineno_module_registry_module_globals
abbr This is a low-level interface to the functionality of warn(), passing inexplicitly the message, category, filename and line number, and opti
alias warn_explicit
    warnings.warn_explicit(${1:message}, ${2:category}, ${3:filename}, ${4:lineno}, ${5:module}, ${6:registry}, ${7:module_globals})
    # This is a low-level interface to the functionality of warn(), passing inexplicitly the message, category, filename and line number, and opti
    # https://docs.python.org/2/library/warnings.html
snippet warnings_warnpy3k message_category_stacklevel
abbr Issue a warning related to Python 3.x deprecation. Warnings are only shownwhen Python is started with the -3 option. Like warn() message mus
alias warnpy3k
    warnings.warnpy3k(${1:message}, ${2:category}, ${3:stacklevel})
    # Issue a warning related to Python 3.x deprecation. Warnings are only shownwhen Python is started with the -3 option. Like warn() message mus
    # https://docs.python.org/2/library/warnings.html
snippet warnings_showwarning message_category_filename_lineno_file_line
abbr Write a warning to a file.  The default implementation callsformatwarning(message, category, filename, lineno, line) and writes theresulting
alias showwarning
    warnings.showwarning(${1:message}, ${2:category}, ${3:filename}, ${4:lineno}, ${5:file}, ${6:line})
    # Write a warning to a file.  The default implementation callsformatwarning(message, category, filename, lineno, line) and writes theresulting
    # https://docs.python.org/2/library/warnings.html
snippet warnings_formatwarning message_category_filename_lineno_line
abbr Format a warning the standard way.  This returns a string which may containembedded newlines and ends in a newline.  line is a line of sourc
alias formatwarning
    warnings.formatwarning(${1:message}, ${2:category}, ${3:filename}, ${4:lineno}, ${5:line})
    # Format a warning the standard way.  This returns a string which may containembedded newlines and ends in a newline.  line is a line of sourc
    # https://docs.python.org/2/library/warnings.html
snippet warnings_filterwarnings action_message_category_module_lineno_append
abbr Insert an entry into the list of warnings filter specifications.  The entry is inserted at the front by default; ifappend is true, it is ins
alias filterwarnings
    warnings.filterwarnings(${1:action}, ${2:message}, ${3:category}, ${4:module}, ${5:lineno}, ${6:append})
    # Insert an entry into the list of warnings filter specifications.  The entry is inserted at the front by default; ifappend is true, it is ins
    # https://docs.python.org/2/library/warnings.html
snippet warnings_simplefilter action_category_lineno_append
abbr Insert a simple entry into the list of warnings filter specifications.  The meaning of the function parameters is as forfilterwarnings(), bu
alias simplefilter
    warnings.simplefilter(${1:action}, ${2:category}, ${3:lineno}, ${4:append})
    # Insert a simple entry into the list of warnings filter specifications.  The meaning of the function parameters is as forfilterwarnings(), bu
    # https://docs.python.org/2/library/warnings.html
snippet warnings_resetwarnings 
abbr Reset the warnings filter.  This discards the effect of all previous calls tofilterwarnings(), including that of the -W command line options
alias resetwarnings
    warnings.resetwarnings()
    # Reset the warnings filter.  This discards the effect of all previous calls tofilterwarnings(), including that of the -W command line options
    # https://docs.python.org/2/library/warnings.html

snippet wave_open file_mode
abbr If file is a string, open the file by that name, otherwise treat it as aseekable file-like object.  mode can be any of
alias open
    wave.open(${1:file}, ${2:mode})
    # If file is a string, open the file by that name, otherwise treat it as aseekable file-like object.  mode can be any of
    # https://docs.python.org/2/library/wave.html
snippet wave_openfp file_mode
abbr A synonym for open(), maintained for backwards compatibility.
alias openfp
    wave.openfp(${1:file}, ${2:mode})
    # A synonym for open(), maintained for backwards compatibility.
    # https://docs.python.org/2/library/wave.html

snippet weakref_proxy object_callback
abbr Return a proxy to object which uses a weak reference.  This supports use ofthe proxy in most contexts instead of requiring the explicit dere
alias proxy
    weakref.proxy(${1:object}, ${2:callback})
    # Return a proxy to object which uses a weak reference.  This supports use ofthe proxy in most contexts instead of requiring the explicit dere
    # https://docs.python.org/2/library/weakref.html
snippet weakref_getweakrefcount object
abbr Return the number of weak references and proxies which refer to object.
alias getweakrefcount
    weakref.getweakrefcount(${1:object})
    # Return the number of weak references and proxies which refer to object.
    # https://docs.python.org/2/library/weakref.html
snippet weakref_getweakrefs object
abbr Return a list of all weak reference and proxy objects which refer to object.
alias getweakrefs
    weakref.getweakrefs(${1:object})
    # Return a list of all weak reference and proxy objects which refer to object.
    # https://docs.python.org/2/library/weakref.html

snippet webbrowser_open url_new=0_autoraise=True
abbr Display url using the default browser. If new is 0, the url is openedin the same browser window if possible.  If new is 1, a new browser win
alias open
    webbrowser.open(${1:url}, ${2:new=0}, ${3:autoraise=True})
    # Display url using the default browser. If new is 0, the url is openedin the same browser window if possible.  If new is 1, a new browser win
    # https://docs.python.org/2/library/webbrowser.html
snippet webbrowser_open_new url
abbr Open url in a new window of the default browser, if possible, otherwise, openurl in the only browser window.
alias open_new
    webbrowser.open_new(${1:url})
    # Open url in a new window of the default browser, if possible, otherwise, openurl in the only browser window.
    # https://docs.python.org/2/library/webbrowser.html
snippet webbrowser_open_new_tab url
abbr Open url in a new page (“tab”) of the default browser, if possible, otherwiseequivalent to open_new().
alias open_new_tab
    webbrowser.open_new_tab(${1:url})
    # Open url in a new page (“tab”) of the default browser, if possible, otherwiseequivalent to open_new().
    # https://docs.python.org/2/library/webbrowser.html
snippet webbrowser_get name
abbr Return a controller object for the browser type name.  If name is empty,return a controller for a default browser appropriate to the caller’
alias get
    webbrowser.get(${1:name})
    # Return a controller object for the browser type name.  If name is empty,return a controller for a default browser appropriate to the caller’
    # https://docs.python.org/2/library/webbrowser.html
snippet webbrowser_register name_constructor_instance
abbr Register the browser type name.  Once a browser type is registered, theget() function can return a controller for that browser type.  Ifinst
alias register
    webbrowser.register(${1:name}, ${2:constructor}, ${3:instance})
    # Register the browser type name.  Once a browser type is registered, theget() function can return a controller for that browser type.  Ifinst
    # https://docs.python.org/2/library/webbrowser.html

snippet whichdb_whichdb filename
abbr Returns one of the following values: None if the file can’t be openedbecause it’s unreadable or doesn’t exist; the empty string ('') if thef
alias whichdb
    whichdb.whichdb(${1:filename})
    # Returns one of the following values: None if the file can’t be openedbecause it’s unreadable or doesn’t exist; the empty string ('') if thef
    # https://docs.python.org/2/library/whichdb.html



snippet winsound_Beep frequency_duration
abbr Beep the PC’s speaker. The frequency parameter specifies frequency, in hertz,of the sound, and must be in the range 37 through 32,767. The d
alias Beep
    winsound.Beep(${1:frequency}, ${2:duration})
    # Beep the PC’s speaker. The frequency parameter specifies frequency, in hertz,of the sound, and must be in the range 37 through 32,767. The d
    # https://docs.python.org/2/library/winsound.html
snippet winsound_PlaySound sound_flags
abbr Call the underlying PlaySound() function from the Platform API.  Thesound parameter may be a filename, audio data as a string, or None.  Its
alias PlaySound
    winsound.PlaySound(${1:sound}, ${2:flags})
    # Call the underlying PlaySound() function from the Platform API.  Thesound parameter may be a filename, audio data as a string, or None.  Its
    # https://docs.python.org/2/library/winsound.html
snippet winsound_MessageBeep type=MB_OK
abbr Call the underlying MessageBeep() function from the Platform API.  Thisplays a sound as specified in the registry.  The type argument specif
alias MessageBeep
    winsound.MessageBeep(${1:type=MB_OK})
    # Call the underlying MessageBeep() function from the Platform API.  Thisplays a sound as specified in the registry.  The type argument specif
    # https://docs.python.org/2/library/winsound.html

snippet wsgiref_util_guess_scheme environ
abbr Return a guess for whether wsgi.url_scheme should be “http” or “https”, bychecking for a HTTPS environment variable in the environ dictionar
alias guess_scheme
    wsgiref.util.guess_scheme(${1:environ})
    # Return a guess for whether wsgi.url_scheme should be “http” or “https”, bychecking for a HTTPS environment variable in the environ dictionar
    # https://docs.python.org/2/library/wsgiref.html
snippet wsgiref_util_request_uri environ_include_query=1
abbr Return the full request URI, optionally including the query string, using thealgorithm found in the “URL Reconstruction” section of PEP 333.
alias request_uri
    wsgiref.util.request_uri(${1:environ}, ${2:include_query=1})
    # Return the full request URI, optionally including the query string, using thealgorithm found in the “URL Reconstruction” section of PEP 333.
    # https://docs.python.org/2/library/wsgiref.html
snippet wsgiref_util_application_uri environ
abbr Similar to request_uri(), except that the PATH_INFO andQUERY_STRING variables are ignored.  The result is the base URI of theapplication obj
alias application_uri
    wsgiref.util.application_uri(${1:environ})
    # Similar to request_uri(), except that the PATH_INFO andQUERY_STRING variables are ignored.  The result is the base URI of theapplication obj
    # https://docs.python.org/2/library/wsgiref.html
snippet wsgiref_util_shift_path_info environ
abbr Shift a single name from PATH_INFO to SCRIPT_NAME and return the name.The environ dictionary is modified in-place; use a copy if you need to
alias shift_path_info
    wsgiref.util.shift_path_info(${1:environ})
    # Shift a single name from PATH_INFO to SCRIPT_NAME and return the name.The environ dictionary is modified in-place; use a copy if you need to
    # https://docs.python.org/2/library/wsgiref.html
snippet wsgiref_util_setup_testing_defaults environ
abbr Update environ with trivial defaults for testing purposes.
alias setup_testing_defaults
    wsgiref.util.setup_testing_defaults(${1:environ})
    # Update environ with trivial defaults for testing purposes.
    # https://docs.python.org/2/library/wsgiref.html
snippet wsgiref_util_is_hop_by_hop header_name
abbr Return true if ‘header_name’ is an HTTP/1.1 “Hop-by-Hop” header, as defined byRFC 2616.
alias is_hop_by_hop
    wsgiref.util.is_hop_by_hop(${1:header_name})
    # Return true if ‘header_name’ is an HTTP/1.1 “Hop-by-Hop” header, as defined byRFC 2616.
    # https://docs.python.org/2/library/wsgiref.html
snippet wsgiref_simple_server_make_server host_port_app_server_class=WSGIServer_handler_class=WSGIRequestHandler
abbr Create a new WSGI server listening on host and port, accepting connectionsfor app.  The return value is an instance of the supplied server_c
alias make_server
    wsgiref.simple_server.make_server(${1:host}, ${2:port}, ${3:app}, ${4:server_class=WSGIServer}, ${5:handler_class=WSGIRequestHandler})
    # Create a new WSGI server listening on host and port, accepting connectionsfor app.  The return value is an instance of the supplied server_c
    # https://docs.python.org/2/library/wsgiref.html
snippet wsgiref_simple_server_demo_app environ_start_response
abbr This function is a small but complete WSGI application that returns a text pagecontaining the message “Hello world!” and a list of the key/v
alias demo_app
    wsgiref.simple_server.demo_app(${1:environ}, ${2:start_response})
    # This function is a small but complete WSGI application that returns a text pagecontaining the message “Hello world!” and a list of the key/v
    # https://docs.python.org/2/library/wsgiref.html
snippet wsgiref_validate_validator application
abbr Wrap application and return a new WSGI application object.  The returnedapplication will forward all requests to the original application, a
alias validator
    wsgiref.validate.validator(${1:application})
    # Wrap application and return a new WSGI application object.  The returnedapplication will forward all requests to the original application, a
    # https://docs.python.org/2/library/wsgiref.html



snippet xml_dom_registerDOMImplementation name_factory
abbr Register the factory function with the name name.  The factory functionshould return an object which implements the DOMImplementationinterfa
alias registerDOMImplementation
    xml.dom.registerDOMImplementation(${1:name}, ${2:factory})
    # Register the factory function with the name name.  The factory functionshould return an object which implements the DOMImplementationinterfa
    # https://docs.python.org/2/library/xml.dom.html
snippet xml_dom_getDOMImplementation name_features
abbr Return a suitable DOM implementation. The name is either well-known, themodule name of a DOM implementation, or None. If it is not None, imp
alias getDOMImplementation
    xml.dom.getDOMImplementation(${1:name}, ${2:features})
    # Return a suitable DOM implementation. The name is either well-known, themodule name of a DOM implementation, or None. If it is not None, imp
    # https://docs.python.org/2/library/xml.dom.html

snippet xml_dom_minidom_parse filename_or_file_parser_bufsize
abbr Return a Document from the given input. filename_or_file may beeither a file name, or a file-like object. parser, if given, must be a SAX2pa
alias parse
    xml.dom.minidom.parse(${1:filename_or_file}, ${2:parser}, ${3:bufsize})
    # Return a Document from the given input. filename_or_file may beeither a file name, or a file-like object. parser, if given, must be a SAX2pa
    # https://docs.python.org/2/library/xml.dom.minidom.html
snippet xml_dom_minidom_parseString string_parser
abbr Return a Document that represents the string. This method creates aStringIO object for the string and passes that on to parse().
alias parseString
    xml.dom.minidom.parseString(${1:string}, ${2:parser})
    # Return a Document that represents the string. This method creates aStringIO object for the string and passes that on to parse().
    # https://docs.python.org/2/library/xml.dom.minidom.html

snippet xml_dom_pulldom_parse stream_or_string_parser_bufsize
abbr ...
alias parse
    xml.dom.pulldom.parse(${1:stream_or_string}, ${2:parser}, ${3:bufsize})
    # ...
    # https://docs.python.org/2/library/xml.dom.pulldom.html
snippet xml_dom_pulldom_parseString string_parser
abbr ...
alias parseString
    xml.dom.pulldom.parseString(${1:string}, ${2:parser})
    # ...
    # https://docs.python.org/2/library/xml.dom.pulldom.html

snippet xml_etree_ElementTree_Comment text=None
abbr Comment element factory.  This factory function creates a special elementthat will be serialized as an XML comment by the standard serialize
alias Comment
    xml.etree.ElementTree.Comment(${1:text=None})
    # Comment element factory.  This factory function creates a special elementthat will be serialized as an XML comment by the standard serialize
    # https://docs.python.org/2/library/xml.etree.elementtree.html
snippet xml_etree_ElementTree_dump elem
abbr Writes an element tree or element structure to sys.stdout.  This functionshould be used for debugging only.
alias dump
    xml.etree.ElementTree.dump(${1:elem})
    # Writes an element tree or element structure to sys.stdout.  This functionshould be used for debugging only.
    # https://docs.python.org/2/library/xml.etree.elementtree.html
snippet xml_etree_ElementTree_fromstring text
abbr Parses an XML section from a string constant.  Same as XML().  textis a string containing XML data.  Returns an Element instance.
alias fromstring
    xml.etree.ElementTree.fromstring(${1:text})
    # Parses an XML section from a string constant.  Same as XML().  textis a string containing XML data.  Returns an Element instance.
    # https://docs.python.org/2/library/xml.etree.elementtree.html
snippet xml_etree_ElementTree_fromstringlist sequence_parser=None
abbr Parses an XML document from a sequence of string fragments.  sequence is alist or other sequence containing XML data fragments.  parser is a
alias fromstringlist
    xml.etree.ElementTree.fromstringlist(${1:sequence}, ${2:parser=None})
    # Parses an XML document from a sequence of string fragments.  sequence is alist or other sequence containing XML data fragments.  parser is a
    # https://docs.python.org/2/library/xml.etree.elementtree.html
snippet xml_etree_ElementTree_iselement element
abbr Checks if an object appears to be a valid element object.  element is anelement instance.  Returns a true value if this is an element object
alias iselement
    xml.etree.ElementTree.iselement(${1:element})
    # Checks if an object appears to be a valid element object.  element is anelement instance.  Returns a true value if this is an element object
    # https://docs.python.org/2/library/xml.etree.elementtree.html
snippet xml_etree_ElementTree_iterparse source_events=None_parser=None
abbr Parses an XML section into an element tree incrementally, and reports what’sgoing on to the user.  source is a filename or file object conta
alias iterparse
    xml.etree.ElementTree.iterparse(${1:source}, ${2:events=None}, ${3:parser=None})
    # Parses an XML section into an element tree incrementally, and reports what’sgoing on to the user.  source is a filename or file object conta
    # https://docs.python.org/2/library/xml.etree.elementtree.html
snippet xml_etree_ElementTree_parse source_parser=None
abbr Parses an XML section into an element tree.  source is a filename or fileobject containing XML data.  parser is an optional parser instance.
alias parse
    xml.etree.ElementTree.parse(${1:source}, ${2:parser=None})
    # Parses an XML section into an element tree.  source is a filename or fileobject containing XML data.  parser is an optional parser instance.
    # https://docs.python.org/2/library/xml.etree.elementtree.html
snippet xml_etree_ElementTree_ProcessingInstruction target_text=None
abbr PI element factory.  This factory function creates a special element thatwill be serialized as an XML processing instruction.  target is a s
alias ProcessingInstruction
    xml.etree.ElementTree.ProcessingInstruction(${1:target}, ${2:text=None})
    # PI element factory.  This factory function creates a special element thatwill be serialized as an XML processing instruction.  target is a s
    # https://docs.python.org/2/library/xml.etree.elementtree.html
snippet xml_etree_ElementTree_register_namespace prefix_uri
abbr Registers a namespace prefix.  The registry is global, and any existingmapping for either the given prefix or the namespace URI will be remo
alias register_namespace
    xml.etree.ElementTree.register_namespace(${1:prefix}, ${2:uri})
    # Registers a namespace prefix.  The registry is global, and any existingmapping for either the given prefix or the namespace URI will be remo
    # https://docs.python.org/2/library/xml.etree.elementtree.html
snippet xml_etree_ElementTree_SubElement parent_tag_attrib={}_**extra
abbr Subelement factory.  This function creates an element instance, and appendsit to an existing element.
alias SubElement
    xml.etree.ElementTree.SubElement(${1:parent}, ${2:tag}, ${3:attrib={}}, ${4:**extra})
    # Subelement factory.  This function creates an element instance, and appendsit to an existing element.
    # https://docs.python.org/2/library/xml.etree.elementtree.html
snippet xml_etree_ElementTree_tostring element_encoding="us-ascii"_method="xml"
abbr Generates a string representation of an XML element, including allsubelements.  element is an Element instance.  encoding [1] isthe output e
alias tostring
    xml.etree.ElementTree.tostring(${1:element}, ${2:encoding="us-ascii"}, ${3:method="xml"})
    # Generates a string representation of an XML element, including allsubelements.  element is an Element instance.  encoding [1] isthe output e
    # https://docs.python.org/2/library/xml.etree.elementtree.html
snippet xml_etree_ElementTree_tostringlist element_encoding="us-ascii"_method="xml"
abbr Generates a string representation of an XML element, including allsubelements.  element is an Element instance.  encoding [1] isthe output e
alias tostringlist
    xml.etree.ElementTree.tostringlist(${1:element}, ${2:encoding="us-ascii"}, ${3:method="xml"})
    # Generates a string representation of an XML element, including allsubelements.  element is an Element instance.  encoding [1] isthe output e
    # https://docs.python.org/2/library/xml.etree.elementtree.html
snippet xml_etree_ElementTree_XML text_parser=None
abbr Parses an XML section from a string constant.  This function can be used toembed “XML literals” in Python code.  text is a string containing
alias XML
    xml.etree.ElementTree.XML(${1:text}, ${2:parser=None})
    # Parses an XML section from a string constant.  This function can be used toembed “XML literals” in Python code.  text is a string containing
    # https://docs.python.org/2/library/xml.etree.elementtree.html
snippet xml_etree_ElementTree_XMLID text_parser=None
abbr Parses an XML section from a string constant, and also returns a dictionarywhich maps from element id:s to elements.  text is a string conta
alias XMLID
    xml.etree.ElementTree.XMLID(${1:text}, ${2:parser=None})
    # Parses an XML section from a string constant, and also returns a dictionarywhich maps from element id:s to elements.  text is a string conta
    # https://docs.python.org/2/library/xml.etree.elementtree.html





snippet xml_sax_make_parser parser_list
abbr Create and return a SAX XMLReader object.  Thefirst parser found willbe used.  If parser_list is provided, it must be a sequence of strings 
alias make_parser
    xml.sax.make_parser(${1:parser_list})
    # Create and return a SAX XMLReader object.  Thefirst parser found willbe used.  If parser_list is provided, it must be a sequence of strings 
    # https://docs.python.org/2/library/xml.sax.html
snippet xml_sax_parse filename_or_stream_handler_error_handler
abbr Create a SAX parser and use it to parse a document.  The document, passed in asfilename_or_stream, can be a filename or a file object.  The 
alias parse
    xml.sax.parse(${1:filename_or_stream}, ${2:handler}, ${3:error_handler})
    # Create a SAX parser and use it to parse a document.  The document, passed in asfilename_or_stream, can be a filename or a file object.  The 
    # https://docs.python.org/2/library/xml.sax.html
snippet xml_sax_parseString string_handler_error_handler
abbr Similar to parse(), but parses from a buffer string received as aparameter.
alias parseString
    xml.sax.parseString(${1:string}, ${2:handler}, ${3:error_handler})
    # Similar to parse(), but parses from a buffer string received as aparameter.
    # https://docs.python.org/2/library/xml.sax.html



snippet xml_sax_saxutils_escape data_entities
abbr Escape '&', '<', and '>' in a string of data.
alias escape
    xml.sax.saxutils.escape(${1:data}, ${2:entities})
    # Escape '&', '<', and '>' in a string of data.
    # https://docs.python.org/2/library/xml.sax.utils.html
snippet xml_sax_saxutils_unescape data_entities
abbr Unescape '&amp;', '&lt;', and '&gt;' in a string of data.
alias unescape
    xml.sax.saxutils.unescape(${1:data}, ${2:entities})
    # Unescape '&amp;', '&lt;', and '&gt;' in a string of data.
    # https://docs.python.org/2/library/xml.sax.utils.html
snippet xml_sax_saxutils_quoteattr data_entities
abbr Similar to escape(), but also prepares data to be used as anattribute value.  The return value is a quoted version of data with anyadditiona
alias quoteattr
    xml.sax.saxutils.quoteattr(${1:data}, ${2:entities})
    # Similar to escape(), but also prepares data to be used as anattribute value.  The return value is a quoted version of data with anyadditiona
    # https://docs.python.org/2/library/xml.sax.utils.html
snippet xml_sax_saxutils_prepare_input_source source_base
abbr This function takes an input source and an optional base URL and returns afully resolved InputSource object ready forreading.  The input sou
alias prepare_input_source
    xml.sax.saxutils.prepare_input_source(${1:source}, ${2:base})
    # This function takes an input source and an optional base URL and returns afully resolved InputSource object ready forreading.  The input sou
    # https://docs.python.org/2/library/xml.sax.utils.html

snippet xmlrpclib_boolean value
abbr Convert any Python value to one of the XML-RPC Boolean constants, True orFalse.
alias boolean
    xmlrpclib.boolean(${1:value})
    # Convert any Python value to one of the XML-RPC Boolean constants, True orFalse.
    # https://docs.python.org/2/library/xmlrpclib.html
snippet xmlrpclib_dumps params_methodname_methodresponse_encoding_allow_none
abbr Convert params into an XML-RPC request. or into a response if methodresponseis true. params can be either a tuple of arguments or an instanc
alias dumps
    xmlrpclib.dumps(${1:params}, ${2:methodname}, ${3:methodresponse}, ${4:encoding}, ${5:allow_none})
    # Convert params into an XML-RPC request. or into a response if methodresponseis true. params can be either a tuple of arguments or an instanc
    # https://docs.python.org/2/library/xmlrpclib.html
snippet xmlrpclib_loads data_use_datetime
abbr Convert an XML-RPC request or response into Python objects, a (params,methodname).  params is a tuple of argument; methodname is a string, o
alias loads
    xmlrpclib.loads(${1:data}, ${2:use_datetime})
    # Convert an XML-RPC request or response into Python objects, a (params,methodname).  params is a tuple of argument; methodname is a string, o
    # https://docs.python.org/2/library/xmlrpclib.html

snippet zipfile_is_zipfile filename
abbr Returns True if filename is a valid ZIP file based on its magic number,otherwise returns False.  filename may be a file or file-like object 
alias is_zipfile
    zipfile.is_zipfile(${1:filename})
    # Returns True if filename is a valid ZIP file based on its magic number,otherwise returns False.  filename may be a file or file-like object 
    # https://docs.python.org/2/library/zipfile.html



snippet zlib_adler32 data_value
abbr Computes a Adler-32 checksum of data.  (An Adler-32 checksum is almost asreliable as a CRC32 but can be computed much more quickly.)  If val
alias adler32
    zlib.adler32(${1:data}, ${2:value})
    # Computes a Adler-32 checksum of data.  (An Adler-32 checksum is almost asreliable as a CRC32 but can be computed much more quickly.)  If val
    # https://docs.python.org/2/library/zlib.html
snippet zlib_compress string_level
abbr Compresses the data in string, returning a string contained compressed data.level is an integer from 0 to 9 controlling the level of compres
alias compress
    zlib.compress(${1:string}, ${2:level})
    # Compresses the data in string, returning a string contained compressed data.level is an integer from 0 to 9 controlling the level of compres
    # https://docs.python.org/2/library/zlib.html
snippet zlib_compressobj level_method_wbits_memlevel_strategy
abbr Returns a compression object, to be used for compressing data streams that won’tfit into memory at once.  level is an integer from 0 to 9 co
alias compressobj
    zlib.compressobj(${1:level}, ${2:method}, ${3:wbits}, ${4:memlevel}, ${5:strategy})
    # Returns a compression object, to be used for compressing data streams that won’tfit into memory at once.  level is an integer from 0 to 9 co
    # https://docs.python.org/2/library/zlib.html
snippet zlib_crc32 data_value
abbr Computes a CRC (Cyclic Redundancy Check)  checksum of data. If value ispresent, it is used as the starting value of the checksum; otherwise,
alias crc32
    zlib.crc32(${1:data}, ${2:value})
    # Computes a CRC (Cyclic Redundancy Check)  checksum of data. If value ispresent, it is used as the starting value of the checksum; otherwise,
    # https://docs.python.org/2/library/zlib.html
snippet zlib_decompress string_wbits_bufsize
abbr Decompresses the data in string, returning a string containing theuncompressed data.  The wbits parameter controls the size of the windowbuf
alias decompress
    zlib.decompress(${1:string}, ${2:wbits}, ${3:bufsize})
    # Decompresses the data in string, returning a string containing theuncompressed data.  The wbits parameter controls the size of the windowbuf
    # https://docs.python.org/2/library/zlib.html
snippet zlib_decompressobj wbits
abbr Returns a decompression object, to be used for decompressing data streams thatwon’t fit into memory at once.  The wbits parameter controls t
alias decompressobj
    zlib.decompressobj(${1:wbits})
    # Returns a decompression object, to be used for decompressing data streams thatwon’t fit into memory at once.  The wbits parameter controls t
    # https://docs.python.org/2/library/zlib.html

